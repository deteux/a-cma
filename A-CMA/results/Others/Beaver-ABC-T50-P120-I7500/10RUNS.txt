====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3189.36 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1804187

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.175467
  * Possible Actions: 622
  * Applied Actions: 480
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9445
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3368
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7579
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9789
    * staticness: 0.1589
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.5000
    * iC_Par: 2.6526
    * eC_Par: 3.2526
    * Dep_In: 5.7263
    * avrgMethodVisibility: 1.7177
    * Dep_Out: 5.6316
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.006831][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [29.008289][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [28.997103][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.998904][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.998904][Make Class Final] beaver.comp.State
  - [28.983599][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.972082][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.983076][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [28.932097][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [28.930567][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.941560][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [28.952554][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [28.958582][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [28.965179][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.969551][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.968021][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.952716][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.896972][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [28.901470][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [28.875885][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [28.801694][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [28.762322][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [28.755726][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.749130][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.734379][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [28.658229][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [28.643150][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [28.625872][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [28.614355][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.575799][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [28.569203][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.562239][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.546935][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [28.542562][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.518112][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [28.499631][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [28.433669][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.419167][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [28.391401][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.379703][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [28.375330][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.373800][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.367204][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.351899][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.345777][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.343510][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.335857][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.331485][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.328084][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.262121][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.254469][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [28.249729][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [28.248199][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.245138][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.237486][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [28.222181][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.190770][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.181347][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [28.181224][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.176851][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.170255][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.168724][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.157730][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [28.156106][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [28.152280][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.135419][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.128931][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.127400][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.112096][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [28.108269][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [28.103168][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.038287][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [28.036757][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.035783][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [28.034252][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.969371][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.964270][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.964127][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.846793][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.842967][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.837706][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [27.831110][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.830388][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.764426][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.736280][Make Class Abstract] beaver.comp.Action
  - [27.734669][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.729567][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.714263][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.658802][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.652094][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.621267][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.617441][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.615830][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.612429][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.609368][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.604996][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.601169][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.534089][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.527882][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.511942][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.508882][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.506574][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.506128][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.499419][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.495047][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.493246][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.489420][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.458594][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.456793][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.452967][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.443384][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.435732][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.425529][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.415326][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.413525][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.410678][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.400475][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [27.385171][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.377742][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.374218][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.370392][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.363057][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.355405][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.351579][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.344520][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.343142][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.341101][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.315207][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.314308][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.312395][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.309491][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [27.306436][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [27.272896][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.288650][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [27.291432][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.308202][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.303830][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.334095][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [27.345016][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [27.360359][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [27.361920][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.392185][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [27.388029][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.393423][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [27.410194][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [27.426893][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [27.436843][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.424038][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.424038][Make Class Final] beaver.comp.Action$Reduce
  - [27.428189][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.470061][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [27.471974][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.473476][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.463273][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.447968][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.443597][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.438496][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.426869][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.424828][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.420455][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.414334][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.404751][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.401330][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.386025][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.384112][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.379011][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.378449][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.368246][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.365575][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.361202][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.338842][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.305302][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.300929][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.298889][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.297497][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.255438][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.245235][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.235032][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.229930][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.225540][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.191324][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [27.179006][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.163702][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [27.153499][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.143296][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.138194][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.130542][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [27.119919][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.112266][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.108040][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.101918][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.099849][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.084208][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.078509][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.077845][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [27.067642][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.039496][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.037310][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.029657][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.025999][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.017626][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.002322][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.000409][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.997598][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.992497][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.983314][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.973111][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.965459][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.948968][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.938765][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.936852][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.934665][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.927013][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.925389][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.912197][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.907824][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.905637][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.895434][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.893248][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.882568][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.872365][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.870908][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.866973][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.801011][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.785706][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.770402][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.760199][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.756021][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.755704][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.753403][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.745829][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [26.679867][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.664562][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.726847][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.734499][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.735254][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [26.753380][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.766573][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.773169][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.896270][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.900643][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.900643][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.906038][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.910189][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.912230][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.930889][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [26.932689][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.934490][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.934490][Make Class Final] beaver.comp.Action$List
  - [26.943099][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.945876][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.945876][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.948658][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.944604][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.912164][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.901961][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.789312][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.767325][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.752020][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.749573][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [26.747660][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.744599][Increase Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.736947][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.734409][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.673718][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.659561][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.641435][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.640372][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.638285][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.636585][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.626382][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.622009][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.614156][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.609783][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.607870][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.606455][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.596252][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.580947][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.579034][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.574661][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.512376][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.508004][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.506090][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.504177][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.496525][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.492540][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.501825][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.505464][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.515667][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.525041][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.526842][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.528993][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.534095][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.542340][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.550448][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [26.552248][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.565441][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.567663][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [26.580855][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.583638][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.592923][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.592923][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.602297][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.612995][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.675280][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.685483][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.623198][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.616176][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.611803][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.607918][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.552557][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.422690][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.420098][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [26.417152][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.415351][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.400046][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.356684][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [26.346481][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.360161][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.365263][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.498066][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.507351][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.513473][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.511848][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.527153][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.549513][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.616593][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.621018][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.637788][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.570708][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.579993][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.584365][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.588192][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.594313][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.602698][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.602806][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.610458][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.614097][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.612184][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.598768][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.596855][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.592168][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [26.525088][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.458008][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.448425][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.433120][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.410760][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.309800][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.356225][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to static 
  - [26.365510][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.399628][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.413275][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.420354][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [26.428006][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.428006][Make Class Final] beaver.comp.State$Factory
  - [26.416633][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.420785][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.427608][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.436138][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.486160][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.487785][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.496314][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.505688][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.527892][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.532624][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.551283][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.553196][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.568539][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.564166][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.559793][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.537048][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.521743][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.506438][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.491862][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.489530][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.487198][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.480816][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.470613][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.462961][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.459135][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.442075][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.407957][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.403037][Inline Method] beaver.spec.ast.Declaration$ClassName.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$ClassName.accept(beaver.spec.ast.TreeWalker)
  - [26.393563][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.391938][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.376633][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.368104][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.357901][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.351779][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [26.351209][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.294345][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.288223][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.284397][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.280570][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.272918][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.259271][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.256428][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.254400][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.244197][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.228892][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.222183][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.225584][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.241238][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.248181][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.249882][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.257317][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.259492][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [26.261533][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.284677][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.303191][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [26.326855][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [26.338427][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.340613][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [26.343674][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.350618][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.354990][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.387860][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [26.397779][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [26.399432][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.408205][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.419777][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.404473][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.402820][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.348559][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.341616][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.339746][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [26.317092][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.297637][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.274493][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.264574][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.261278][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.191844][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.261278][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.263191][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.280549][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.291471][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.293657][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [26.291744][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.300323][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.303580][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.304401][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.309503][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.319422][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [26.333796][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.335596][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.365862][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.375869][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.382813][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.370156][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.404873][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.406526][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.421869][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [26.413179][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.408806][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.398603][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.391535][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.385725][Remove Method] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.384039][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.313365][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.310470][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.278466][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.275405][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.274652][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.269550][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.261898][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.256796][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.249144][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.241492][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.239579][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.236518][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.233021][Remove Method] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.232846][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [26.225194][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [26.223521][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.221847][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.203858][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.191864][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.184212][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PRIVATE'
  - [26.179839][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.175467][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3238.67 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1805379

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.933672
  * Possible Actions: 581
  * Applied Actions: 655
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8853
    * NOC: 0.4731
    * numInterf: 0.0000
    * abstractness: 0.1059
    * packagenesting: 1.5000
    * getters: 0.3656
    * NumAssEl_ssc: 0.0000
    * numOps: 4.9355
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0538
    * staticness: 0.2044
    * numCls: 11.6250
    * numFields: 3.2366
    * NumDesc: 1.1075
    * numOpsCls: 57.3750
    * iC_Par: 2.6774
    * eC_Par: 3.4409
    * Dep_In: 6.1075
    * avrgMethodVisibility: 1.7149
    * Dep_Out: 5.7312
    * setters: 0.1398
    * iFImpl: 0.0000
    * eC_Attr: 1.0108
    * nesting: 0.6022
    * numConstants: 0.9032
    * NumAnc: 1.1075

* Applied Actions:
  - [29.017034][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [29.017034][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.940884][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [28.928138][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.929672][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.886015][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [28.892611][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [28.903605][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [28.905178][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [28.907533][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.909887][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.902923][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.892799][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.894023][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.887060][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.909047][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [28.876639][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [28.860415][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [28.882403][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.868998][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.856252][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [28.816880][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to static 
  - [28.805363][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.803829][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.727679][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [28.707348][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [28.696872][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.693470][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.677311][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.675780][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.648014][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [28.635268][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [28.584290][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [28.582759][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.569449][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.562486][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.550835][Introduce Factory] for beaver.Symbol.<init>()
  - [28.549304][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.529243][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.525746][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.489859][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [28.479656][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.478930][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.456942][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.453854][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [28.447732][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.440496][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [28.425820][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [28.424289][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.358327][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.343022][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.337921][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.334860][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.333584][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.311597][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [28.301394][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [28.297021][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.290805][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [28.284209][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.277613][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.276206][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.275244][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.265041][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [28.243054][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.239673][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [28.236655][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.205828][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.177682][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.171086][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.164490][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.162879][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.159478][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.157016][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.155685][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.142493][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.134944][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [28.133243][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.131543][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.109555][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.103061][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [28.098457][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [28.094085][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.078780][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.076811][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.075480][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.073490][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [28.070971][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [28.067340][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [28.059688][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [28.058624][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.048421][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.043319][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.041406][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.031203][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.015898][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.008246][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [28.003931][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.993728][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [27.990709][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [27.987379][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.983006][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.867045][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.865132][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.860760][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.853702][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.786622][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.783221][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.781308][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.776935][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.754575][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.687494][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.683122][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.560463][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.545159][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.519265][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.515864][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.493181][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.489780][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.486379][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.480257][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.470783][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.463131][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.396051][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.392650][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.377345][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.345543][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.340441][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.338528][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.323224][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.307919][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.306021][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.305530][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.290226][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.285124][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.293287][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [27.319267][Introduce Factory] for beaver.spec.GrammarBuilder$DeclarationWalker.<init>()
  - [27.308274][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.314329][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.317968][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.307765][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [27.297562][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.298893][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.312085][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.321509][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [27.327371][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [27.329558][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [27.339794][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [27.341328][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.344967][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [27.361667][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [27.383655][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [27.384635][Introduce Factory] for beaver.Symbol.<init>(short)
  - [27.391692][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [27.421958][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [27.420627][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.384044][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.381024][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.376651][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.376090][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.360785][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.349791][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.334487][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.330114][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.303415][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.295763][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.294139][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [27.286486][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.282451][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [27.280538][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.265233][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.262172][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.256050][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.240746][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [27.230543][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [27.227551][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.224150][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.213947][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PRIVATE'
  - [27.212034][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.210110][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.205737][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.196314][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [27.188428][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.186514][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.178862][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [27.171210][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.153137][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [27.149005][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.144632][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.135265][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.131864][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.118888][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.103583][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.088279][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.078076][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [27.071954][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.056649][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.053864][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.025719][Make Class Abstract] beaver.comp.Action
  - [26.999468][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.996407][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.985376][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.977724][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.974603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.972689][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.968863][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.965592][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.963462][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.950627][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.942975][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.939149][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.923844][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.923012][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.907831][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.906206][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.901834][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.899921][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.893799][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.892175][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.876870][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.872497][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.871201][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.869288][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.853983][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.849610][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.840478][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.830275][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.895359][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [26.895359][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.904064][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.905977][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.907677][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.910738][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.943179][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.951284][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.960658][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [27.021922][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.023835][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.023835][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [27.046571][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [27.053623][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [27.063728][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.079948][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.083206][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [27.101865][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [27.108518][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.105073][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.040192][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.035820][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.019599][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [27.009396][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.001744][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.995622][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.991975][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.986342][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.984642][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.976990][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.967721][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.902840][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [26.900312][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.897322][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.893974][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.887852][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.885185][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [26.882831][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.817950][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.801281][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.791078][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.729814][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.726904][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.707169][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.704108][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.707747][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.710298][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.707944][Increase Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.769207][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.772268][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.776641][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.787455][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.798844][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [26.788641][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.794826][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [26.799324][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.801237][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.807725][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [26.817928][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [26.822301][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.835277][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.955804][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.002229][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [27.014996][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.028697][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.GrammarBuilder$3'
  - [27.025636][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.014363][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [27.008241][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.004256][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.988952][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.973647][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.963008][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.865912][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.865304][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.859182][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [26.797918][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.776291][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.763315][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.757193][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.752913][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.750003][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.668425][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.635985][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.626976][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.620854][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.614732][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [26.610906][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.608551][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.606197][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.605691][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.599569][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.597214][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.589366][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.586566][Remove Method] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.ast.Declaration$TypeOf'
  - [26.578914][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.546474][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.548174][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [26.671034][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.677194][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.678714][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.681775][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.689754][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.694820][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.684617][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.693322][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.693322][Make Class Final] beaver.comp.Configuration$Set
  - [26.700069][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.706452][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.712835][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.744753][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.749854][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.749854][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.770122][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.Action$Shift)' of type 'beaver.comp.State'
  - [26.782889][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.789273][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.819538][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [26.793058][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.761141][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.638960][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.574079][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.509198][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.525418][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.534123][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.539330][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [26.569595][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [26.578914][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.586566][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.597380][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.597380][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.619007][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.636060][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.637861][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [26.643982][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.643982][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.654186][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.658337][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.664459][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.670947][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.681376][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.683076][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.699297][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.693175][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.682361][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.660734][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.653082][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.620642][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.610438][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.607284][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.478975][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.494280][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.503654][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.503654][Make Class Non-Final] beaver.ParsingTables
  - [26.509776][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.516385][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.519569][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [26.536059][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [26.519569][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.530563][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.545867][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.552027][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.559680][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [26.606104][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to static 
  - [26.614350][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.676673][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.687458][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.710760][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.720134][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.745263][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.748902][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.741250][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.738941][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.725748][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.714755][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.707102][Increase Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.691798][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.690189][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.682537][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.680624][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.674502][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.670676][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.648688][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.639893][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.636416][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.618053][Inline Method] beaver.spec.ast.Declaration$Terminals.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [26.586643][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.571338][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.567457][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [26.563084][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.500799][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.498016][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.432054][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.422631][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.407743][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.390973][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.387146][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.385233][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.359679][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.451400][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.514740][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.525828][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [26.521409][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.529653][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [26.546423][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.548243][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.554951][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.571721][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.574576][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [26.584889][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.610150][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [26.612728][Decrease Method Security] 'encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.623041][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.653680][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [26.667096][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.677409][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [26.688589][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.686427][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.380206][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.372196][Remove Method] 'makeDescription(java.lang.String)' of type 'beaver.comp.State'
  - [26.361884][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.350704][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.346836][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.333420][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.329553][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.337288][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [26.345774][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.359190][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.367575][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.383044][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.399814][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.402908][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.419678][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.423875][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.430583][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.439381][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.473156][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.475089][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.491860][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.494953][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.504429][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [26.500009][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.518442][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.531858][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.539593][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.517677][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.515743][Increase Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.510587][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.492154][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.481841][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.479013][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [26.462243][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.445473][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.435160][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.433037][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.428617][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.411558][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.401245][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.400627][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.366852][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.302419][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.292107][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.287687][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.285899][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.285899][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.286268][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.290464][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.290464][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.296929][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.299741][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.309489][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [26.319238][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [26.322050][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.327712][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.361811][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [26.363436][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.371687][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [26.376843][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.383667][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.391863][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.389050][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.414386][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.417480][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.417480][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.278946][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.268634][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.236289][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.244968][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.246687][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.248340][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.251434][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.262474][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.268661][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.297030][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.GrammarBuilder$RuleWalker) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [26.300249][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [26.357680][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [26.360774][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.363211][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.347742][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.354685][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [26.492921][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.553403][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.576149][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.677703][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.675517][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [26.682341][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.690676][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.622439][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.622043][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.622037][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.553800][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [26.547545][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.530984][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.524602][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.501856][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.364232][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.051853][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [26.023196][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.023182][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.020885][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.019191][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.012248][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.012231][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.017744][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.026030][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [26.029504][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.031151][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.035393][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.070110][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.072344][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [26.073990][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.080245][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.083088][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.090907][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.085694][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.096854][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [26.105120][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.106766][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.154201][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [26.161144][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.165387][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.176959][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.181745][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.181447][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [26.174504][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.171377][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.161457][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [26.154514][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.144595][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [26.136776][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.129833][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.122889][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.115946][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.100309][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.099452][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [26.089027][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.085118][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.078174][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.071231][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.040651][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.005934][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [25.990296][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [25.986387][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.990110][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [26.000274][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [25.989849][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [25.991385][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.002545][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.005672][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.007366][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.012201][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.046918][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.049003][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.049003][Make Class Final] beaver.comp.Action$Reduce
  - [26.062890][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.064584][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.069419][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.074632][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.090269][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.101429][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [26.104272][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.104272][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.111150][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.104207][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.102839][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.099712][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.097367][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.095282][Increase Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.084857][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.079644][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.044927][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.037984][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.024097][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.013672][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.006729][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [25.991092][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [25.984148][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.976330][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [25.975800][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [25.974107][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.960220][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [25.959796][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.962364][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.005147][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [26.143522][Move Down Field] 'elements' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [26.143522][Move Down Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its child class 'beaver.spec.ast.Declaration$TypeOf'
  - [26.143522][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.156658][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.160567][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.170146][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [26.185276][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.198923][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.203751][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.203751][Make Class Final] beaver.comp.Configuration
  - [26.215511][Move Method] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.215511][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [26.225527][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.229756][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.244435][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.254183][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.261006][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.255546][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.251636][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.183399][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.115162][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.046926][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.033278][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.019631][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.003994][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.001909][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [25.933672][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3308.97 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1806867

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.705372
  * Possible Actions: 616
  * Applied Actions: 526
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8941
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7158
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.1531
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 56.0000
    * iC_Par: 2.6737
    * eC_Par: 3.2842
    * Dep_In: 5.7368
    * avrgMethodVisibility: 1.6656
    * Dep_Out: 5.6737
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.950862][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [28.856847][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [28.849883][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.848353][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.837167][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.847370][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [28.830155][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.826608][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.819644][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.820107][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.818577][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.807059][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.788579][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [28.788579][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.770098][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [28.771322][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.787813][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [28.801005][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.802539][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.790248][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.780395][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [28.747987][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.731827][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.686767][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [28.670529][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [28.596338][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [28.586214][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.558448][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [28.542288][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [28.535692][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.532291][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.526169][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.475190][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [28.462900][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [28.452697][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [28.447595][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.440999][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.437548][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.324129][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.310713][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.306053][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.298400][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [28.270255][Make Class Abstract] beaver.comp.Action
  - [28.247894][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.217068][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.216092][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.200787][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.184017][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [28.183893][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.172713][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.166591][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.161490][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.153838][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [28.150437][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.135132][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.128424][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.125912][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [28.119204][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.113082][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.111471][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.101268][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.096895][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.095284][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.087391][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [28.085690][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.075487][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.072086][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.043337][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.028033][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.021325][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.019624][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.988798][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.982090][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.978689][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.963384][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.962109][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.960408][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.959393][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [27.956374][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.945920][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.941547][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.934839][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.931438][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.924730][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.909425][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.908095][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.904694][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.901293][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.899592][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.895020][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.884817][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.880444][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.878744][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.868541][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.801460][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.786156][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.782755][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.767450][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.764657][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.754454][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [27.753123][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.751792][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.751669][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.749839][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.748215][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [27.732910][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.710550][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.708850][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.707149][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.699242][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.689039][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.678836][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [27.678582][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.663341][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.597379][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.531417][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.531017][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.526644][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.438583][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.434210][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.432409][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.430799][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.426426][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.393557][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.393505][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [27.390485][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.389155][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.384053][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log,beaver.comp.run.Make)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.376401][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.373000][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.357695][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.342391][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.276428][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.274628][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.257604][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.255980][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [27.245777][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [27.240675][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.238762][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.236849][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.235048][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.230412][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.164450][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.149146][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.147105][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.118959][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.115248][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.113207][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.097903][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.092801][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.090761][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.083108][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [27.082948][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.078576][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.071979][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.071835][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.069921][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.067205][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.062832][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.996870][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.987447][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.977244][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.969591][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.960168][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.943844][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.877882][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.863306][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.857184][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.852083][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.836778][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.829126][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.818923][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.813821][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.806169][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.809505][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [26.815128][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.826122][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.837116][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.862428][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.869167][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.876123][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [26.887117][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [26.922300][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.923802][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.930398][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.931968][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.936120][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.947041][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.957963][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [27.023047][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [27.036239][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.014252][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.025173][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [27.026454][Introduce Factory] for beaver.Symbol.<init>()
  - [27.024884][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.018287][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.015175][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.011440][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [27.007303][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [27.005263][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [26.979012][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.976826][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.964015][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.897307][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [26.892934][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.891542][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.890473][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.880270][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.814308][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.812679][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.801555][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.786250][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [26.770946][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.730076][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.726756][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.719242][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.844267][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.865894][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.874503][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.871102][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.878754][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [26.880259][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.880259][Make Class Final] beaver.comp.Configuration$Set
  - [26.893235][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.895276][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.896655][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.889925][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.899299][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.906951][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.906951][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.910012][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.897036][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.898890][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [26.901673][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.904734][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.910129][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [26.907516][Move Method] 'compile(beaver.comp.util.Log,beaver.comp.run.Make,beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.901394][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.893742][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.891914][Move Method] 'compile(beaver.comp.run.Make,beaver.comp.run.Options,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [26.859474][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.858725][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.837953][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.831196][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.718556][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.705363][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.703739][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.687537][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.674345][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.669243][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.657616][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.644666][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.641405][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.637915][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [26.633542][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.631629][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.628228][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.622718][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [26.610381][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.595077][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.593163][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.582960][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.576809][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.569157][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.553852][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.548751][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.533446][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.529073][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.525439][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [26.512604][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.497299][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.495386][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.492604][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.482401][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.477299][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.473473][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.465276][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.460174][Increase Method Security] 'compile(beaver.comp.run.Options,beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.456991][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.449339][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.446407][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.420513][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.420420][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.407227][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.394035][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.391252][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.388469][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.373165][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.374735][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.378643][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.376602][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.409584][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.415705][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.508562][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.508562][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.500910][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.504736][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.506281][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.522501][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.526327][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.549629][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.549629][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.593940][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [26.597198][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [26.606466][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [26.606466][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.638907][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.703788][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.671347][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.669434][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.666651][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.656448][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.652076][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.651699][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.642430][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [26.577549][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.573159][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.557854][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [26.555941][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.491060][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [26.487854][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.481194][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.470380][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.468467][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.466885][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.384023][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.382110][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.376296][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [26.366093][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.358441][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.343136][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.339031][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.331378][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.309391][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.294086][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.278782][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PACKAGE'
  - [26.284279][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.295200][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [26.299351][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.337158][Inline Method] beaver.spec.ast.Declaration$Terminals.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [26.333302][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.340954][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.345105][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.348403][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.361065][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.372058][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.378180][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.418415][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.441716][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [26.451919][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.459355][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.477410][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.484447][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.500937][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.524239][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [26.530364][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.530310][Remove Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.528270][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.462307][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [26.459525][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.449322][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.430102][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.419108][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.386127][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.384086][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.373883][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.340902][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.334780][Increase Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.206655][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.203873][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.170333][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.168292][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.147762][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.171447][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [26.179976][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [26.182017][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.203504][Instantiate Method] Move static method 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [26.197048][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.207970][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.201538][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.211783][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [26.246602][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to static 
  - [26.263661][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.293927][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.306783][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [26.348654][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.449247][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.452030][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.453020][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.454740][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.478042][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [26.480824][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.491027][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.457487][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.442183][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.375102][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [26.373062][Increase Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.365356][Remove Method] 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of type 'beaver.comp.io.SrcReader'
  - [26.363636][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.361595][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.293386][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.283183][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.278114][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.271992][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.261789][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.201099][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.196685][Instantiate Method] Move static method 'writeListsCode(beaver.spec.GrammarBuilder)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.192858][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.175799][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [26.112436][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.110290][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.094986][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.076182][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.009473][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [26.001821][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [25.998478][Remove Method] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.994652][Increase Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.895952][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.894962][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [25.891561][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [25.872883][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.869057][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.827436][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.823609][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.806550][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [25.788345][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.787355][Inline Method] beaver.spec.GrammarBuilder.writeListsCode() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [25.777152][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [25.761847][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PRIVATE'
  - [25.764908][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [25.807260][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.810321][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [25.825664][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [25.830355][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [25.835750][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [25.845175][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [25.849548][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.851734][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.856810][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [25.879955][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.895966][Instantiate Method] Move static method 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [25.899224][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [25.913111][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.916098][Inline Method] beaver.spec.ast.Declaration$Implements.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [25.918875][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [25.924270][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [25.931213][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.937335][Decrease Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [25.939521][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [25.929318][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [25.914014][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [25.895392][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.876610][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [25.874255][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [25.869702][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [25.859499][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [25.855716][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [25.845513][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [25.803305][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [25.800244][Increase Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PACKAGE'
  - [25.776686][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [25.767351][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [25.765164][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.722056][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.757393][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [25.771528][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [25.791995][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [25.794778][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [25.796502][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.796502][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.799052][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.799052][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [25.801829][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [25.837166][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [25.860468][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [25.867535][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.871733][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [25.878800][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [25.889722][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [25.903857][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [25.910924][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.910924][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.928593][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [25.938689][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [25.923384][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [25.920834][Increase Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [25.917773][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [25.910409][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [25.892740][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [25.880530][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.732859][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.720074][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [25.715701][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.711875][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.711382][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [25.707981][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.705794][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.684002][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.755961][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [25.782646][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [25.787747][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.772443][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [25.774994][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.790073][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [25.862032][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.867427][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [25.867427][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.882770][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [25.892973][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [25.936953][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.944605][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [25.947156][Decrease Method Security] 'countReferencedSymbols()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [25.949939][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.954670][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [25.972660][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [25.973586][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [25.980782][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [25.908823][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [25.908815][Move Method] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [25.872835][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [25.858443][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [25.840454][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [25.768495][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.751762][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [25.749351][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.705372][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3152.06 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1803457

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.600512
  * Possible Actions: 647
  * Applied Actions: 550
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8967
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3404
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7447
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0213
    * staticness: 0.1565
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 55.7500
    * iC_Par: 2.6489
    * eC_Par: 3.1489
    * Dep_In: 5.6489
    * avrgMethodVisibility: 1.6745
    * Dep_Out: 5.6702
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [29.006831][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [29.016254][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [29.003062][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [29.006654][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [29.003106][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.926956][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [28.893864][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [28.817714][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [28.834204][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [28.838030][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [28.763839][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [28.734913][Introduce Factory] for beaver.Parser$Events.<init>()
  - [28.844701][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [28.829396][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [28.823227][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.809822][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [28.808292][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.821268][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [28.793502][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [28.723865][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [28.715736][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [28.705379][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.631188][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [28.603422][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [28.600361][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.596535][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.596095][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [28.592477][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.588651][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.587120][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.586997][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.583171][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.579345][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.572856][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.566735][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.560247][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.527806][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [28.522429][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [28.516307][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.509819][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.509132][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [28.504759][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.501022][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.496649][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.495119][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.491718][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.488964][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [28.485563][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.483862][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.453036][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.420596][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [28.419065][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.390919][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [28.389389][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.387858][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.322977][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.303752][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.300351][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.293968][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.287584][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.223750][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [28.216581][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [28.215050][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.209949][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.205576][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.190271][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.184149][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.168845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [28.167361][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.165830][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.155627][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.146391][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [28.131086][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.127685][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.127253][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.126651][Move Down Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.126557][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.120174][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.109971][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [28.108270][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.098067][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [28.089064][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [28.085313][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [28.083400][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.073197][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [28.070710][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.055405][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [28.047753][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [28.047279][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [28.016452][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [28.001148][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.997877][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.993504][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.982865][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.967560][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.946282][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.936079][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.920774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.919444][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.904139][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.900741][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.836906][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [27.833846][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.832748][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.830835][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.829211][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.801853][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.798792][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.791140][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.787739][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.785826][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.782480][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.776358][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.774445][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.771498][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.767126][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.762753][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.761403][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.756302][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.755947][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.751163][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.743511][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.741598][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.738588][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.738473][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.730691][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.698774][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.634939][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [27.630567][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.628654][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.613349][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.608063][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [27.606150][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.602729][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.601903][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [27.592720][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.592545][Move Down Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.577240][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.576953][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.574766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.542849][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.532646][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [27.515772][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.513417][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.512026][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.496721][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.432887][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.429765][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.425393][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.423875][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.420474][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.416101][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.352266][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.342063][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [27.332944][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.269110][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.266755][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.257636][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.244869][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.229564][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.142349][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.137247][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.133976][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.105830][Make Class Abstract] beaver.comp.Action
  - [27.103917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.088613][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.086700][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.071395][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.069040][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.058837][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.048634][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.033330][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.030975][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.027574][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.018156][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [27.013783][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.012356][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.009805][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.999602][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.995229][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.979925][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.978394][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.968887][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [26.967507][Introduce Factory] for beaver.Symbol.<init>()
  - [26.958139][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.956226][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.940241][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [26.933444][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [26.931531][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.923879][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.908574][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.893269][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.867375][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.852071][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.836766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.839827][Decrease Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.841357][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.865043][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [26.884365][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.892473][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.903395][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.906796][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.910053][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.915155][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.940441][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [26.942852][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.030067][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.046672][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [27.062631][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [27.075398][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.139232][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PUBLIC'
  - [27.204316][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [27.204316][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.206357][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [27.237471][Instantiate Method] Move static method 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [27.227268][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.223867][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.105728][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.103687][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.093484][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [27.083281][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [27.049154][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.045753][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.029263][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [27.019060][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.017147][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.013746][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.991758][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.989845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.988221][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.980373][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.970170][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.968129][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.966216][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.944229][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.928924][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.927011][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.925387][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.921986][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.911783][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.906681][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.901580][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.896083][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.863102][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.849061][Instantiate Method] Move static method 'propagateTypes(beaver.spec.GrammarBuilder)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.845065][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [26.842733][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [26.842591][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.832555][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.831558][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.829645][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.827732][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.805830][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.791184][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [26.788105][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.785300][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.775097][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.767445][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.764044][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.753841][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.751928][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.685965][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.680897][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.556732][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.555588][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.553977][Increase Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.543774][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.541733][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.526429][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.523099][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.521059][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.517853][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.484313][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.474110][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.463907][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.443783][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.410242][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.402590][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [26.387286][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.335882][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.325896][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.274492][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [26.240952][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [26.230749][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.221345][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.219304][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.217074][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.215033][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.204830][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.191414][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.149888][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.148832][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.141180][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.133527][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.131211][Inline Method] beaver.spec.GrammarBuilder.propagateTypes() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.121008][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.117478][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [26.107275][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.109315][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [26.118689][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.116649][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.118209][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.121922][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.128630][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.149029][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.149029][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.158611][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.162940][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.157838][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.160621][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [26.163682][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.177098][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.177098][Move Down Field] 'name' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$NameContainer'
  - [26.186681][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [26.182308][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.183894][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.167999][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.165959][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.160857][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.158205][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.157921][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.157589][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.155549][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.153293][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.152702][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [26.148329][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.082367][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.053602][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [26.020621][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.987640][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.974447][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [25.971748][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [25.963254][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [25.958881][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.958881][Make Class Final] beaver.comp.Action$Reduce
  - [25.962707][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.973629][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [25.952409][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [25.961783][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [25.971206][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [25.972777][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.973119][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.979241][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [25.987626][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.990021][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.011342][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [26.014743][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.016930][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.032405][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.087622][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [26.102965][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.113886][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.121539][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [26.134955][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.000732][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [25.993079][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [25.992719][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [25.985067][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [25.916830][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [25.907082][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [25.899429][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [25.897842][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.893470][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.889097][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.884028][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [25.883144][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.868879][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [25.866692][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [25.861591][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.859550][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.855782][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [25.853741][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.786080][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [25.777308][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.772935][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.767834][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.773956][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [25.781009][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [25.791212][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [25.792799][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.800676][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [25.809206][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.819409][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [25.823048][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [25.823048][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.824849][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.855114][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to static 
  - [25.868761][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.891507][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [25.898331][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [25.944756][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to static 
  - [25.967501][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [25.961600][Inline Method] beaver.spec.ast.GrammarTreeRoot.visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot) into beaver.spec.ast.GrammarTreeRoot.accept(beaver.spec.ast.TreeWalker)
  - [25.983819][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.987970][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.012334][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [26.002131][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.000078][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [25.989875][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [25.988288][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.974640][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.967494][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [25.959841][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [25.952189][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [25.947088][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [25.944989][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [25.937337][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [25.934276][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [25.924073][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [25.900928][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [25.895827][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.751892][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.741689][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [25.771954][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to static 
  - [25.779022][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [25.802635][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Shift)' of type 'beaver.comp.Action$Shift'
  - [25.804676][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.808077][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [25.817451][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [25.832794][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [25.925879][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [25.927616][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [25.935860][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [25.949995][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.967664][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [25.986572][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [25.990010][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [25.992495][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [25.994429][Decrease Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.998674][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.016342][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.030477][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.040573][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [26.032839][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.031195][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.017240][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.015266][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.709715][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.707356][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [25.722635][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [25.757972][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [25.778585][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [25.783836][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [25.785770][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.788864][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [25.794673][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [25.806692][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [25.804630][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.804630][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.817529][Inline Method] beaver.spec.ast.Declaration$TypeOf.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$TypeOf.accept(beaver.spec.ast.TreeWalker)
  - [25.832998][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [25.903672][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [25.908828][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.916911][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [25.920568][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [25.923237][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [25.989021][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [26.015945][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.039503][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.031862][Instantiate Method] Move static method 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [26.026706][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.003148][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [25.979590][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [25.908916][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [25.894781][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.891343][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [25.873675][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.869255][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.833918][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [25.781966][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [25.766496][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [25.761340][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [25.751027][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [25.736892][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.734830][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.734764][Remove Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.707841][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [25.700709][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [25.698131][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.683912][Remove Method] 'makeDescription(java.lang.String)' of type 'beaver.comp.Action$Reduce'
  - [25.666448][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$LeftAssoc.accept(beaver.spec.ast.TreeWalker)
  - [25.666016][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [25.660860][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.655704][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.650547][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.648337][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.653494][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [25.672354][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [25.691421][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [25.775798][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [25.778611][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.796279][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [25.799373][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [25.809686][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [25.815874][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [25.828154][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [25.832574][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.832574][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.835387][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.849522][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [25.851165][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.861478][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [25.883024][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [25.885836][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.903505][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [25.906599][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [25.814546][Move Method] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [25.796877][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [25.791665][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.786452][Increase Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [25.781066][Remove Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of type 'beaver.comp.util.Log'
  - [25.775854][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.761719][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [25.613077][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.608609][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.615805][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [25.618648][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.642634][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.648889][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [25.666332][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [25.661120][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.663075][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.663075][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [25.686253][Move Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [25.694072][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [25.702407][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [25.705250][Decrease Method Security] 'insertLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [25.707484][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.711852][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [25.713557][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.737987][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.743200][Decrease Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.749455][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [25.763610][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [25.788040][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [25.763610][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [25.749455][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.727368][Move Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [25.722155][Increase Method Security] 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [25.697725][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [25.695491][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.671061][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [25.660636][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [25.658681][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.634251][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [25.627996][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [25.618897][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short)
  - [25.612642][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.602217][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [25.600512][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3106.34 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1802315

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.533689
  * Possible Actions: 667
  * Applied Actions: 521
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8962
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1054
    * packagenesting: 1.5000
    * getters: 0.3617
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7979
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0319
    * staticness: 0.1679
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.3750
    * iC_Par: 2.6489
    * eC_Par: 3.2128
    * Dep_In: 5.6702
    * avrgMethodVisibility: 1.6048
    * Dep_Out: 5.6809
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [29.000235][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [29.009658][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [28.970286][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [29.080236][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [29.064931][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [29.067286][Decrease Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.083506][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [29.077384][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [29.078609][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.085097][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [29.091125][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [29.087299][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [29.057948][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [29.074168][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [29.074168][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [29.058901][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [29.052779][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [29.054237][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [29.040927][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [29.042727][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [29.033459][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [29.017789][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [28.984615][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [28.973098][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.944991][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.917225][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [28.895598][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.878383][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.856421][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [28.835525][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [28.833995][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.807084][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [28.740215][Introduce Factory] for beaver.spec.GrammarBuilder$RuleWalker.<init>()
  - [28.664064][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [28.649563][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [28.629494][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [28.562663][Move Method] 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [28.561132][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.536682][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.522181][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.494415][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [28.470063][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [28.468532][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.467486][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.463113][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.458741][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.393860][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.391344][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.384545][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [28.354031][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.352500][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.350970][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.349440][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [28.339236][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.333115][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.326731][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.323330][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.259496][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [28.256095][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.245892][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.239770][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.238285][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.233184][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [28.169349][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [28.154045][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [28.122128][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.120517][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.118986][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.113885][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.098580][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.090928][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [28.080725][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [28.076352][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [28.012517][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.999751][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.999751][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.996690][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.991588][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.989977][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.984876][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.974673][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.971272][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.967871][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.886274][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.870969][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.806088][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.796932][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.790810][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.783158][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [27.767853][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.762752][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.759351][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.754249][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.689368][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.679165][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.674064][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.667576][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.662474][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.630034][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.628423][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.623321][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.602155][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.600931][Increase Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.534968][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [27.531142][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.527741][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.512437][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.446474][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [27.431170][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.426068][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.417029][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.298997][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [27.292289][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.290678][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.262532][Make Class Abstract] beaver.comp.Action
  - [27.258731][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.191650][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.176346][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.174433][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.165693][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.163780][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.156127][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.155452][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.173691][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [27.171650][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.172874][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.186290][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.192998][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.197371][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.198556][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.208759][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [27.230652][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [27.245956][Decrease Method Security] 'compile(beaver.comp.util.Log,beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [27.233210][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [27.327203][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.336786][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [27.323528][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.233935][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [27.242735][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [27.246378][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.223076][Instantiate Method] Move static method 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.223753][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [27.214953][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.209459][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [27.198333][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [27.194865][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.192952][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.177647][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.177316][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [27.170607][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.163899][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.158299][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [27.152292][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [27.147798][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.080718][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [27.079094][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.077908][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [27.069308][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.064206][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.054003][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PACKAGE'
  - [27.050368][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.040165][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [27.038773][Increase Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.010628][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.003920][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.002006][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.998113][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.988530][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.978327][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.974926][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.972831][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [26.972382][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.970341][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.965240][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.959118][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.943813][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.939440][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.931788][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.929776][Move Method] 'compile(beaver.comp.util.Log,beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.923654][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.917834][Move Down Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [26.902530][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.896408][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.892577][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.825497][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.824321][Move Up Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.809016][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.805190][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.803003][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.802901][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.792698][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.790658][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.786832][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.776629][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.774588][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.767880][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.747474][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.743101][Increase Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.753049][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.773528][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [26.775329][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.777029][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.780669][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.803970][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [26.805501][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.804444][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.817860][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.834560][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [26.845482][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [26.839550][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.841964][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.865266][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [26.868327][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.868327][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.870127][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.876287][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.874247][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.876287][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.872886][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.830079][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.826555][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.824930][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.816130][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [26.812006][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.811560][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.805438][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.783078][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.781037][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.774916][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.768208][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.763905][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [26.757197][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.746994][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.732920][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.731296][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.728235][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.713274][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.709447][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.706441][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.704830][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.701004][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.698963][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.693832][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.677125][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.667542][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.659889][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.645085][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.642534][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.638162][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.632947][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.630038][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [26.626212][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.624601][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.622560][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.612357][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.597052][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.594502][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.591951][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.588125][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.585574][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.583023][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.580983][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.573458][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [26.570675][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.556266][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [26.549991][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [26.538526][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.535125][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.530752][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.527682][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.522903][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.519502][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.509299][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.493994][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.492846][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [26.489254][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [26.480947][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [26.473295][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.458049][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [26.452899][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.437594][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [26.406768][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [26.396565][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.390443][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.382791][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.367486][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [26.350716][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.340513][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.330310][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.320727][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.310524][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.306698][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.306270][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [26.294634][Move Method] 'compile(beaver.comp.util.Log,beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.292833][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.288861][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [26.273557][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [26.271516][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.270037][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [26.254732][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.244529][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.236877][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.230755][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.228153][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition$Element' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.224561][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [26.218857][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.228678][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.238052][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.305132][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.328345][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.339525][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.339525][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.343676][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.345716][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.355091][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.357277][Decrease Method Security] 'compile(beaver.comp.run.Options,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [26.390817][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.393878][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.396939][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.404701][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.409802][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [26.416902][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.419733][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.425205][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.432895][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [26.442478][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.437377][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.427174][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.422072][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.415950][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.405747][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.399039][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.388836][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.382698][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.251044][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.247218][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.245304][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.237652][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.221730][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.219690][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.217649][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.148215][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [26.144389][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.134186][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.123983][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.121942][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.111739][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.105617][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.103759][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [26.101718][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.075824][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.060520][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.058479][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.043174][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.032971][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [26.025506][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.010201][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.008161][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.006120][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.004079][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.000083][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [25.994505][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [25.979200][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [25.977159][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.973758][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.971718][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.970563][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.970563][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.962911][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [25.978254][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [25.981893][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.000552][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to static 
  - [26.010755][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [26.026060][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.031680][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.045567][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.068415][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$4'
  - [26.073810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.115814][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.State'
  - [26.127387][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.130788][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.134427][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.119122][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.108919][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PACKAGE'
  - [26.118293][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.128496][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [26.152935][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.142732][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.115946][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.098733][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.096546][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.090264][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.950587][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.938809][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [25.933367][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [25.931181][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.924113][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.888777][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [25.886000][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.880132][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [25.877946][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.867743][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [25.870804][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [25.901069][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [25.902713][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.900869][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [25.896496][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.910888][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.907827][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [25.905640][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.915843][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [25.925217][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [25.961197][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [25.970192][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [25.984584][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [25.991779][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.048825][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.052464][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.016485][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.059099][Instantiate Method] Move static method 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.095079][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.096752][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.092380][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.056400][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [26.041096][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.039911][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [26.032259][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [26.022056][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.014403][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.005409][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [25.997756][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [25.984571][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [25.972072][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [25.969885][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.933906][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [25.897926][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [25.893554][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [25.857574][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [25.849922][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [25.856975][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [25.892954][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [25.894867][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.897928][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [25.901329][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [25.907451][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [25.909305][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [25.912088][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [25.926869][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.963760][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [25.967161][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [25.971534][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [25.973207][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.991197][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.021462][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.115221][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.115221][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.117155][Decrease Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.144575][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [26.144575][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.141481][Increase Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.095108][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.087373][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.085439][Increase Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.071048][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.068886][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [26.067212][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.064832][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.052839][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [25.783724][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [25.685381][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [25.683728][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [25.647748][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [25.643159][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [25.640779][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.626388][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.618952][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [25.611217][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [25.610617][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.607524][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.600730][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [25.602403][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.613443][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [25.617122][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [25.619700][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [25.654893][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to static 
  - [25.664487][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.667925][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [25.681804][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [25.687258][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [25.686294][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of type 'beaver.spec.GrammarBuilder$3'
  - [25.696607][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [25.715467][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [25.739020][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [25.749300][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [25.750460][Move Method] 'visit(beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.ast.Declaration$Implements' to its parameter type 'beaver.spec.GrammarBuilder$RuleWalker'
  - [25.759935][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [25.770975][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [25.775171][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [25.798724][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [25.794304][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.776201][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [25.775041][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [25.764728][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [25.763606][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [25.727626][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [25.725693][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [25.719505][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [25.694402][Inline Method] beaver.spec.ast.Declaration$ListType.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ListType.accept(beaver.spec.ast.TreeWalker)
  - [25.688214][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [25.680736][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [25.677765][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [25.641785][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [25.637366][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.629631][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [25.619318][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [25.615902][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [25.550796][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [25.545640][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [25.543281][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [25.535752][Instantiate Method] Move static method 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.533689][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3188.74 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1804098

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.004767
  * Possible Actions: 630
  * Applied Actions: 577
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8935
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3368
    * NumAssEl_ssc: 0.0000
    * numOps: 4.7053
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9895
    * staticness: 0.1763
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.8750
    * iC_Par: 2.6526
    * eC_Par: 3.3158
    * Dep_In: 5.7895
    * avrgMethodVisibility: 1.6649
    * Dep_Out: 5.6421
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [28.930681][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [28.924559][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.810834][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [28.803870][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.817287][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.789521][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [28.795261][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [28.756401][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.736373][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [28.747553][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [28.740589][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.736216][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.736088][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.747268][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [28.748828][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.858352][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [28.841137][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.827827][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.811955][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [28.805834][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.781384][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.775203][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.773673][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.742262][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.729971][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.712756][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [28.701239][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.699709][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.623559][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [28.620934][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.554971][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.542225][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.540695][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.501323][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [28.435360][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [28.426994][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.406966][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [28.397032][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [28.392460][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [28.377959][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.308321][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [28.290690][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.283731][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [28.274608][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [28.268120][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.263018][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.259647][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.258036][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.254635][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.189226][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [28.182738][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.167434][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.167427][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.165816][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.150512][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.089248][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [28.058422][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.056811][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.052438][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.037133][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [28.032760][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.030152][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [28.028935][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [28.018122][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [27.989976][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.988352][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.978149][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.974747][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.970375][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.955070][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.924244][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.859363][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.854990][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.848502][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.840850][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.838299][Increase Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.834898][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.833287][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.831676][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.822407][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.816285][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.814674][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.809573][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.744692][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.742779][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.740866][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.736493][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [27.733092][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.727990][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.724153][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.720752][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.692606][Make Class Abstract] beaver.comp.Action
  - [27.687505][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.672200][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.656895][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.641591][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.638190][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.633817][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.568936][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.555960][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.534333][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.526596][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.526409][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.531511][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.539095][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [27.550017][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [27.568676][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [27.570476][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.533893][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.544707][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.560011][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.625095][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [27.628496][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [27.660937][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.674605][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [27.688860][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [27.723494][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [27.725680][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [27.841968][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.840584][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [27.857284][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [27.921118][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [27.930492][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [27.925391][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.922840][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.917738][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.913820][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [27.907437][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.843602][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.835950][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [27.832254][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.831083][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.820880][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.769040][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.737123][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.730740][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.726846][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.724933][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.718811][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.716898][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.716775][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.714862][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.710489][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.678572][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.677954][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.675914][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.673873][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.669759][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [27.659556][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.657515][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.650171][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [27.642832][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.641737][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.637364][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.635906][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.620602][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.611482][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.605099][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.600744][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [27.585837][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.570533][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.560330][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.555957][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.552556][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.542353][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.542062][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [27.537804][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.522705][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.518332][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [27.507693][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [27.484765][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Make,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.run.Make'
  - [27.472937][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [27.470750][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.456983][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.454628][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.448245][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.432940][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.426818][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.424464][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.306388][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.300266][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.290063][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.274758][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [27.220680][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [27.218326][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.215971][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.205768][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.201217][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.200173][Move Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [27.199341][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.197428][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.183036][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [27.167731][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [27.134750][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.124547][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [27.117266][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [27.114922][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.105499][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.101569][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.086264][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [27.078612][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.069189][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [27.066638][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.063334][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.061800][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.046495][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.043434][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.040883][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.030680][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.028767][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.962805][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.952602][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.942399][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PRIVATE'
  - [26.932196][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.912862][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.907966][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.903766][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [26.896428][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.885897][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.870592][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.855288][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.850186][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.834882][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.832968][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.827867][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.817664][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [26.813291][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.797987][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.772092][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.778581][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.808846][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [26.824150][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.828302][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.835312][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.837863][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.841264][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.847386][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.842284][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.843829][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.853098][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.869318][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.872551][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [26.882787][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.915227][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.905024][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.921245][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.923795][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.908491][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.909409][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.907941][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.903568][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.900785][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.896412][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.886209][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.876006][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.868354][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.859085][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.843781][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.837293][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.836731][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.826528][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.811223][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.795919][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.794006][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.761565][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.755139][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.738919][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.737754][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [26.735841][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.730945][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.679542][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.677629][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.667426][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.653269][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.620828][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.611783][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.554523][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.546871][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.556245][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [26.559646][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.589911][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [26.606964][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.607190][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.610830][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.610830][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.618610][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.680933][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.684334][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.694537][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.696146][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.697243][Remove Method] 'visit(beaver.spec.ast.Rule)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.701394][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.709514][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [26.728173][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [26.753302][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.771508][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.779616][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.787273][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$4'
  - [26.771968][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [26.756663][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [26.753881][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.738576][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [26.732203][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.730403][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.726778][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [26.711474][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.707101][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.705188][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.693713][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.691912][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.687539][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.677336][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.672235][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.662032][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.655910][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.648258][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.643156][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.638783][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.613655][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.595448][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.593839][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.586616][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.584703][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.578923][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [26.516600][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.503449][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.495797][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.488144][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.486231][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.470927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.465608][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [26.450304][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.448680][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.446397][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.438745][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.431093][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.423440][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.294763][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.293139][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.291995][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.280427][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.258067][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.234893][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.227116][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.166426][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.160248][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.158651][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.156738][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.175397][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.184980][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [26.191900][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.193497][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.202804][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.212178][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [26.222381][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.226020][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.228788][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [26.232669][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.242252][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [26.245653][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.255027][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [26.260222][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [26.271402][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.275775][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PUBLIC'
  - [26.296237][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.309900][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.351772][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [26.368471][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [26.346111][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.344198][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.342285][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.337913][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.324249][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.301889][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.301702][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.296227][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.286023][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [26.285595][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.277943][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.270290][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.259110][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.248907][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.238704][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [26.216344][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.212943][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.197639][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.189986][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.179783][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.169580][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PRIVATE'
  - [26.147220][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.136932][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [26.136496][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.152011][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.171530][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.176631][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [26.179692][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.188077][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.221617][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.199257][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.208840][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [26.206658][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.208844][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.215897][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.231372][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.233413][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.240009][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.255313][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [26.255880][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.244727][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [26.310689][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.332676][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.334717][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.327065][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.294083][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.239115][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.206134][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.162159][Move Down Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition$Element'
  - [26.140171][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.135799][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.120494][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [26.118563][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.116522][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.115660][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [26.128853][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.133725][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [26.173959][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.192014][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.218436][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [26.220477][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.228129][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.230316][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.296278][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.306853][Remove Method] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.310254][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [26.313344][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [26.357319][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.360503][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.393484][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.396668][Freeze Method] Convert 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.404643][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.419064][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element)' of type 'beaver.spec.GrammarBuilder$2'
  - [26.422125][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.477342][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [26.411379][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.377164][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.372791][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.368419][Increase Method Security] 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.350346][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.348306][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.326318][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.313126][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.308753][Increase Method Security] 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.304380][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.303920][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [26.270939][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.252884][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.248511][Increase Method Security] 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.246470][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.136341][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.123298][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.100938][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.109441][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [26.114835][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.092475][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.101849][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.113029][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.143295][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.143295][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.147446][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.150507][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.161687][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.175103][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.178164][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.182947][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.189107][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.194502][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [26.205682][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.216862][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.225247][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.228431][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.233826][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.229453][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.223467][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.221427][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.210247][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.209935][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.205563][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.164646][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.077442][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.071767][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.067394][Increase Method Security] 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.063021][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.051841][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.047469][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.051295][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.053537][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.113303][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.154219][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.167900][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.174608][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.189912][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [26.192099][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PROTECTED'
  - [26.207403][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.216986][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [26.229978][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [26.229978][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.260243][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [26.264616][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.266802][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PUBLIC'
  - [26.278192][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [26.278192][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.308457][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.310643][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.326774][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.317191][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [26.314859][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.298728][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.271975][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [26.260795][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.258608][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [26.254236][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.213319][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.198015][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.196197][Remove Method] 'errorPhraseRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.057004][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.045631][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.043445][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.039072][Increase Method Security] 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.038788][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [26.029040][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.024667][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.013294][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.081531][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.077159][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.123584][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to static 
  - [26.146329][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.149968][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [26.180234][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [26.174168][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.177994][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [26.180181][Decrease Method Security] 'newSymbol(short,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.180181][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [26.207912][Inline Method] beaver.spec.ast.Rule$Definition.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Rule$Definition.accept(beaver.spec.ast.TreeWalker)
  - [26.221559][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.221559][Make Class Final] beaver.comp.Action$List
  - [26.232480][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.246128][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.383969][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.385770][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.452850][Decrease Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.468155][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.471981][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.471720][Introduce Factory] for beaver.Symbol.<init>()
  - [26.457862][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.455136][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.449734][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.444959][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.444718][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.376481][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [26.374576][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.351431][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.336127][Increase Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.334058][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.264624][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.195190][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [26.194967][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.181081][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.105292][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.086929][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [26.037458][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.035271][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.033489][Move Down Field] 'sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [26.032073][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [26.027700][Increase Method Security] 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.022599][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.022391][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.004767][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3201.06 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1804429

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.881713
  * Possible Actions: 625
  * Applied Actions: 552
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9487
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1056
    * packagenesting: 1.5000
    * getters: 0.3617
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6809
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0319
    * staticness: 0.1544
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 55.0000
    * iC_Par: 2.6277
    * eC_Par: 3.2234
    * Dep_In: 5.6809
    * avrgMethodVisibility: 1.7137
    * Dep_Out: 5.6596
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [28.991527][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [29.004719][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [28.997755][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [29.001347][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.994384][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.987420][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.985889][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [29.095670][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [29.057114][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [29.058914][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [29.037287][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [29.012838][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.916832][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [28.877972][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [28.831713][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [28.835758][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.796386][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [28.777905][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [28.782467][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [28.793460][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [28.790059][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.772739][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [28.768367][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.743917][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.728650][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [28.717464][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.704718][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [28.630527][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [28.622481][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.620951][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.593096][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [28.580805][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [28.568059][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [28.561558][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.533792][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [28.467830][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.454520][Introduce Factory] for beaver.Symbol.<init>(short)
  - [28.435257][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [28.370693][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [28.369163][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.367632][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.357429][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.326019][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [28.324488][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.324488][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [28.320595][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.254632][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [28.251231][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.249701][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.234396][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [28.232187][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [28.225591][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.225584][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [28.210279][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.206159][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.178098][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.113217][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.111686][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.108285][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.101797][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.098396][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [28.094023][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.072396][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.067295][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.066252][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [28.061879][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [28.057506][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [28.047332][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [28.039426][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [28.006985][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.996782][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.992409][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.989948][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.986887][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.981785][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.980085][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.978160][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.973059][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.967957][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.963585][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.948280][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.932975][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.926487][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.925877][Move Down Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.924433][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.909128][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.844247][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.779366][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [27.770098][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.765725][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.737579][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.737323][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.734638][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.730265][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.723777][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.721177][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.716076][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.709954][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.708424][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [27.693119][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.688746][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.623865][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [27.619493][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.604188][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.602387][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.587083][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.571778][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.569978][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.565605][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.556336][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [27.554536][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.551475][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.549674][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.547874][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.547867][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.547744][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.545663][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [27.539807][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.485052][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.480679][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.465374][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.463608][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [27.463333][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.432507][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.428134][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.426510][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [27.422137][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.414247][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.401055][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.399198][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.397285][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.395372][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.388775][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.381753][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.379840][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.377927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.347100][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [27.345820][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.330515][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.329596][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [27.327676][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.323303][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [27.313100][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [27.308840][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [27.306927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.301532][Remove Method] 'parseOptions(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [27.296431][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.263450][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [27.248145][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [27.241549][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.231346][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [27.140189][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [27.124884][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [27.117442][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.116881][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.113820][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.106167][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.095964][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [27.085761][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.070457][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.068416][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.066503][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.064590][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.078006][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.201921][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [27.201921][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.212558][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [27.243159][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [27.244693][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.240596][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.251590][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.259752][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [27.264854][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.269804][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [27.274535][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.390661][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.399930][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [27.405325][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [27.418301][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [27.421083][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.426929][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [27.443629][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [27.445174][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.432197][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.430157][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.427096][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.425183][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.417334][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.375275][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.372214][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.368559][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.362071][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.360158][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.337683][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.335024][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [27.322257][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [27.312054][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [27.305670][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.301298][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.299115][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.283810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [27.278557][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.219832][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [27.217792][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.202487][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.170570][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [27.157803][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.142965][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [27.141533][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.140869][Move Up Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.137093][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.028698][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.022210][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.009234][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.993929][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.980953][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.970750][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.966715][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.962469][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.956347][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.953286][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.947153][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [26.942781][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.910341][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.907558][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.905645][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.904021][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.893818][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [26.861377][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.858316][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.853944][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.848489][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [26.838286][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PRIVATE'
  - [26.826274][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.824361][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.821690][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [26.762216][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.767318][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.770562][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.785858][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [26.798835][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.815055][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.816762][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.823509][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [26.840914][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [26.850288][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.851108][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.854292][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.867268][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.869455][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.874764][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [26.876472][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.871370][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.873171][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.869770][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.880691][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [26.893547][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [26.891840][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.884370][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.851929][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.847499][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.831114][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.830703][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [26.815399][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.802422][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.798182][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.726921][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.705620][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [26.703707][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.699031][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.694658][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.687006][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.683815][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.693763][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [26.701981][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.719840][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ConstructorCode.accept(beaver.spec.ast.TreeWalker)
  - [26.750106][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [26.752292][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [26.763214][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [26.776190][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.750296][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.756425][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [26.758226][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.761865][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.771239][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [26.781442][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [26.797662][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [26.810639][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.821560][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [26.825199][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.794922][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.829740][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [26.831543][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.829629][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.824352][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.807644][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.802543][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.785138][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.780678][Remove Method] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.771410][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.769369][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.755499][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.747847][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.742745][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.710305][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [26.641550][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.628357][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.626317][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.615699][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.518805][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.503500][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.501460][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.491257][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.483605][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.473401][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.470942][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.468909][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.458706][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.456666][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.441361][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.438300][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.428097][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PRIVATE'
  - [26.420445][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.413864][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.410459][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.394188][Inline Method] beaver.spec.ast.Declaration$TypeOf.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$TypeOf.accept(beaver.spec.ast.TreeWalker)
  - [26.392388][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.387286][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.371982][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.362221][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.352018][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.348957][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.344584][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.336932][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.321627][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.311424][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.309623][Increase Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.306563][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.304522][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.296870][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PRIVATE'
  - [26.295069][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.288947][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.275531][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.271158][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.268804][Increase Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.264431][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.249127][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.238924][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.236118][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.229996][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.225624][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.222563][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.220254][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.215402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [26.213361][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.198250][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.188046][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.183674][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.179301][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.177260][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.169608][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.154303][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.136231][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.125190][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.123150][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.112947][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.116586][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.129442][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [26.132424][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.140076][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [26.007545][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.009731][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [26.033033][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [26.035073][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.040175][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.064539][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [26.068178][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.068178][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.070364][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [26.072566][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.086246][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.087947][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [26.100802][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [26.103004][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.110056][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [26.113883][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.111842][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.104190][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.113564][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [26.111363][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.131761][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.150416][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.154242][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.156428][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.163481][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.173684][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PROTECTED'
  - [26.178416][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.208681][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [26.200815][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)
  - [26.226995][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.233819][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.237458][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.212211][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.229270][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.257924][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.263319][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [26.276966][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.280605][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.141596][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.135474][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.123235][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [26.113032][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [26.109326][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [26.105351][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.102949][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [26.092746][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.082827][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.079766][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action'
  - [26.062407][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.076294][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.083347][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.083347][Make Class Final] beaver.comp.Configuration$Set
  - [26.083347][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.080203][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.103065][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.119456][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.128830][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [26.131891][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.132558][Introduce Factory] for beaver.Symbol.<init>()
  - [26.149916][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.158036][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [26.160351][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.170554][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PACKAGE'
  - [26.170554][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.171368][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.173683][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.176465][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.173683][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.191041][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.161289][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.149777][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [26.147462][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.144800][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.138806][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [25.995307][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [25.985266][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.983263][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [25.978891][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.968688][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [25.968434][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [25.966020][Move Down Method] 'resolveConflict(beaver.comp.State,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [25.973621][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [25.996923][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [25.998623][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.006624][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.016828][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.020654][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.034788][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.048716][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.050757][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.066061][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.074169][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.091838][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [26.096939][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.111074][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [26.114135][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.103932][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.106993][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.121127][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.138052][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.140489][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.126354][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.118702][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [26.118356][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.108153][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.105758][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.095555][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.078560][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.069479][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.061826][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [26.046522][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.036990][Remove Method] 'compile()' of type 'beaver.comp.io.SrcReader'
  - [26.004760][Remove Method] 'createbeaver.Scanner$Exception()' of type 'beaver.Scanner$Exception'
  - [25.994557][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [25.984354][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [25.979804][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [25.977280][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.960766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [25.966160][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [25.971555][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [25.983334][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.983334][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [25.993729][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.064403][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [26.067464][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.059812][Increase Method Security] 'resolveConflict(beaver.comp.State,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.076520][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [26.079921][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.087573][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [26.089373][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.112931][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.120810][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [26.130906][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.136008][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.153676][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.149020][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.166157][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.171258][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [26.169072][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.166863][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.149194][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.144821][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.126859][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [26.124505][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.120132][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.049458][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [26.046057][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.041684][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.024977][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.014774][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PRIVATE'
  - [26.004571][Increase Method Security] 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [26.001170][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [25.999129][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.975571][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [25.963792][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [25.959711][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [26.007686][Remove Method] 'resolveConflict(beaver.comp.State,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.Action$Shift'
  - [26.010463][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.022030][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [26.032126][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [26.032126][Make Class Final] beaver.comp.State
  - [26.054920][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.066699][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.102036][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.115460][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [26.129595][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.129595][Make Class Non-Final] beaver.ParsingTables
  - [26.131395][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.140769][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.144170][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.146525][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.170298][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [26.172338][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.179406][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.167627][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.263572][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.261192][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.257641][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [26.222304][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.210952][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [25.906370][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [25.881713][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3220.22 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1804334

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 25.673940
  * Possible Actions: 656
  * Applied Actions: 670
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9111
    * NOC: 0.4731
    * numInterf: 0.0000
    * abstractness: 0.0999
    * packagenesting: 1.5000
    * getters: 0.3656
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8925
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0645
    * staticness: 0.1947
    * numCls: 11.6250
    * numFields: 3.2366
    * NumDesc: 1.1075
    * numOpsCls: 56.8750
    * iC_Par: 2.6667
    * eC_Par: 3.4409
    * Dep_In: 6.0968
    * avrgMethodVisibility: 1.6295
    * Dep_Out: 5.7312
    * setters: 0.1398
    * iFImpl: 0.0000
    * eC_Attr: 1.0108
    * nesting: 0.6022
    * numConstants: 0.9032
    * NumAnc: 1.1075

* Applied Actions:
  - [29.008744][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [29.010202][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [29.010202][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.988239][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [28.963789][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.950597][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [28.925012][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [28.921464][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.920007][Increase Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [28.921807][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.874196][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [28.855715][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [28.858266][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [28.842523][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [28.826364][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [28.828277][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [28.830827][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [28.794674][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [28.757041][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [28.742143][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [28.665070][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [28.654867][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.627101][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [28.618972][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [28.575315][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [28.570054][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.537645][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.531049][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.524085][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.513092][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [28.498590][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [28.496677][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [28.430715][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.427932][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [28.414622][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [28.404674][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [28.398077][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.378780][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [28.354875][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [28.316063][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [28.314532][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.313002][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.297697][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [28.182220][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.180690][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.180357][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.169177][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [28.166628][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.165098][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.164678][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.163863][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [28.147601][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.143229][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [28.138856][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.116869][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [28.113908][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [28.112920][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.111007][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.110645][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [28.099732][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [28.033770][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.914380][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.913121][Instantiate Method] Move static method 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [27.910835][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.902288][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.898887][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.896846][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.886643][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [27.883242][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.881441][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [27.871238][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.870209][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.873270][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [27.895630][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.896854][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.898414][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.917073][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [27.912701][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.916340][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [27.931645][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [27.940022][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [27.950225][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [27.957278][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [27.980580][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [27.987633][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [27.991459][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [27.992772][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [27.998167][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [28.003561][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [28.037102][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [28.063082][Introduce Factory] for beaver.spec.GrammarBuilder$DeclarationWalker.<init>()
  - [28.047777][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [28.046077][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.039369][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.038743][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.031090][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.020887][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [28.017486][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.983946][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [27.983810][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.979544][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [27.978367][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.974966][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.946877][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [27.937898][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.935752][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.934949][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.930576][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.926721][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.922349][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.919326][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.917413][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.914866][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [27.908158][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.906245][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.904332][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.896239][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.886036][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [27.883996][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.881955][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.876835][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [27.873696][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [27.871145][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.869767][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.854463][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.820922][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.820108][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.813400][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.812981][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [27.810940][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.808900][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.793595][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.793301][Move Down Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.788643][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.780563][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.777162][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.771041][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.760838][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [27.732562][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [27.726893][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.711588][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [27.711576][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.696271][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.688530][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.685235][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.651695][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.649782][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [27.644681][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.629376][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [27.626825][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.626683][Move Up Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.621581][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.606276][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.603005][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.600651][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.599091][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.594852][Move Down Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.591661][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.588240][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.573295][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.571382][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.567790][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.562967][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.495887][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.484707][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.481924][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.477552][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.475639][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.469517][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.466734][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.465586][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [27.450282][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.447499][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.443710][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.433507][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [27.425681][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [27.423538][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.419712][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.394157][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.392244][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.388227][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.383855][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.368550][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.360987][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [27.358205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.347851][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.345069][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.339967][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.332315][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.309955][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [27.303833][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.301920][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.293830][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [27.285728][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [27.285656][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.254829][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.239525][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.236230][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [27.220925][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.213273][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [27.208171][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [27.203070][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.192867][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [27.192297][Move Up Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.182094][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [27.175101][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.171275][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.169651][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [27.167738][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.157534][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PACKAGE'
  - [27.142230][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.137857][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.134592][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.126940][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.116737][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [27.112364][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.106242][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.039162][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [27.034789][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.019485][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.009282][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PACKAGE'
  - [27.001629][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.991426][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [26.981223][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$PackageName' to 'PRIVATE'
  - [26.965919][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [26.960817][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.950614][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PACKAGE'
  - [26.935310][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.933397][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.905251][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [26.903338][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.898236][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.896323][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.886120][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassCode' to 'PRIVATE'
  - [26.819040][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.806587][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [26.806411][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.792502][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [26.787400][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.782299][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.756405][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [26.754492][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.744289][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PRIVATE'
  - [26.728984][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.718781][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.714955][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [26.713042][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.697737][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [26.630657][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [26.628744][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.636613][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [26.646196][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [26.657376][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.658936][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.673530][Remove Method] 'visit(beaver.spec.ast.Declaration$Implements)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.680238][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.695581][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to static 
  - [26.680277][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.678390][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.685381][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [26.689020][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [26.746083][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [26.742078][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [26.775618][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.790922][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.792723][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.811382][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.820756][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [26.885840][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [26.888901][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.886860][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.881759][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.878550][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.863246][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [26.856321][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.855669][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.853482][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.851296][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.817756][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.816327][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.811954][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.808893][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.802185][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [26.784822][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [26.769517][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.761865][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.754213][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.746561][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.743500][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.728195][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.723822][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.716170][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.709921][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [26.708220][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [26.698017][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [26.695601][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.691229][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.689042][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.623080][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [26.621546][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.606241][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [26.596038][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [26.591666][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.585544][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.581171][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.570968][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.569912][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.565539][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.565131][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.554928][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PRIVATE'
  - [26.539966][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.529763][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [26.526702][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.513472][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.511771][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.508710][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [26.505649][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.495446][Increase Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PRIVATE'
  - [26.491074][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.480871][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PRIVATE'
  - [26.479246][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.474874][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.471813][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.457547][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.451425][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.385152][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.380779][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.402766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.415959][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.424204][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.428766][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [26.441958][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.455151][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.456852][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.467055][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PROTECTED'
  - [26.500036][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.505431][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.505431][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.509804][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.516856][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [26.586494][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [26.584308][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.604706][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.608103][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [26.617409][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [26.612730][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.735933][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.723103][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.720916][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.656035][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.651663][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.595706][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [26.593652][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.591466][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.589279][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.585903][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.583717][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.573514][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.571327][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.569141][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.562814][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.557135][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of type 'beaver.comp.State'
  - [26.544158][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.535103][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.527451][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.505824][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.492848][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.482644][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [26.480458][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.444293][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.379412][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.373290][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.355456][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.350318][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [26.348131][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.344276][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.311835][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.315987][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.319626][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder' to static 
  - [26.322408][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.337751][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [26.353465][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [26.394970][Inline Method] beaver.spec.ast.Declaration$ListType.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ListType.accept(beaver.spec.ast.TreeWalker)
  - [26.399748][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.401934][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.412856][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [26.459950][Inline Method] beaver.spec.ast.Declaration$Goal.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Goal.accept(beaver.spec.ast.TreeWalker)
  - [26.461751][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.461751][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [26.469859][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [26.494771][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [26.494771][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.501259][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.519918][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [26.532774][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [26.532774][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [26.534283][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.528080][Move Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [26.526571][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.511267][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.483905][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [26.462278][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.449302][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.441650][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.431447][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.409820][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.407779][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.405593][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.395390][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [26.267862][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.269562][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [26.269562][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [26.276158][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.278615][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.301233][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [26.316537][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.417047][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.461375][Inline Method] beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol) into beaver.comp.Action.createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [26.468530][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [26.457911][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [26.490716][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [26.492536][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.535189][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [26.568170][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.579164][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.598072][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [26.599606][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.610694][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.612514][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.614334][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.309966][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.303778][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [26.301419][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [26.288901][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.278589][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [26.273733][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [26.251745][Increase Field Security] 'elements' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [26.249925][Increase Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.244769][Increase Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.235190][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.242925][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PACKAGE'
  - [26.308887][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.309853][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.314049][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [26.314049][Make Class Final] beaver.comp.Configuration$Set
  - [26.317487][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [26.314921][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [26.324397][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.326459][Decrease Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.327255][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.393040][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [26.415027][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.416561][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.438549][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.471530][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.473064][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.480798][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.490274][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [26.496047][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [26.499726][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.497906][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.482437][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.466968][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [26.465113][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.358606][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.357046][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.354836][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.350417][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.330577][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.328353][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.323934][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.318344][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.313924][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.280384][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.277030][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.209949][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.202215][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Header' to 'PRIVATE'
  - [26.200234][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.198664][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.200874][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.214066][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.247047][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [26.252204][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.256987][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.260080][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [26.261651][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.267839][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.287360][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.329683][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.329683][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [26.360883][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action'
  - [26.379743][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.388538][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.388117][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.401309][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.412303][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.415740][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.437728][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.470709][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.464194][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.459774][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.444305][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PRIVATE'
  - [26.443809][Instantiate Method] Move static method 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Type'
  - [26.410828][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.403093][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.397937][Increase Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.386943][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.379208][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [26.376999][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.367123][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.359388][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.357751][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.342313][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.342220][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.320233][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.312498][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.290511][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.265002][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.199040][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.185078][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [26.133125][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [26.006583][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.006495][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.006411][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.017450][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [26.001027][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.002847][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.005789][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [26.016969][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.018605][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.023396][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.027263][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [26.035939][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.041392][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.047619][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [26.061065][Instantiate Method] Move static method 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [26.063275][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.068058][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.072841][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.075935][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [26.078145][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.101698][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.109432][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.113450][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$List'
  - [26.091090][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.089453][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.081719][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.080618][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.072883][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.062570][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [26.029030][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.025013][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [26.017278][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.013223][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.008803][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [25.986724][Inline Method] beaver.comp.ParsingTables.countStates() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [25.984514][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.850212][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [25.850068][Introduce Factory] for beaver.Symbol.<init>()
  - [25.847858][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.842702][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [25.838282][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.834760][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [25.846133][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [25.847798][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.871260][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [25.866840][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [25.869220][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [25.871153][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [25.912817][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.914523][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.916229][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.925977][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [25.929414][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [25.952967][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [25.964006][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [25.952196][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.957649][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.006490][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.136657][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [26.142220][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.173193][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [26.190253][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [26.187531][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.180119][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.173737][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.149993][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.139568][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [26.137613][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [26.135428][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.086205][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.074633][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.058230][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [25.796121][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [25.783063][Remove Method] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [25.772638][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [25.767425][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [25.767051][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.780937][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [25.784657][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [25.779561][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [25.789480][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [25.805117][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [25.817738][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [25.821648][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [25.823475][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.828687][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [25.846046][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [25.880763][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [25.883890][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.022489][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.022489][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.032914][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PACKAGE'
  - [26.031836][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [26.062910][Remove Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of type 'beaver.comp.State'
  - [26.085656][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [26.215444][Move Down Field] 'defs' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule'
  - [26.217529][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.215403][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [26.215069][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.205486][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [26.075526][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.007290][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [25.973171][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [25.950426][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [25.933366][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [25.899248][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [25.831011][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [25.691431][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [25.681511][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [25.705321][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.Rule' to static 
  - [25.734209][Remove Method] 'syntaxError(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [25.734209][Make Class Final] beaver.comp.Configuration
  - [25.738452][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [25.761596][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [25.765071][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [25.772015][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [25.773550][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [25.776678][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.777024][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [25.790910][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.802483][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [25.807996][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [25.809823][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [25.809527][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [25.819115][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [25.842260][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [25.845387][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [25.866970][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [25.874566][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [25.872689][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.870604][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.851491][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [25.849257][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [25.825581][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [25.809944][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [25.795149][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [25.775540][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [25.773306][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [25.768093][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [25.754207][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [25.747952][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [25.740356][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [25.717211][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [25.703325][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [25.701370][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [25.699415][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [25.676271][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [25.674186][Increase Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [25.673940][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3245.37 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1805410

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.055113
  * Possible Actions: 577
  * Applied Actions: 592
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.8823
    * NOC: 0.4787
    * numInterf: 0.0000
    * abstractness: 0.1113
    * packagenesting: 1.5000
    * getters: 0.3511
    * NumAssEl_ssc: 0.0000
    * numOps: 4.8191
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9787
    * staticness: 0.1915
    * numCls: 11.7500
    * numFields: 3.2021
    * NumDesc: 1.1170
    * numOpsCls: 56.6250
    * iC_Par: 2.6489
    * eC_Par: 3.3511
    * Dep_In: 5.9362
    * avrgMethodVisibility: 1.7148
    * Dep_Out: 5.6277
    * setters: 0.1383
    * iFImpl: 0.0000
    * eC_Attr: 1.0000
    * nesting: 0.6277
    * numConstants: 0.8936
    * NumAnc: 1.1170

* Applied Actions:
  - [29.006831][Make Class Final] beaver.comp.ParsingTables
  - [29.005301][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [29.046849][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [29.046849][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [29.048383][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.036154][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [29.032280][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [29.033504][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [29.143475][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [29.119026][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [29.101811][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [29.085651][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [29.020770][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [28.993004][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [28.999492][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [29.003136][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [29.006498][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [28.960239][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [28.955808][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [28.942498][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [28.931313][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.924825][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.873846][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [28.841438][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.765288][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [28.763757][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.753401][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.736186][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [28.725829][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.709670][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [28.695168][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [28.679863][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [28.669507][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.663865][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [28.650027][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [28.638841][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.632719][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.616560][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [28.608193][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [28.568821][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [28.557636][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.513979][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [28.481231][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [28.476129][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.465926][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [28.453971][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [28.452552][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.448510][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.417684][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [28.415583][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [28.318665][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [28.317135][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.313869][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [28.312339][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.312215][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.246253][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.244861][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.241460][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.239930][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.237418][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.231297][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [28.209309][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.205908][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.177762][Make Class Abstract] beaver.comp.Action
  - [28.167559][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.165223][Move Down Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [28.149918][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [28.148307][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.138104][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [28.072142][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [27.954956][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.953345][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.927612][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.918573][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [27.912451][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [27.909540][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.909211][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [27.902615][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.898788][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.883484][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.817522][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [27.813149][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.799665][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [27.782360][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [27.778959][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.774586][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.774134][Freeze Method] Convert 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.772333][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.770532][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.760329][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [27.758529][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.756222][Move Down Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.752821][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.686859][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.658713][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.648510][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [27.646979][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.641878][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [27.637505][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.637280][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.625045][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.624081][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.622333][Move Down Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.557452][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.555411][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.552010][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [27.549970][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.543482][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [27.533279][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ConstructorCode' to 'PRIVATE'
  - [27.523076][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [27.519286][Move Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [27.514913][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.504100][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.498998][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.496812][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.481507][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.475019][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.469918][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.463429][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.432603][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [27.430992][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.418016][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.411894][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.404842][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [27.403231][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.401904][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [27.395416][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.380111][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.364806][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.348100][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.337897][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [27.329460][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [27.297020][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [27.281715][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.266411][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.267802][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.267802][Make Class Non-Final] beaver.comp.ParsingTables
  - [27.267802][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.265889][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.268440][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.281032][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [27.281032][Make Class Final] beaver.comp.Configuration$Set
  - [27.313473][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [27.334353][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [27.364618][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [27.368142][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.364298][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.359926][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.370919][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.375071][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.353083][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.331096][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.320102][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [27.327971][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [27.346630][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [27.331449][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.206951][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [27.203125][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.199724][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.197811][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.192062][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [27.176758][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [27.166555][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to 'PACKAGE'
  - [27.133139][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [27.114719][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [27.112450][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.109492][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.099289][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.073395][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.068455][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [27.062333][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [27.052130][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [27.050217][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.045115][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.041848][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.038447][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [27.034075][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.034075][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [27.156833][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.204765][Instantiate Method] Move static method 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Terminal'
  - [27.220070][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [27.255856][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [27.317120][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [27.330096][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.317661][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [27.382542][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [27.387644][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.398565][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [27.398528][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [27.398528][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [27.400111][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.404262][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [27.406175][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.401074][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.377298][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [27.414189][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [27.435816][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [27.433903][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.423700][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.413059][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [27.402029][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [27.391215][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [27.386842][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [27.384929][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.320048][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [27.316031][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [27.314118][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.282573][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [27.272369][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.264717][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [27.249413][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.237785][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [27.236228][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [27.204311][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [27.203681][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [27.198579][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.195519][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.180214][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [27.177663][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.077191][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.061886][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [27.056785][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.053622][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [27.040645][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.030442][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [27.028529][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.026616][Increase Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [27.012332][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [27.009797][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.003675][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.988370][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [26.986457][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.958182][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [26.942877][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [26.927573][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [26.912268][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [26.896963][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [26.832082][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [26.767201][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [26.756998][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.692117][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.685996][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.670691][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [26.666318][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.664694][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [26.661293][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.659380][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.657467][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.635840][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [26.603399][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [26.593196][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PACKAGE'
  - [26.577892][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.570240][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.567608][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.567111][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [26.560989][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.556616][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.548964][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.547051][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.542678][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.538288][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.513571][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.510828][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.506455][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.445191][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.442266][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.432063][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PRIVATE'
  - [26.448283][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.461260][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.472073][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.536954][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.549930][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.673860][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.674172][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.695450][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.727368][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.729918][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [26.732979][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [26.756281][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [26.760654][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [26.768633][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.779461][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [26.792228][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.808446][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [26.850221][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [26.850221][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.856342][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.853468][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.851164][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.814954][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.782513][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [26.760886][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.645612][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.579650][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.577737][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.566743][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.551438][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [26.547066][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [26.545152][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.541679][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.539414][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.447067][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [26.442694][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.426204][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.424291][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.407017][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.399191][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.383886][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [26.370694][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.369528][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [26.378937][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [26.378937][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.401490][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [26.407611][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.406676][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [26.411049][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.420423][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [26.428075][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [26.429875][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.443068][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.444679][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [26.429827][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [26.446318][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [26.455741][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [26.475455][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.477025][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.478826][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.483223][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.494217][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.364627][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.373012][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.436392][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.442514][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [26.459438][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [26.462499][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.484859][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.486660][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.478275][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.478275][Make Class Non-Final] beaver.comp.Configuration$Set
  - [26.496934][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [26.492176][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.496461][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.509877][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.512063][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.520448][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [26.527501][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [26.537084][Decrease Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.548264][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.554441][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [26.563136][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [26.558763][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.541993][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [26.540080][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.538167][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.474787][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [26.472874][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.467772][Increase Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.460120][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [26.450537][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.448624][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.433320][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [26.431406][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.430978][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.415673][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [26.415597][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [26.414516][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.410144][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.387784][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [26.374367][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.237100][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [26.232727][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.229922][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [26.214618][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [26.214388][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [26.208266][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.202144][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.199088][Remove Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.196537][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.181232][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [26.176025][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [26.172809][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [26.165157][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.156915][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.155970][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.169650][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.177302][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.182034][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.195921][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.203573][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.245078][Inline Method] beaver.spec.ast.Declaration$ListType.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ListType.accept(beaver.spec.ast.TreeWalker)
  - [26.247432][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [26.250833][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.256955][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [26.270856][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.294001][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.335872][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [26.404855][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of type 'beaver.comp.Action$Shift'
  - [26.502742][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [26.512126][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [26.510064][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.512549][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.532626][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.549985][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.549985][Make Class Final] beaver.comp.Action$Reduce
  - [26.547823][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [26.542006][Remove Method] 'makeDescription(beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Shift'
  - [26.539844][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [26.537682][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [26.526392][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [26.477717][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [26.455579][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [26.451159][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.195639][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [26.194918][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.193280][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [26.181708][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.174914][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.157556][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.147637][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [26.153090][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.170448][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.172369][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [26.182288][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [26.195283][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.198962][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [26.210534][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.212744][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [26.228213][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [26.228213][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [26.230593][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.242165][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.234166][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [26.236603][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [26.242791][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [26.246228][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.262171][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [26.264381][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [26.278268][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.288187][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [26.283030][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [26.269144][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.257571][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.242102][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [26.239722][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.228150][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.227997][Introduce Factory] for beaver.Symbol.<init>(short)
  - [26.217684][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.217541][Introduce Factory] for beaver.Symbol.<init>()
  - [26.216769][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.209034][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.204931][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.199566][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.189647][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [26.174177][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [26.171798][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.169418][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.165861][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.144298][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.141865][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.124506][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.109037][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.093568][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [26.107379][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.108745][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.124479][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to its parameter type 'beaver.spec.GrammarBuilder'
  - [26.193913][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [26.195733][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [26.238055][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [26.244998][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.266222][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [26.268432][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [26.273925][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.280112][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.282322][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.288510][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [26.292189][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [26.292293][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [26.294017][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.329354][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [26.347022][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.357267][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [26.387858][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [26.317184][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [26.279906][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.264172][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [26.259753][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.247974][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [26.246250][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.246115][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [26.222557][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.216370][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.214160][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.207972][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.204003][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.133660][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.115991][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [26.092433][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.091134][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.094813][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [26.096633][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [26.099446][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [26.117176][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [26.123992][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [26.159971][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [26.169447][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [26.314650][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.328482][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [26.330205][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.331929][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.345241][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [26.345241][Make Class Non-Final] beaver.comp.Action$Reduce
  - [26.349661][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.365169][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [26.370623][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [26.376810][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [26.400368][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.400368][Make Class Final] beaver.comp.Action$Reduce
  - [26.402748][Decrease Method Security] 'compile(beaver.comp.run.Options)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [26.367411][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.343853][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [26.341523][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [26.337364][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.302027][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [26.231353][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [26.197866][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [26.086135][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [26.100527][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.124079][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [26.130267][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.135720][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [26.137475][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.143663][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PACKAGE'
  - [26.158055][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.158055][Make Class Final] beaver.comp.ParsingTables
  - [26.162807][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [26.273993][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [26.284306][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.293781][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [26.293781][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.296161][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [26.304357][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [26.304357][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [26.310584][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [26.322363][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [26.321067][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [26.332106][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [26.330383][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.328738][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.316959][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [26.316571][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.281234][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [26.136686][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.131818][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken()
  - [26.059859][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [26.066046][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [26.064247][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.067685][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.067685][Make Class Final] beaver.comp.Action$List
  - [26.091671][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [26.101951][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [26.103470][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [26.117861][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.123117][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [26.136112][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [26.139549][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.146330][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [26.169162][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.176358][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.183487][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [26.197879][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [26.197947][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [26.212339][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.226731][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.230168][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [26.222434][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [26.208042][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.205683][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [26.191291][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.190909][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [26.184721][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.170330][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.164142][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.147343][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [26.145624][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [26.131490][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.127070][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.112935][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.098800][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [26.084665][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [26.076931][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PRIVATE'
  - [26.062796][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.055113][Move Method] 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
====== Run Result ======

* Name: Beaver|ABC|T50|P120|I7500
  * Run Info: Artificial Bee Colony. Population Size: 120, Max Trials: 50, Iterations: 7500.
  * Time taken: 3193.28 seconds
  * Metric Mode: Aggregate
  * Expanded Designs: 1805800

* Initial Design:
  * Score: 29.006831
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 1.3046
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.0830
    * packagenesting: 1.5000
    * getters: 0.3789
    * NumAssEl_ssc: 0.0000
    * numOps: 5.0526
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 3.0000
    * staticness: 0.0881
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 60.0000
    * iC_Par: 2.7684
    * eC_Par: 3.0105
    * Dep_In: 5.2105
    * avrgMethodVisibility: 2.1128
    * Dep_Out: 5.7684
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Final Design:
  * Score: 26.293993
  * Possible Actions: 620
  * Applied Actions: 372
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * avrgFieldVisibility: 0.9943
    * NOC: 0.4842
    * numInterf: 0.0000
    * abstractness: 0.1108
    * packagenesting: 1.5000
    * getters: 0.3579
    * NumAssEl_ssc: 0.0000
    * numOps: 4.6632
    * NumAssEl_nsb: 0.0000
    * iC_Attr: 2.9684
    * staticness: 0.1323
    * numCls: 11.8750
    * numFields: 3.1684
    * NumDesc: 1.1263
    * numOpsCls: 55.3750
    * iC_Par: 2.6526
    * eC_Par: 3.1684
    * Dep_In: 5.5579
    * avrgMethodVisibility: 1.8031
    * Dep_Out: 5.6211
    * setters: 0.1368
    * iFImpl: 0.0000
    * eC_Attr: 0.9895
    * nesting: 0.6526
    * numConstants: 0.8842
    * NumAnc: 1.1263

* Applied Actions:
  - [29.001260][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [29.042766][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [29.064753][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [29.054629][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [29.011414][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [29.017536][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [29.004226][Introduce Factory] for beaver.Symbol.<init>(short)
  - [28.953247][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [28.966440][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [28.979632][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [28.981166][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [28.945378][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [28.947179][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.947179][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.951552][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.959797][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [28.912186][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [28.901000][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [28.902064][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [28.869656][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [28.859531][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.855984][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [28.852583][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [28.835368][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [28.820063][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [28.800035][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [28.793439][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [28.754067][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [28.688104][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [28.684527][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [28.656761][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [28.641456][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [28.608283][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [28.607058][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [28.595541][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.585417][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [28.578453][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [28.502303][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [28.485948][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [28.461498][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [28.460568][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [28.421196][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [28.415074][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.349112][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [28.342516][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.326356][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [28.314705][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [28.299807][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [28.293211][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [28.291666][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [28.281463][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [28.277090][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [28.211128][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [28.205006][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [28.203615][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [28.202084][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.197712][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [28.195217][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [28.182025][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [28.178624][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [28.177090][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [28.175560][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [28.058881][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [28.036521][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [28.010654][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [28.006281][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.998261][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [27.993888][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.983685][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PACKAGE'
  - [27.982074][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.977701][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [27.976942][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [27.976676][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.972303][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.969841][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [27.969718][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.968107][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.961510][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.958109][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.956740][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [27.956705][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [27.956165][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [27.955163][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [27.950790][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.949089][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.933785][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [27.933719][Freeze Method] Convert 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.918415][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [27.917853][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [27.914452][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.906660][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [27.840697][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [27.838317][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [27.825125][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [27.796979][Make Class Abstract] beaver.comp.Action
  - [27.771085][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [27.769627][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.765254][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.711408][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [27.705286][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [27.671746][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [27.656441][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [27.653040][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.651127][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.647797][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.644396][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [27.629091][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [27.622383][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.592037][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [27.576733][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [27.566530][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [27.551225][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [27.544517][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.542604][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.540980][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [27.539449][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.537688][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.509542][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [27.510350][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [27.631447][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [27.647938][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [27.661130][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [27.670504][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [27.672115][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.674480][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.682672][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [27.687045][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.697967][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [27.701793][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [27.711167][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [27.726251][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [27.737244][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [27.747749][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [27.764449][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [27.766250][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [27.768027][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [27.783370][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [27.789877][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [27.774457][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.767860][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.766060][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.764259][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [27.698297][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [27.684136][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [27.668831][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [27.662235][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [27.655857][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [27.654246][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [27.638941][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [27.635115][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [27.633202][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [27.629604][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.626045][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [27.608330][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [27.593025][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [27.591401][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$1'
  - [27.587028][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [27.571724][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [27.569573][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [27.566172][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [27.559575][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [27.556890][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [27.490928][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [27.487206][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.477783][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [27.462478][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [27.425895][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [27.420793][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [27.417984][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [27.397578][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [27.389925][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [27.385553][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [27.375350][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [27.370103][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [27.367899][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.352595][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [27.350794][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.348994][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.333689][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [27.330288][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [27.316901][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.265634][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [27.263834][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [27.253631][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [27.243427][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [27.228123][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [27.205763][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [27.204232][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [27.200138][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [27.184833][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [27.174630][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Implements' to 'PRIVATE'
  - [27.172285][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.167912][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [27.166823][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [27.150053][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [27.147628][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [27.141238][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [27.139437][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [27.137524][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [27.126344][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [27.121972][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [27.106667][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [27.039587][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PRIVATE'
  - [27.024282][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [26.957202][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [26.951080][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.928720][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.922598][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [26.915940][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [26.898085][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [26.882780][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [26.872577][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [26.865925][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.863143][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.857021][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [26.850899][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.850209][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [26.838581][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [26.833358][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.766278][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [26.764654][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.GrammarSymbol$1'
  - [26.762953][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.758581][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.756667][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.756408][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.753625][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.764547][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [26.765848][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [26.771970][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.778130][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [26.711050][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [26.722230][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.726728][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [26.745722][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [26.742968][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [26.745008][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.756188][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.756188][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [26.763267][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [26.776935][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [26.780337][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [26.804883][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [26.806443][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.824783][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [26.952009][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.952425][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [26.942222][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [26.940309][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [26.934187][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.901206][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PROTECTED'
  - [26.895084][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [26.893460][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.spec.Production$2'
  - [26.893209][Remove Method] 'visit(beaver.spec.ast.Declaration$Implements)' of type 'beaver.spec.GrammarBuilder$3'
  - [26.860228][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.858694][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.827867][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [26.824385][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [26.820012][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.817229][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [26.807806][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [26.803115][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [26.696057][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.685854][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [26.660277][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [26.650694][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [26.644573][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [26.634370][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [26.624166][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.590626][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PACKAGE'
  - [26.586086][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [26.555260][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [26.549138][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.541486][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [26.533030][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [26.566570][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PUBLIC'
  - [26.581913][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [26.548373][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [26.558576][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [26.580936][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [26.606491][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [26.731124][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.737721][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.743557][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [26.749679][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [26.767084][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [26.790386][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [26.796982][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [26.855989][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.866802][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [26.868503][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.868503][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [26.875839][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [26.868186][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [26.878389][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [26.871901][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.865413][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [26.861683][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.857767][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.850114][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [26.817674][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [26.813556][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.800213][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [26.797858][Increase Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.796784][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [26.792449][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.790330][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [26.765613][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [26.754800][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [26.750427][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [26.743939][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [26.742026][Increase Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [26.734374][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [26.669493][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.668134][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [26.666334][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [26.664533][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [26.659965][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.649762][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [26.522090][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [26.497621][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [26.487418][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PRIVATE'
  - [26.477215][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [26.455227][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [26.444234][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.439331][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.368069][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [26.336048][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [26.330946][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [26.315642][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [26.317505][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.336164][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [26.347344][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [26.351496][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [26.356597][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [26.373367][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.368266][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [26.386925][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [26.391656][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [26.394011][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.396051][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.403681][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.417097][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [26.418960][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [26.425082][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [26.471507][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to static 
  - [26.488207][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [26.490561][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [26.507331][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [26.514039][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [26.495938][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.457170][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [26.440399][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.438359][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [26.417155][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [26.414800][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [26.414755][Introduce Factory] for beaver.Symbol.<init>()
  - [26.404552][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [26.389389][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.385837][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.368777][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [26.364405][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.360032][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [26.348659][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [26.348615][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [26.344354][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [26.342313][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [26.342270][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [26.333414][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [26.303618][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [26.298570][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [26.294197][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [26.293993][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
