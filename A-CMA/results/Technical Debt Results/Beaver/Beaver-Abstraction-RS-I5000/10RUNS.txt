====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.93 seconds
  * Quality Gain: 0.003758
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.031160
  * Possible Actions: 778
  * Applied Actions: 117
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0944
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.027402][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.027402][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.027402][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.027402][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.027402][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.027402][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.027402][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.027402][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.027402][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.027402][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [-0.027402][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.029195][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.029195][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.029195][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.029195][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.029195][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.029195][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.029195][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.029195][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.029195][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [-0.029195][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029195][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.029195][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.029195][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.029195][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.029195][Move Method] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.029195][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.029195][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.029195][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.029195][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.029195][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.029195][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.029195][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029195][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.029195][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.029195][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.029195][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.029195][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.029195][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.029195][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.029195][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.029195][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.029195][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [-0.029195][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.029195][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.029195][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029195][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.029195][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029195][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.029195][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.029195][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.029195][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.029195][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [-0.029195][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.029195][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.029195][Instantiate Method] Move static method 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Terminal'
  - [-0.029195][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Inline Method] beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory) into beaver.comp.State$Factory.createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)
  - [-0.031160][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 15.82 seconds
  * Quality Gain: 0.007679
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.035080
  * Possible Actions: 474
  * Applied Actions: 1862
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.1063
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.027402][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.027402][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.027402][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.027402][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [-0.027402][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.027402][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.027402][Decrease Method Security] 'zzUnpackTrans(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [-0.027402][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.027402][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [-0.027402][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.027402][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.027402][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.027402][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.027402][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.027402][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.027402][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.027402][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.027402][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.027402][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [-0.027402][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.027402][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.027402][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.027402][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.027402][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.027402][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.027402][Make Class Non-Final] beaver.ParsingTables
  - [-0.027402][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [-0.027402][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.027402][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [-0.027402][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.027402][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.029366][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [-0.029366][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029366][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029366][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [-0.029366][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.029366][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.029366][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [-0.029366][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029366][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029366][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029366][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.029366][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029366][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.029366][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.029366][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029366][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.029366][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [-0.029366][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029366][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [-0.029366][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [-0.029366][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.029366][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [-0.029366][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.029366][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029366][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029366][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.029366][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.029366][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.029366][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.029366][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.029366][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029366][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.029366][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029366][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.029366][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.029366][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.029366][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.029366][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.029366][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.029366][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031160][Make Class Abstract] beaver.comp.Action
  - [-0.031160][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.031160][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.031160][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.031160][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [-0.031160][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.031160][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.031160][Increase Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.031160][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Move Down Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.031160][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.031160][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.031160][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.031160][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.031160][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.031160][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.031160][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [-0.031160][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [-0.031160][Decrease Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.031160][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.031160][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.031160][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.031160][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.031160][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.031160][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.031160][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.031160][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [-0.031160][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.031160][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [-0.031160][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.031160][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.031160][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.031160][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.032953][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.032953][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [-0.032953][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [-0.032953][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [-0.032953][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.032953][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.032953][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [-0.032953][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.032953][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.032953][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [-0.032953][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.032953][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [-0.032953][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.032953][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [-0.032953][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.032953][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Move Down Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.032953][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.032953][Decrease Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.032953][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.032953][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.032953][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.032953][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [-0.032953][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.032953][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [-0.032953][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.032953][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.032953][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Error' to static 
  - [-0.032953][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032953][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [-0.032953][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.032953][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.032953][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [-0.032953][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.032953][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.032953][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.032953][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [-0.032953][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.032953][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032953][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [-0.032953][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.032953][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.032953][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set)
  - [-0.032953][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [-0.032953][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.032953][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.032953][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [-0.032953][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.032953][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [-0.032953][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.032953][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.032953][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [-0.032953][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.032953][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032953][Instantiate Method] Move static method 'compile(beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [-0.032953][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.032953][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.032953][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [-0.032953][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.032953][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.032953][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032953][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.032953][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.032953][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Make Class Final] beaver.comp.Action$Accept
  - [-0.032953][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Move Up Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032953][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [-0.032953][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032953][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [-0.032953][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.032953][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [-0.032953][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.032953][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.032953][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.032953][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032953][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.032953][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.032953][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.032953][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.032953][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Make Class Final] beaver.comp.Configuration
  - [-0.032953][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.032953][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.032953][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [-0.032953][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Make Class Non-Final] beaver.comp.Configuration
  - [-0.032953][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.032953][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.032953][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [-0.032953][Decrease Method Security] 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.032953][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.032953][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [-0.032953][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.032953][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [-0.032953][Increase Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.032953][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [-0.032953][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.032953][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.032953][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.032953][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short)
  - [-0.032953][Remove Method] '<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [-0.032953][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [-0.032953][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.032953][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.032953][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.032953][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.032953][Move Method] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.032953][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.032953][Make Class Final] beaver.comp.State
  - [-0.032953][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032953][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.032953][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032953][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.032953][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [-0.032953][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.032953][Instantiate Method] Move static method 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State'
  - [-0.032953][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.032953][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.032953][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.032953][Remove Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Reduce'
  - [-0.032953][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.032953][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [-0.032953][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.032953][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.032953][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [-0.032953][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.032953][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.032953][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.032953][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [-0.032953][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.032953][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [-0.032953][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.032953][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.032953][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [-0.032953][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [-0.032953][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.032953][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Make Class Final] beaver.comp.Configuration
  - [-0.032953][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [-0.032953][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.032953][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.032953][Make Class Final] beaver.comp.Action$Reduce
  - [-0.032953][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.032953][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [-0.032953][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [-0.032953][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [-0.032953][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [-0.032953][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.032953][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.032953][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.032953][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.032953][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.032953][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [-0.032953][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032953][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.032953][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$Imports.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [-0.032953][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [-0.032953][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [-0.032953][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.032953][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.032953][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.032953][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [-0.032953][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [-0.032953][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032953][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032953][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.032953][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Move Method] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.Production,beaver.spec.Production$RHS)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.032953][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [-0.032953][Instantiate Method] Move static method 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.032953][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.032953][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.032953][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.032953][Make Class Non-Final] beaver.comp.Configuration
  - [-0.032953][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [-0.032953][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032953][Inline Method] beaver.spec.ast.TreeWalker.<init>() into beaver.spec.ast.TreeWalker.createbeaver.spec.ast.TreeWalker()
  - [-0.032953][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.Production,beaver.spec.NonTerminal)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.Production'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [-0.032953][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.032953][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.032953][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.032953][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.032953][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [-0.032953][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.032953][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.032953][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.032953][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.032953][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032953][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032953][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.032953][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.032953][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.032953][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [-0.032953][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.032953][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.032953][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.032953][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.032953][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.032953][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.032953][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032953][Move Up Method] '<init>()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.032953][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.032953][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [-0.032953][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [-0.032953][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.032953][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [-0.032953][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.032953][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.032953][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.032953][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.032953][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032953][Instantiate Method] Move static method 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Parser$TokenStream)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$TokenStream'
  - [-0.032953][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.032953][Increase Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.032953][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to static 
  - [-0.032953][Inline Method] beaver.comp.util.Log$Record.<init>(int,int,java.lang.String) into beaver.comp.util.Log$Record.createbeaver.comp.util.Log$Record()
  - [-0.032953][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.032953][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.032953][Make Class Final] beaver.comp.Action$List
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032953][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.032953][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [-0.032953][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032953][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [-0.032953][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.032953][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.032953][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.032953][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to static 
  - [-0.032953][Increase Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [-0.032953][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.032953][Inline Method] beaver.Parser$TokenStream.readToken(beaver.Parser$TokenStream) into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [-0.032953][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.032953][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.032953][Increase Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.032953][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.032953][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032953][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.032953][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032953][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [-0.032953][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.032953][Make Class Final] beaver.comp.State$Factory
  - [-0.032953][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032953][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [-0.032953][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to static 
  - [-0.032953][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [-0.032953][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.032953][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032953][Make Class Non-Final] beaver.comp.State
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032953][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032953][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to static 
  - [-0.032953][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.032953][Move Method] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.032953][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [-0.032953][Make Class Final] beaver.comp.State
  - [-0.032953][Move Method] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration$PropagationLink)' of 'beaver.comp.Configuration' to its parameter type 'beaver.comp.Configuration$PropagationLink'
  - [-0.032953][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$NonAssoc.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$NonAssoc.accept(beaver.spec.ast.TreeWalker)
  - [-0.032953][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032953][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.032953][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Move Down Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.032953][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032953][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032953][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.032953][Make Class Final] beaver.comp.ParsingTables
  - [-0.032953][Instantiate Method] Move static method 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassCode' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.032953][Decrease Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.032953][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.032953][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [-0.032953][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.032953][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.032953][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParsingTables.countStates() into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032953][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.032953][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [-0.032953][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.032953][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.032953][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [-0.032953][Freeze Method] Convert 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.032953][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.032953][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.032953][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032953][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.032953][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PUBLIC'
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.032953][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.Production,beaver.spec.Production$RHS)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Move Method] 'createbeaver.spec.Production(beaver.spec.Production,beaver.spec.Production$RHS)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production'
  - [-0.032953][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032953][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032953][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [-0.032953][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.032953][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.032953][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.032953][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule)' of 'beaver.spec.ast.Rule' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.032953][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.032953][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [-0.032953][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.indexOfLastReferencedSymbol(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.032953][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032953][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.032953][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.Production$RHS,beaver.spec.NonTerminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.032953][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [-0.032953][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.032953][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032953][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.032953][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032953][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [-0.032953][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032953][Decrease Method Security] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.032953][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.032953][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032953][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PROTECTED'
  - [-0.032953][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032953][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032953][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.032953][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [-0.032953][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032953][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.032953][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.032953][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.032953][Increase Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032953][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032953][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.032953][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032953][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.032953][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.032953][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.032953][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [-0.034917][Increase Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.034917][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [-0.034917][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.034917][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.034917][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Move Method] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to its parameter type 'beaver.spec.Production'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Move Method] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Remove Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.034917][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034917][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Inline Method] beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State) into beaver.comp.Action$Shift.createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Remove Method] 'scannerError(beaver.Scanner$Exception)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.Production.add(beaver.spec.Production$List) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'token_line' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$NonAssoc.createbeaver.spec.ast.Declaration$NonAssoc(beaver.Symbol[])
  - [-0.034917][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.034917][Decrease Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034917][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034917][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [-0.034917][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Make Class Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compile(beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [-0.034917][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034917][Move Method] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to its parameter type 'beaver.comp.util.Log$Record'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Instantiate Method] Move static method 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to its parameter type 'beaver.comp.util.Log$Record$List'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.034917][Move Method] 'countReferencedSymbols(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'removeLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [-0.034917][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.034917][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [-0.034917][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034917][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [-0.034917][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [-0.034917][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [-0.034917][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.TreeWalker.<init>() into beaver.spec.ast.TreeWalker.createbeaver.spec.ast.TreeWalker()
  - [-0.034917][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'symbols' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Move Method] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [-0.034917][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Remove Method] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of type 'beaver.Action$1'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034917][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Accept
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [-0.034917][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034917][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [-0.034917][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Increase Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Make Class Final] beaver.comp.State$Factory
  - [-0.034917][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Implements' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.034917][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Make Class Final] beaver.comp.ParsingTables
  - [-0.034917][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Move Method] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.034917][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Move Down Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Move Method] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [-0.034917][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'countReferencedSymbols(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Terminals.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.034917][Move Method] 'insert(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser$TokenStream)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$TokenStream'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.035080][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.58 seconds
  * Quality Gain: 0.003758
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.031160
  * Possible Actions: 675
  * Applied Actions: 518
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0944
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.027402][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.027402][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.027402][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.027402][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.027402][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.027402][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.027402][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.027402][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.027402][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.027402][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.027402][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.027402][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.027402][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.027402][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.util.Log'
  - [-0.027402][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.027402][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.027402][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.027402][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.027402][Make Class Final] beaver.comp.Configuration
  - [-0.027402][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [-0.027402][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Make Class Final] beaver.comp.Action$Shift
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [-0.027402][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.027402][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.027402][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.027402][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.027402][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.027402][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.027402][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [-0.027402][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.027402][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.027402][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.027402][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.027402][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.027402][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.027402][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [-0.027402][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.027402][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [-0.027402][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.027402][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.027402][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.027402][Make Class Final] beaver.comp.Action$Accept
  - [-0.027402][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.027402][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken(beaver.Parser$TokenStream)
  - [-0.027402][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.027402][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.027402][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.027402][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.027402][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.027402][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.027402][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.027402][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.027402][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.027402][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.027402][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.027402][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.027402][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.027402][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.027402][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.027402][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [-0.027402][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [-0.027402][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Instantiate Method] Move static method 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Terminal'
  - [-0.027402][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.027402][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.027402][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.027402][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.027402][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.027402][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.027402][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.027402][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.027402][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Decrease Method Security] 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder$RuleWalker'
  - [-0.027402][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.027402][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.027402][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.027402][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.027402][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.027402][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.027402][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.027402][Decrease Method Security] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [-0.027402][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.027402][Make Class Final] beaver.comp.Configuration$Set
  - [-0.027402][Freeze Method] Convert 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.027402][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [-0.027402][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.027402][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.029195][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.029195][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [-0.029195][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.029195][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.029195][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.029195][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.029195][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.029195][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.029195][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.029195][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.029195][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.029195][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.029195][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029195][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.029195][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.029195][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.029195][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.029195][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.029195][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.029195][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.029195][Make Class Final] beaver.comp.State$Factory
  - [-0.029195][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [-0.029195][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.029195][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.029195][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.029195][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.029195][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.029195][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [-0.029195][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.029195][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.029195][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.029195][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.029195][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.029195][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Make Class Final] beaver.comp.State
  - [-0.029195][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.029195][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.029195][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029195][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.029195][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.029195][Make Class Non-Final] beaver.comp.Configuration
  - [-0.029195][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.029195][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.029195][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.029195][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.029195][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.029195][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.029195][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.029195][Decrease Method Security] 'errorPhraseRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.029195][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.029195][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production) into beaver.comp.Action.createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.029195][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029195][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.029195][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.029195][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029195][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.029195][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.029195][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [-0.029195][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.029195][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.029195][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.029195][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.029195][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.029195][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.029195][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.029195][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029195][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.029195][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.029195][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [-0.029195][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.029195][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.029195][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.029195][Introduce Factory] for beaver.spec.GrammarBuilder$RuleWalker.<init>()
  - [-0.029195][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Increase Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.029195][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.029195][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.029195][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.029195][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.029195][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.029195][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.029195][Decrease Method Security] 'increaseStackCapacity(beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.029195][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.029195][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.029195][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029195][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.029195][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.029195][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.029195][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.029195][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.029195][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.029195][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.029195][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.029195][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.029195][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.029195][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.029195][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.029195][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.029195][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.029195][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.029195][Inline Method] beaver.spec.GrammarBuilder.getTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.029195][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.029195][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029195][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.029195][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.029195][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.029195][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.029195][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029195][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029195][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.029195][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.029195][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.029195][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029195][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029195][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.029195][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.029195][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.029195][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.029195][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.029195][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.029195][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.029195][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.029195][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.029195][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.029195][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.029195][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.029195][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.029195][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029195][Make Class Non-Final] beaver.ParsingTables
  - [-0.029195][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.029195][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [-0.029195][Increase Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.029195][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.029195][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029195][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.029195][Inline Method] beaver.spec.ast.TreeWalker.<init>() into beaver.spec.ast.TreeWalker.createbeaver.spec.ast.TreeWalker()
  - [-0.029195][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.029195][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [-0.029195][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.029195][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.029195][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.029195][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029195][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.029195][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [-0.029195][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.029195][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029195][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.029195][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.029195][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.029195][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.029195][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.029195][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.029195][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.029195][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.029195][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.029195][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.029195][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.029195][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.029195][Move Method] 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029195][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.029195][Increase Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.029195][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.029195][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.029195][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.029195][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.029195][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.029195][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.029195][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.029195][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.031160][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.76 seconds
  * Quality Gain: 0.007454
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.034855
  * Possible Actions: 399
  * Applied Actions: 3273
  * Num Types: 94
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.1056
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.027402][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [-0.027402][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.027402][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.027402][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.027402][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.027402][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.027402][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.Parser$Simulator.reduce(int) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.027402][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.027402][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.027402][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.027402][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.027402][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [-0.027402][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.027402][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.027402][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [-0.027402][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.027402][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.027402][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.027402][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short)
  - [-0.027402][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.027402][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [-0.027402][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [-0.027402][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.027402][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.027402][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.027402][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.027402][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.027402][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.027402][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.027402][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.027402][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.027402][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [-0.027402][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [-0.027402][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [-0.027402][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Make Class Final] beaver.comp.Action$List
  - [-0.027402][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.027402][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [-0.027402][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [-0.027402][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [-0.027402][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.027402][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.027402][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.027402][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [-0.027402][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.027402][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [-0.027402][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [-0.027402][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.027402][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.027402][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.027402][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.027402][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.027402][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.027402][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.027402][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.027402][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.027402][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.027402][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [-0.027402][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.027402][Make Class Final] beaver.comp.Configuration
  - [-0.027402][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.029052][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [-0.029052][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.029052][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.029052][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.029052][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.029052][Move Up Method] '<init>(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.029052][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.029052][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.029052][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.029052][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [-0.029052][Make Class Non-Final] beaver.comp.Configuration
  - [-0.029052][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [-0.029052][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.029052][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.029052][Make Class Final] beaver.comp.Action$Reduce
  - [-0.029052][Increase Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.029052][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.029052][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.029052][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.029052][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029052][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.029052][Move Method] 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.029052][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.029052][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029052][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.029052][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.029052][Instantiate Method] Move static method 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.029052][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.029052][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.029052][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.029052][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Grammar)
  - [-0.029052][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [-0.029052][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [-0.029052][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.029052][Inline Method] beaver.spec.GrammarBuilder.getTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.029052][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.029052][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to static 
  - [-0.029052][Increase Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.029052][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029052][Make Class Final] beaver.comp.State$Factory
  - [-0.029052][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.029052][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [-0.029052][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.029052][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.029052][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.029052][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.029052][Make Class Non-Final] beaver.ParsingTables
  - [-0.029052][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Instantiate Method] Move static method 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.029052][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.029052][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.029052][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [-0.029052][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [-0.029052][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.029052][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [-0.029052][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.029052][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.029052][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.029052][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.029052][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.029052][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029052][Move Method] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.029052][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.029052][Move Method] 'canInsertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.029052][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.029052][Instantiate Method] Move static method 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.029052][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.029052][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.029052][Freeze Method] Convert 'canInsertActions(int,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.029052][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.029052][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.029052][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.030845][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [-0.030845][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [-0.030845][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [-0.030845][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.030845][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [-0.030845][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.030845][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.030845][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.030845][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Instantiate Method] Move static method 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.030845][Instantiate Method] Move static method 'canInsertActions(int,beaver.comp.Action$List,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.030845][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.030845][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.030845][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.030845][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.run.AntTask.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.AntTask.execute()
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.030845][Inline Method] beaver.comp.Action.<init>(beaver.spec.Grammar) into beaver.comp.Action.createbeaver.comp.Action(beaver.spec.Grammar)
  - [-0.030845][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.030845][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.030845][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.030845][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [-0.030845][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.030845][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032810][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [-0.032810][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Make Class Final] beaver.comp.ParsingTables
  - [-0.032810][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.032810][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.032810][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.032810][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.032810][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.032810][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [-0.032810][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.032810][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.032810][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [-0.032810][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032810][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.032810][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.032810][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.032810][Move Method] 'createbeaver.spec.Production(beaver.spec.Production$RHS)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.032810][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to static 
  - [-0.032810][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [-0.032810][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032810][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.032810][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.032810][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.032810][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032810][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [-0.032810][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.032810][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [-0.032810][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.032810][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.032810][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.032810][Inline Method] beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory) into beaver.comp.State$Factory.createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)
  - [-0.032810][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [-0.032810][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.032810][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.032810][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.032810][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.032810][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032810][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.032810][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [-0.032810][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [-0.032810][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [-0.032810][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.032810][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.032810][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.032810][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.State' to 'PRIVATE'
  - [-0.032810][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [-0.032810][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.032810][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.032810][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.032810][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.032810][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [-0.032810][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.032810][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.032810][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.032810][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [-0.032810][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032810][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [-0.032810][Increase Method Security] 'decode(char)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.032810][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.032810][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.032810][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.032810][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032810][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.032810][Increase Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032810][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [-0.032810][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.032810][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.032810][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032810][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032810][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.032810][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Make Class Final] beaver.comp.Configuration$Set
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to 'PUBLIC'
  - [-0.032810][Increase Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032810][Make Class Final] beaver.comp.Configuration
  - [-0.032810][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [-0.032810][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.032810][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.032810][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.032810][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [-0.032810][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032810][Move Method] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.032810][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.032810][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.032810][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [-0.032810][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.032810][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032810][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032810][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.032810][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.032810][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.032810][Instantiate Method] Move static method 'serializeParsingTables(int[],beaver.spec.NonTerminal,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.032810][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.032810][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.032810][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [-0.032810][Instantiate Method] Move static method 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.032810][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032810][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.Parser$Simulator.increaseStackCapacity() into beaver.Parser$Simulator.shift(short)
  - [-0.032810][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032810][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032810][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032810][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.032810][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [-0.032810][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.032810][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.032810][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.032810][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.032810][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.032810][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032810][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [-0.032810][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.032810][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032810][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [-0.032810][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.comp.util.Log$Record.<init>(int,int,java.lang.String) into beaver.comp.util.Log$Record.createbeaver.comp.util.Log$Record()
  - [-0.032810][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032810][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.032810][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.032810][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032810][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [-0.032810][Inline Method] beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol) into beaver.comp.Action.createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [-0.032810][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032810][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.032810][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [-0.032810][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032810][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.032810][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.032810][Decrease Method Security] 'insertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.032810][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.032810][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.032810][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032810][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [-0.032810][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.032810][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.032810][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.032810][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.032810][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.032810][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.032810][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032810][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.032810][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032810][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.032810][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032810][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.032810][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.032810][Make Class Final] beaver.comp.Action$Accept
  - [-0.032810][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.032810][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.032810][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Decrease Method Security] 'canInsertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int,beaver.comp.util.BitSet)
  - [-0.032810][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [-0.032810][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [-0.032810][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.032810][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [-0.032810][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.032810][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.032810][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.032810][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.032810][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [-0.032810][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.032810][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [-0.032810][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [-0.032810][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.032810][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032810][Make Class Non-Final] beaver.comp.Configuration
  - [-0.032810][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [-0.032810][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.032810][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.032810][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [-0.032810][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [-0.032810][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.032810][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.032810][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to static 
  - [-0.032810][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [-0.032810][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.032810][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [-0.032810][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.032810][Move Method] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.032810][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [-0.032810][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.032810][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.032810][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.032810][Move Method] 'insertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.032810][Instantiate Method] Move static method 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.032810][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [-0.032810][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.032810][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.032810][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032810][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'add(beaver.comp.Action$List,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [-0.032810][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032810][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.Action.<init>(beaver.spec.GrammarSymbol,beaver.comp.State) into beaver.comp.Action.createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.032810][Make Class Final] beaver.comp.Action$Reduce
  - [-0.032810][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.032810][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.032810][Decrease Method Security] 'insertLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.032810][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.032810][Decrease Method Security] 'hasCollisions(beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032810][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.032810][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.032810][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.032810][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.032810][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.032810][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.032810][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Instantiate Method] Move static method 'createbeaver.spec.Production(beaver.spec.NonTerminal)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.032810][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.032810][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.032810][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.032810][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.032810][Move Method] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.032810][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [-0.032810][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [-0.032810][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.032810][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.032810][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.032810][Increase Method Security] 'add(beaver.comp.Action$List,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.032810][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.032810][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$1'
  - [-0.032810][Increase Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.032810][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.032810][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.032810][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [-0.032810][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032810][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Type$Conflict$ReduceReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [-0.032810][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Instantiate Method] Move static method 'resolveConflict(beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.032810][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.032810][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.Parser$Simulator.<init>(beaver.Parser) into beaver.Parser$Simulator.createbeaver.Parser$Simulator(beaver.Parser)
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [-0.032810][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'errorPhraseRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032810][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [-0.032810][Move Method] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.032810][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.032810][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.032810][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.032810][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [-0.032810][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.032810][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.032810][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.032810][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.032810][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032810][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.032810][Increase Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.032810][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.032810][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032810][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.032810][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.032810][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.032810][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.032810][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.032810][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.032810][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.032810][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.032810][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [-0.032810][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [-0.032810][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032810][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.032810][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032810][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.032810][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [-0.032810][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.032810][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.032810][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.032810][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.032810][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.032810][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.032810][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.032810][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PRIVATE'
  - [-0.032810][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.032810][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.032810][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.032810][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.032810][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032810][Decrease Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [-0.032810][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.032810][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032810][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032810][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032810][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.032810][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.032810][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.032810][Remove Method] 'setLocation(int,int)' of type 'beaver.spec.ast.Node'
  - [-0.032810][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.032810][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.032810][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.032810][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032810][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.032810][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.032810][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [-0.032810][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [-0.032810][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [-0.032810][Increase Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.032810][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.032810][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.032810][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034774][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [-0.034774][Decrease Field Security] 'defs' of 'beaver.spec.ast.Rule' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034774][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034774][Make Class Final] beaver.comp.Action$Shift
  - [-0.034774][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.034774][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Instantiate Method] Move static method 'insertActions(int,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.034774][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034774][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [-0.034774][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.034774][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034774][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [-0.034774][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [-0.034774][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034774][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.034774][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.034774][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.034774][Freeze Method] Convert 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to static 
  - [-0.034774][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [-0.034774][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [-0.034774][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'hasCollisions(beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [-0.034774][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Make Class Final] beaver.comp.State
  - [-0.034774][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'hasCollisions(beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Instantiate Method] Move static method 'missingTokenInserted(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034774][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [-0.034774][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.034774][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034774][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034774][Move Method] 'insertLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034774][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.034774][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034774][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [-0.034774][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034774][Increase Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.034774][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [-0.034774][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassName.createbeaver.spec.ast.Declaration$ClassName(beaver.Symbol)
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Type'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [-0.034774][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034774][Move Method] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034774][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ClassName' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034774][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034774][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034774][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [-0.034774][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.034774][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'canInsertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.Action$List,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034774][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [-0.034774][Decrease Method Security] 'insertLookaheads(int,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [-0.034774][Make Class Final] beaver.comp.Configuration
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [-0.034774][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034774][Move Method] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.034774][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Method] 'add(beaver.comp.Action$List,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$List'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034774][Move Method] 'add(beaver.comp.Action$Shift,beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.034774][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [-0.034774][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [-0.034774][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Decrease Method Security] 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$ClassName.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$ClassName.accept(beaver.spec.ast.TreeWalker)
  - [-0.034774][Move Down Field] 'code' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$CodeContainer'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034774][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'insert(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser$TokenStream)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$1,beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set$Factory.getCore(beaver.comp.Configuration$Set$Factory)
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to static 
  - [-0.034774][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'insertLookaheads(int,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034774][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034774][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to static 
  - [-0.034774][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [-0.034774][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034774][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034774][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Remove Method] 'resolveConflict(beaver.comp.util.Log)' of type 'beaver.comp.State'
  - [-0.034774][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.State
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034774][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034774][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.State'
  - [-0.034774][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to its parameter type 'beaver.comp.Action'
  - [-0.034774][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [-0.034774][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration$PropagationLink)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.ParsingTables()' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action$Type)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Type'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.034774][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [-0.034774][Increase Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034774][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034774][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [-0.034774][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.Action$List)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034774][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [-0.034774][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to its parameter type 'beaver.comp.Action'
  - [-0.034774][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034774][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [-0.034774][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.034774][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034774][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.034774][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.034774][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Remove Method] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [-0.034774][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034774][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034774][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Make Class Final] beaver.comp.State$Factory
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [-0.034774][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Action$List
  - [-0.034774][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Action$Accept
  - [-0.034774][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034774][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034774][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [-0.034774][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Instantiate Method] Move static method 'writeStaticReturns(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Grammar' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.034774][Increase Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action$Type)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Type'
  - [-0.034774][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034774][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034774][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'writeStaticReturns(java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.Action$Reduce.makeDescription(beaver.comp.Action$Shift,java.lang.String,beaver.comp.State) into beaver.comp.Action$Reduce.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce)
  - [-0.034774][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034774][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.034774][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [-0.034774][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034774][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production) into beaver.comp.Action.createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Remove Method] 'createbeaver.ParsingTables()' of type 'beaver.ParsingTables'
  - [-0.034774][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034774][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034774][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.034774][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to its parameter type 'beaver.comp.Action'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'compile()' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.ParsingTables.<init>(java.io.InputStream) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Introduce Factory] for beaver.Parser$Events.<init>()
  - [-0.034774][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.034774][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action$Type)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Type'
  - [-0.034774][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034774][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034774][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.034774][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034774][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034774][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034774][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034774][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Move Method] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to its parameter type 'beaver.spec.Production'
  - [-0.034774][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'insertActions(int)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.034774][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.034774][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Make Class Final] beaver.comp.ParsingTables
  - [-0.034774][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.034774][Decrease Method Security] 'insertActions(int)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034774][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'defs' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034774][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034774][Decrease Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034774][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'alias' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.034774][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [-0.034774][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.034774][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034774][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [-0.034774][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to its parameter type 'beaver.comp.Action'
  - [-0.034774][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Remove Method] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action$Type)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Type'
  - [-0.034774][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [-0.034774][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Grammar)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.State$Factory
  - [-0.034774][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034774][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034774][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Remove Method] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.034774][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Method] 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.State'
  - [-0.034774][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.034774][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.034774][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Move Method] 'add(beaver.spec.Production$List,beaver.spec.Production$List)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.Production$List'
  - [-0.034774][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [-0.034774][Increase Method Security] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Move Method] 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$List'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Move Method] 'add(beaver.comp.Action$Shift,beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034774][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034774][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034774][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'insertActions(int)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Remove Method] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034774][Increase Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [-0.034774][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [-0.034774][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.State.makeDescription(beaver.comp.Action$Reduce,java.lang.String) into beaver.comp.State.createbeaver.comp.Action$Type$Conflict$ReduceReduce()
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034774][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Make Class Final] beaver.comp.State
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034774][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Method] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034774][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034774][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034774][Move Method] 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$List'
  - [-0.034774][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'canInsertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034774][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$NonAssoc.createbeaver.spec.ast.Declaration$NonAssoc(beaver.Symbol[])
  - [-0.034774][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034774][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034774][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034774][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [-0.034774][Move Method] 'buildShiftsFrom(beaver.comp.State$Factory,beaver.comp.State$Factory)' of 'beaver.comp.State' to its parameter type 'beaver.comp.State$Factory'
  - [-0.034774][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [-0.034774][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034774][Instantiate Method] Move static method 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State$Factory,beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'id' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Move Method] 'canInsertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034774][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034774][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.034774][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'compile()' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034774][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.034774][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Make Class Final] beaver.comp.Action$Shift
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034774][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.034774][Increase Method Security] 'add(beaver.comp.Action$Shift,beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Method] 'add(beaver.comp.Action$Shift,beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Move Method] 'canInsertActions(int,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.034774][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034774][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034774][Make Class Non-Final] beaver.comp.State
  - [-0.034774][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034774][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034774][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'writeStaticReturns(java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034774][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Grammar)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034774][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Configuration
  - [-0.034774][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034774][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.034774][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034774][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Instantiate Method] Move static method 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034774][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'id' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Increase Method Security] 'buildShiftsFrom(beaver.comp.State$Factory,beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Move Method] 'canInsertActions(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034774][Increase Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State$Factory,beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034774][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.034774][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034774][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034774][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Down Field] 'name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034774][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034774][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.034774][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034774][Make Class Final] beaver.comp.Configuration
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Move Method] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to its parameter type 'beaver.comp.util.Log$Record'
  - [-0.034774][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'insertActions(int)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'add(beaver.spec.Production$List,beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034774][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034774][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Move Method] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to its parameter type 'beaver.comp.util.Log$Record$List'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034774][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.State
  - [-0.034774][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034774][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034774][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.ParsingTables
  - [-0.034774][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.034774][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034774][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034774][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Make Class Non-Final] beaver.comp.State
  - [-0.034774][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$List(beaver.comp.Action$List)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [-0.034774][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034774][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034774][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034774][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034774][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034774][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.Action$Accept
  - [-0.034774][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034774][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034774][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034774][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [-0.034774][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034774][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Make Class Final] beaver.comp.ParsingTables
  - [-0.034774][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034774][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [-0.034774][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034774][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034774][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034774][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034774][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034774][Decrease Method Security] 'misspelledTokenReplaced()' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034774][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce()' of type 'beaver.comp.State'
  - [-0.034774][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Move Method] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action)' of 'beaver.comp.Action$Type' to its parameter type 'beaver.comp.Action'
  - [-0.034774][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'yychar' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034774][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034774][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034774][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034774][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034774][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Action$Shift
  - [-0.034774][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.comp.ParsingTables.canInsertActions(int,beaver.comp.Action$List) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034774][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.GrammarSymbol,beaver.comp.Action$Type)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034774][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034774][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034774][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034774][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034774][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Make Class Final] beaver.comp.Configuration
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034774][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034774][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034774][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034774][Move Method] 'createbeaver.comp.Action$List(beaver.comp.Action$List)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$List'
  - [-0.034774][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034774][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034774][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Make Class Final] beaver.comp.State$Factory
  - [-0.034774][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034774][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034774][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034774][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034774][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034774][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034774][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034774][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034774][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034774][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034774][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034774][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034774][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034774][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034774][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034774][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034774][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034855][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.90 seconds
  * Quality Gain: 0.003614
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.031016
  * Possible Actions: 325
  * Applied Actions: 4560
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0940
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [-0.027402][Inline Method] beaver.comp.run.Make.compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.027402][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [-0.027402][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.027402][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [-0.027402][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.027402][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.027402][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.027402][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.027402][Make Class Final] beaver.comp.Action$Shift
  - [-0.027402][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.027402][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [-0.027402][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'shift(short)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.027402][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'advanceStartIndex(int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.027402][Decrease Method Security] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [-0.027402][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.027402][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.027402][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [-0.027402][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.027402][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.027402][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.027402][Decrease Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.027402][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to static 
  - [-0.027402][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.027402][Move Method] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.027402][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [-0.027402][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.027402][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.027402][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of type 'beaver.comp.State'
  - [-0.027402][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.027402][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.027402][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.027402][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [-0.027402][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.027402][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.027402][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.027402][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.027402][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [-0.027402][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.027402][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.027402][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [-0.027402][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.027402][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.027402][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.027402][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.027402][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.027402][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [-0.027402][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [-0.027402][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.027402][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.027402][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [-0.027402][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.027402][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.027402][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.027402][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.027402][Make Class Final] beaver.comp.Action$List
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [-0.027402][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.027402][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.027402][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.027402][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.027402][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [-0.027402][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.027402][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [-0.027402][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.027402][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.027402][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.027402][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.027402][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [-0.027402][Decrease Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.027402][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.027402][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [-0.027402][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.027402][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [-0.027402][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.027402][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [-0.029052][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [-0.029052][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.029052][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.029052][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.029052][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.029052][Make Class Non-Final] beaver.ParsingTables
  - [-0.029052][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.029052][Make Class Final] beaver.comp.Action$Reduce
  - [-0.029052][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [-0.029052][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.029052][Instantiate Method] Move static method 'writeReduceActionCode(java.io.Writer,beaver.spec.Production)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.029052][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.029052][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.029052][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [-0.029052][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.029052][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [-0.029052][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [-0.029052][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029052][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [-0.029052][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.029052][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [-0.029052][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.029052][Move Down Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Reduce'
  - [-0.029052][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.029052][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.029052][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.029052][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.029052][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.029052][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.029052][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.029052][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.029052][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [-0.029052][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [-0.029052][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.029052][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.029052][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.029052][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [-0.029052][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.029052][Increase Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Increase Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.029052][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [-0.029052][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.029052][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action'
  - [-0.029052][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.029052][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.029052][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.029052][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.029052][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029052][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.029052][Make Class Final] beaver.comp.Action$Accept
  - [-0.029052][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.029052][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [-0.029052][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.029052][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'makeStates(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.029052][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.029052][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [-0.029052][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.029052][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.029052][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.029052][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [-0.029052][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [-0.029052][Decrease Method Security] 'newSymbol(short,java.lang.Object)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.029052][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029052][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.029052][Increase Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.029052][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.029052][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.029052][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029052][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.029052][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.029052][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [-0.029052][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.029052][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.029052][Increase Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.029052][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.029052][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.029052][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.029052][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [-0.029052][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.029052][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029052][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.029052][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.029052][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.029052][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.029052][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.029052][Inline Method] beaver.spec.ast.Declaration$Terminals.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [-0.029052][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029052][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.029052][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.029052][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029052][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.029052][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.029052][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.029052][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.029052][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.029052][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.029052][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.029052][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.029052][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.029052][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.029052][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [-0.029052][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.029052][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'advanceStartIndex(int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Inline Method] beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassName.createbeaver.spec.ast.Declaration$ClassName(beaver.Symbol)
  - [-0.029052][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029052][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [-0.029052][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.029052][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.029052][Increase Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.029052][Instantiate Method] Move static method 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.State'
  - [-0.029052][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [-0.029052][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [-0.029052][Move Down Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [-0.029052][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029052][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029052][Increase Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.029052][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.029052][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.029052][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.029052][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [-0.029052][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.029052][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.029052][Make Class Final] beaver.comp.State
  - [-0.029052][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [-0.029052][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.029052][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$List'
  - [-0.029052][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.029052][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.029052][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.029052][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.029052][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'name' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.029052][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.029052][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [-0.029052][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [-0.029052][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.029052][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.029052][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [-0.030845][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.030845][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Move Method] 'countReferencedSymbols(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.030845][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.030845][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030845][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.030845][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [-0.030845][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [-0.030845][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [-0.030845][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.030845][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.030845][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [-0.030845][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'isFull()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [-0.030845][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.030845][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.030845][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [-0.030845][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [-0.030845][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.030845][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030845][Instantiate Method] Move static method 'countReferencedSymbols(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.030845][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030845][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030845][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int,beaver.comp.util.BitSet)
  - [-0.030845][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030845][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030845][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.030845][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.030845][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [-0.030845][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.030845][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.030845][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [-0.030845][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [-0.030845][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030845][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.030845][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.030845][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [-0.030845][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Increase Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.030845][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'add(beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.030845][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Move Method] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to its parameter type 'beaver.comp.util.Log$Record'
  - [-0.030845][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Field Security] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory) into beaver.comp.State$Factory.createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)
  - [-0.030845][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.030845][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [-0.030845][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.030845][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.030845][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.030845][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [-0.030845][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030845][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [-0.030845][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.Symbol.<init>(short)
  - [-0.030845][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [-0.030845][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [-0.030845][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.030845][Freeze Method] Convert 'add(beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to static 
  - [-0.030845][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [-0.030845][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [-0.030845][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030845][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.030845][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [-0.030845][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.030845][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [-0.030845][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [-0.030845][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.030845][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.030845][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [-0.030845][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.030845][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.030845][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.030845][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.030845][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'shift(beaver.Symbol,short)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [-0.030845][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [-0.030845][Freeze Method] Convert 'add(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.030845][Make Class Final] beaver.comp.Configuration
  - [-0.030845][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [-0.030845][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [-0.030845][Decrease Method Security] 'countReferencedSymbols()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.030845][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030845][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [-0.030845][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [-0.030845][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$List
  - [-0.030845][Decrease Method Security] 'reduce(int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.030845][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.030845][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.030845][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.Parser$Events.<init>()
  - [-0.030845][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'trimCode(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030845][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.030845][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [-0.030845][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.030845][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030845][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.030845][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.030845][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.030845][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [-0.030845][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030845][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.030845][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [-0.030845][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [-0.030845][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.030845][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [-0.030845][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.030845][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.030845][Inline Method] beaver.Parser$Simulator.<init>(beaver.Parser) into beaver.Parser$Simulator.createbeaver.Parser$Simulator(beaver.Parser)
  - [-0.030845][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.030845][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [-0.030845][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [-0.030845][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [-0.030845][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Decrease Method Security] 'initStack(beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.030845][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [-0.030845][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [-0.030845][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [-0.030845][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.030845][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.030845][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.030845][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.030845][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.030845][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.030845][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [-0.030845][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.030845][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.030845][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.030845][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.030845][Move Method] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [-0.030845][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'resolveConflict(beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action)' of 'beaver.comp.Action$Reduce' to static 
  - [-0.030845][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.030845][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [-0.030845][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.030845][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.030845][Decrease Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$NonAssoc.createbeaver.spec.ast.Declaration$NonAssoc(beaver.Symbol[])
  - [-0.030845][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030845][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030845][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.030845][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Move Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030845][Introduce Factory] for beaver.spec.GrammarBuilder$RuleWalker.<init>()
  - [-0.030845][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols() into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.030845][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to static 
  - [-0.030845][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.030845][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030845][Instantiate Method] Move static method 'resolveConflict(beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.030845][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.030845][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.030845][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [-0.030845][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Move Method] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.030845][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Make Class Final] beaver.comp.Configuration$Set
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.030845][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030845][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.030845][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [-0.030845][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.030845][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.030845][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'writeReduceActionCode(java.io.Writer)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [-0.030845][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.030845][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'insertActions(int,beaver.comp.ParsingTables,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030845][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.030845][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.030845][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State) into beaver.comp.Action$Shift.createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.030845][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.030845][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'insertActions(int,beaver.comp.ParsingTables,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Make Class Final] beaver.comp.Action$Accept
  - [-0.030845][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [-0.030845][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.030845][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'yycolumn' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Instantiate Method] Move static method 'buildShiftsFrom(beaver.comp.State$Factory)' of 'beaver.comp.State' to its parameter type 'beaver.comp.State$Factory'
  - [-0.030845][Move Method] 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.030845][Inline Method] beaver.spec.GrammarBuilder$RuleWalker.<init>() into beaver.spec.GrammarBuilder$RuleWalker.createbeaver.spec.GrammarBuilder$RuleWalker()
  - [-0.030845][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030845][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.030845][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030845][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030845][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.030845][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.030845][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.030845][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [-0.030845][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.030845][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030845][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [-0.030845][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030845][Decrease Method Security] 'zzUnpackRowMap(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Remove Method] 'createbeaver.Scanner$Exception()' of type 'beaver.Scanner$Exception'
  - [-0.030845][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030845][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.030845][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.030845][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.030845][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'yycolumn' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030845][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.030845][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030845][Make Class Final] beaver.comp.Action$Shift
  - [-0.030845][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.030845][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.030845][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030845][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.030845][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [-0.030845][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.030845][Move Method] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$Imports' to its parameter type 'beaver.spec.GrammarBuilder'
  - [-0.030845][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Remove Method] 'getSrcFile(java.lang.String)' of type 'beaver.comp.run.Make'
  - [-0.030845][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030845][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.030845][Remove Method] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$RuleWalker()' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.030845][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.030845][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.030845][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.030845][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [-0.030845][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [-0.030845][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Move Method] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.030845][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030845][Move Method] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.030845][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.comp.util.Log$Record.<init>(int,int,java.lang.String) into beaver.comp.util.Log$Record.createbeaver.comp.util.Log$Record()
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030845][Introduce Factory] for beaver.spec.GrammarBuilder$DeclarationWalker.<init>()
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.030845][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.030845][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Move Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.030845][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.030845][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.030845][Move Method] 'createbeaver.spec.Production(beaver.spec.Production$RHS,beaver.spec.Production)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030845][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [-0.030845][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Make Class Non-Final] beaver.comp.State
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.030845][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Freeze Method] Convert 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.030845][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.030845][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.030845][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030845][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [-0.030845][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Remove Method] 'printVersion()' of type 'beaver.comp.run.Make'
  - [-0.030845][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030845][Decrease Field Security] 'prec' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [-0.030845][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'compressed' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030845][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.030845][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.030845][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030845][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Move Method] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.030845][Increase Field Security] 'prec' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.030845][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [-0.030845][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Make Class Final] beaver.comp.Action$List
  - [-0.030845][Move Method] 'getState(beaver.comp.State$Factory,beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State$Factory'
  - [-0.030845][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to static 
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production) into beaver.comp.Action.createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030845][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030845][Increase Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Move Method] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to its parameter type 'beaver.comp.State$Factory'
  - [-0.030845][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030845][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.030845][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [-0.030845][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.030845][Decrease Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Make Class Final] beaver.comp.State
  - [-0.030845][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.030845][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.030845][Make Class Non-Final] beaver.comp.State
  - [-0.030845][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.030845][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.030845][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.030845][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'code' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030845][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030845][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [-0.030845][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030845][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.030845][Make Class Final] beaver.comp.ParsingTables
  - [-0.030845][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.030845][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030845][Move Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.030845][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [-0.030845][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.030845][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.030845][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Move Down Method] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.030845][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'declarations' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.030845][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol) into beaver.comp.Action.createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [-0.030845][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to static 
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.030845][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.030845][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.030845][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.030845][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [-0.030845][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'insert(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser$TokenStream)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.030845][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Instantiate Method] Move static method 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.030845][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.030845][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.030845][Decrease Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.030845][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.030845][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030845][Instantiate Method] Move static method 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030845][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [-0.030845][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.030845][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030845][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Make Class Final] beaver.comp.Action$Reduce
  - [-0.030845][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'declarations' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Move Method] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.030845][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Reduce'
  - [-0.030845][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.030845][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030845][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.030845][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030845][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.GrammarBuilder$DeclarationWalker.<init>() into beaver.spec.GrammarBuilder$DeclarationWalker.createbeaver.spec.GrammarBuilder$DeclarationWalker()
  - [-0.030845][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [-0.030845][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$List
  - [-0.030845][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030845][Make Class Final] beaver.comp.Action$Shift
  - [-0.030845][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.030845][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.030845][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'insertLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030845][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.030845][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$RuleWalker()' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.030845][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'code' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030845][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.030845][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030845][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.030845][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.030845][Move Method] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to its parameter type 'beaver.comp.State'
  - [-0.030845][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030845][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'zzUnpackAttribute()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030845][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Make Class Final] beaver.comp.State$Factory
  - [-0.030845][Move Method] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.030845][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030845][Increase Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030845][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.030845][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.GrammarBuilder.getTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [-0.030845][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Make Class Final] beaver.comp.Action$Accept
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030845][Move Up Method] 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.030845][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'prec' of 'beaver.spec.GrammarSymbol' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030845][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030845][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.030845][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [-0.030845][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Instantiate Method] Move static method 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to its parameter type 'beaver.comp.State$Factory'
  - [-0.030845][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.Production$RHS,beaver.spec.NonTerminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.030845][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'insertLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030845][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030845][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.comp.Configuration
  - [-0.030845][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.030845][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030845][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030845][Move Method] 'insertLookaheads(int,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.030845][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030845][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.030845][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030845][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.030845][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030845][Make Class Final] beaver.comp.State
  - [-0.030845][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [-0.030845][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030845][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030845][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030845][Make Class Final] beaver.comp.Configuration$Set
  - [-0.030845][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [-0.030845][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030845][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030845][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.030845][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Make Class Final] beaver.comp.Configuration
  - [-0.030845][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.030845][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030845][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030845][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [-0.030845][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030845][Make Class Final] beaver.comp.Action$List
  - [-0.030845][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030845][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.030845][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.030845][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.030845][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030845][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.030845][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030845][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030845][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030845][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030845][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.030845][Inline Method] beaver.comp.State.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker) into beaver.comp.State.buildActions(beaver.spec.Grammar)
  - [-0.030845][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030845][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030845][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030845][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030845][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030845][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030845][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.030845][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030845][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030845][Instantiate Method] Move static method 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to its parameter type 'beaver.spec.Production'
  - [-0.030845][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030845][Increase Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030845][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.030845][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030845][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030927][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'splitActions(beaver.comp.ParserGenerator)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.030927][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.030927][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.030927][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.030927][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Inline Method] beaver.comp.ParsingTables.insertLookaheads(int,beaver.comp.Action$List) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.State.splitActions(beaver.comp.State) into beaver.comp.State.splitActions(beaver.comp.ParserGenerator)
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Move Method] 'missingTokenInserted(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.030927][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030927][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'insertActions(int,beaver.comp.ParsingTables,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Method] 'insertActions(int,beaver.comp.ParsingTables,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.030927][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'default_action' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'add(beaver.spec.Production$List)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.030927][Remove Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce)' of type 'beaver.comp.Action$Reduce'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set
  - [-0.030927][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Accept
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Shift
  - [-0.030927][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030927][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'declarations' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030927][Increase Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.030927][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.030927][Increase Method Security] 'insertActions(int,beaver.comp.ParsingTables,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030927][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Inline Method] beaver.spec.Production.add(beaver.spec.Production$List) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.030927][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Move Method] 'createbeaver.comp.Action$List(beaver.comp.Action$List)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$List'
  - [-0.030927][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.030927][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.Configuration
  - [-0.030927][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.030927][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Shift
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [-0.030927][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [-0.030927][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030927][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'insertActions(int,beaver.comp.ParsingTables,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.ParsingTables.insertActions(int,beaver.comp.ParsingTables,beaver.comp.Action$List) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.030927][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.030927][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.030927][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.030927][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.Action$List)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$List'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.030927][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Remove Method] 'setLocation(int,int)' of type 'beaver.spec.ast.Node'
  - [-0.030927][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Move Method] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to its parameter type 'beaver.comp.util.Log'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Method] 'missingTokenInserted(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030927][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.030927][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$List()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030927][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Move Method] 'checkAndResolveConflicts(beaver.comp.State)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.State'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Instantiate Method] Move static method 'add(beaver.comp.Action$Shift,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$List()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'splitActions(beaver.comp.ParserGenerator)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.030927][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$List()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'missingTokenInserted(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030927][Decrease Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.030927][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.Action$Shift
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'symbols' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.030927][Remove Field] 'lhs_sym' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.030927][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [-0.030927][Remove Method] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.ast.Rule$Definition'
  - [-0.030927][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030927][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Accept
  - [-0.030927][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.030927][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030927][Decrease Method Security] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildShiftsFrom()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Remove Method] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of type 'beaver.Action$1'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.030927][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$List'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.State,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [-0.030927][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.State
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030927][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [-0.030927][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$List
  - [-0.030927][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.Action$Reduce
  - [-0.030927][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [-0.030927][Make Class Final] beaver.comp.State$Factory
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.030927][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.030927][Move Method] 'splitActions(beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.030927][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.ParserGenerator.splitActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.030927][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.030927][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$List
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [-0.030927][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Reduce
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.030927][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.030927][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030927][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.030927][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.State$Factory.buildShiftsFrom() into beaver.comp.State$Factory.getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)
  - [-0.030927][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.030927][Make Class Final] beaver.comp.State$Factory
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030927][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.030927][Move Method] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State'
  - [-0.030927][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Move Method] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.030927][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.Action$Shift)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$List()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.State
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030927][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Remove Method] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030927][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.030927][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.030927][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Make Class Final] beaver.comp.State$Factory
  - [-0.030927][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'declarations' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.030927][Increase Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.ParsingTables
  - [-0.030927][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Accept
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030927][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.030927][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [-0.030927][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030927][Decrease Field Security] 'alias' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$List
  - [-0.030927][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.State$Factory
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.030927][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030927][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Method] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030927][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Method] 'add(beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.030927][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'code' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$List'
  - [-0.030927][Make Class Final] beaver.comp.Action$Accept
  - [-0.030927][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.030927][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.030927][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.030927][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Move Method] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Make Class Final] beaver.comp.Action$List
  - [-0.030927][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030927][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Remove Method] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Instantiate Method] Move static method 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030927][Increase Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.State
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.030927][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.030927][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.030927][Remove Method] 'createbeaver.comp.run.Options()' of type 'beaver.comp.run.Options'
  - [-0.030927][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030927][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'code' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.030927][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$1,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.030927][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.030927][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030927][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Remove Method] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.030927][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.030927][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of type 'beaver.spec.GrammarBuilder$4'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.030927][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'add(beaver.comp.Action$Shift)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration
  - [-0.030927][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$List
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of type 'beaver.spec.GrammarBuilder$RuleWalker'
  - [-0.030927][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set
  - [-0.030927][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.030927][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Instantiate Method] Move static method 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to its parameter type 'beaver.comp.util.Log$Record$List'
  - [-0.030927][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.030927][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$List
  - [-0.030927][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.030927][Increase Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Increase Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Move Method] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to its parameter type 'beaver.comp.util.Log$Record'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Remove Method] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.ast.Rule$Definition'
  - [-0.030927][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Decrease Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.030927][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.State$Factory
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.030927][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030927][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Shift,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Parser$TokenStream)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$TokenStream'
  - [-0.030927][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Increase Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Reduce
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.030927][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.030927][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.State'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.030927][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Move Method] 'add(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to its parameter type 'beaver.comp.util.Log$Record$List'
  - [-0.030927][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Move Method] 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State'
  - [-0.030927][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Accept
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.030927][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.030927][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.Action$Shift
  - [-0.030927][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.030927][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.030927][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$List
  - [-0.030927][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Make Class Final] beaver.comp.Action$Reduce
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Move Method] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.030927][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Configuration
  - [-0.030927][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.030927][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.030927][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.030927][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.030927][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030927][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.030927][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.030927][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.030927][Increase Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Make Class Final] beaver.comp.State
  - [-0.030927][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030927][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.030927][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.030927][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.030927][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.030927][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.030927][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.030927][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'yyline' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'setPrecedence(int)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.030927][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.030927][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.030927][Move Method] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.030927][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.030927][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [-0.030927][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.030927][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Make Class Final] beaver.comp.Configuration$Set
  - [-0.030927][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.030927][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.030927][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.030927][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.030927][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.030927][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.030927][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.030927][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030927][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.030927][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.030927][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.030927][Increase Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.030927][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.030927][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.030927][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.030927][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.030927][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.030927][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.030927][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.030927][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.030927][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.031016][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.37 seconds
  * Quality Gain: 0.000000
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Applied Actions:

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.40 seconds
  * Quality Gain: 0.007543
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.034945
  * Possible Actions: 343
  * Applied Actions: 4451
  * Num Types: 92
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.1059
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.027402][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.027402][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.027402][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.027402][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.027402][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.027402][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Make Class Final] beaver.comp.Action$List
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.027402][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.027402][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.027402][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.027402][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [-0.027402][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.027402][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.027402][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Make Class Abstract] beaver.spec.ast.TreeWalker
  - [-0.029052][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.029052][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.029052][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.029052][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.029052][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [-0.029052][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.029052][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.029052][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.029052][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [-0.029052][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [-0.029052][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to static 
  - [-0.029052][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [-0.029052][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.029052][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.029052][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [-0.029052][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [-0.029052][Decrease Method Security] 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.029052][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.029052][Increase Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.029052][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.029052][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.029052][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.029052][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.029052][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.029052][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.029052][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.029052][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Make Class Final] beaver.comp.State$Factory
  - [-0.029052][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.029052][Move Up Method] '<init>(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.029052][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.029052][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.029052][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029052][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [-0.029052][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.029052][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.029052][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.029052][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.029052][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.029052][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.029052][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.029052][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [-0.029052][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.029052][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029052][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029052][Freeze Method] Convert 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.029052][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.029052][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.029052][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.029052][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [-0.029052][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.029052][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.029052][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.029052][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.029052][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [-0.029052][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [-0.029052][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.029052][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.029052][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [-0.029052][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.029052][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.029052][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.029052][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.029052][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.029052][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [-0.029052][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [-0.029052][Decrease Method Security] 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.029052][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.029052][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.029052][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.029052][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.029052][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031016][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [-0.031016][Make Class Final] beaver.comp.Configuration$Set
  - [-0.031016][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.031016][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.031016][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.031016][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.031016][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.031016][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031016][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031016][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031016][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.031016][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031016][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.031016][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.031016][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.031016][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.031016][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.031016][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.031016][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.031016][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.031016][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.031016][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.031016][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.031016][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.031016][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031016][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.031016][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.031016][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.031016][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.031016][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.031016][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031016][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [-0.031016][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031016][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031016][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [-0.031016][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.031016][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [-0.031016][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.031016][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031016][Decrease Method Security] 'isNullable()' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.031016][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.031016][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [-0.031016][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.031016][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031016][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031016][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.031016][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int,beaver.comp.util.BitSet) into beaver.comp.util.BitSet.add(int)
  - [-0.031016][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031016][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.031016][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.031016][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.031016][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.031016][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031016][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.031016][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.032810][Make Class Abstract] beaver.comp.Action
  - [-0.032810][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.032810][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [-0.032810][Increase Method Security] 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.032810][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [-0.032810][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.032810][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.State)' of type 'beaver.comp.State'
  - [-0.032810][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032810][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.032810][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.032810][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.032810][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.032810][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.032810][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [-0.032810][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [-0.032810][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.032810][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.032810][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.032810][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.032810][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032810][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.032810][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032810][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.032810][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.032810][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.032810][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [-0.032810][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032810][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.032810][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [-0.032810][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.032810][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Increase Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.032810][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.032810][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.032810][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.032810][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.032810][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.032810][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.032810][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032810][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.032810][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032810][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.032810][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [-0.032810][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.032810][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032810][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [-0.032810][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.032810][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.032810][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.032810][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [-0.032810][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [-0.032810][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.032810][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.034603][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034603][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.034603][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.034603][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Introduce Factory] for beaver.spec.GrammarBuilder$DeclarationWalker.<init>()
  - [-0.034603][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [-0.034603][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Instantiate Method] Move static method 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder.writeListsCode(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.034603][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [-0.034603][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [-0.034603][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [-0.034603][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [-0.034603][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034603][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034603][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'hasCollisions()' of 'beaver.comp.ParsingTables' to static 
  - [-0.034603][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [-0.034603][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.034603][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034603][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034603][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034603][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034603][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034603][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.034603][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034603][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034603][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034603][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034603][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034603][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PRIVATE'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.034603][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [-0.034603][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [-0.034603][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034603][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [-0.034603][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.034603][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.034603][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.034603][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [-0.034603][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.034603][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.034603][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034603][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034603][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.034603][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034603][Make Class Final] beaver.comp.Action$Accept
  - [-0.034603][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [-0.034603][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.034603][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034603][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [-0.034603][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [-0.034603][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [-0.034603][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034603][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034603][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.Action$Shift.makeDescription(java.lang.String) into beaver.comp.Action$Shift.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034603][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034603][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.034603][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034603][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034603][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034603][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.034603][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034603][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Move Method] 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034603][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034603][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.034603][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.034603][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034603][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034603][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034603][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [-0.034603][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.034603][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.034603][Increase Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.034603][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034603][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [-0.034603][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034603][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034603][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>(short)
  - [-0.034603][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'sort()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.034603][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034603][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'zzUnpackAction(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034603][Instantiate Method] Move static method 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.034603][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.034603][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [-0.034603][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.034603][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [-0.034603][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034603][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [-0.034603][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.034603][Decrease Method Security] 'reduce(int,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.034603][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.034603][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034603][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034603][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Move Method] 'compile(beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.034603][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034603][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034603][Move Method] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034603][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.034603][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034603][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034603][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.parseOptions(java.lang.String[])
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.034603][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [-0.034603][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034603][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.034603][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [-0.034603][Decrease Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [-0.034603][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [-0.034603][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.034603][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.034603][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [-0.034603][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.034603][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassName.createbeaver.spec.ast.Declaration$ClassName(beaver.Symbol)
  - [-0.034603][Freeze Method] Convert 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.034603][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.034603][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)
  - [-0.034603][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034603][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [-0.034603][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder.getTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.034603][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034603][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.034603][Increase Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.034603][Increase Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.Parser$Simulator.<init>(beaver.Parser) into beaver.Parser$Simulator.createbeaver.Parser$Simulator(beaver.Parser)
  - [-0.034603][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034603][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [-0.034603][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034603][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034603][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.034603][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [-0.034603][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.034603][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [-0.034603][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034603][Make Class Final] beaver.comp.Action$Shift
  - [-0.034603][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034603][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034603][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034603][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.034603][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034603][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.034603][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.hasCollisions(beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034603][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034603][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034603][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034603][Decrease Method Security] 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [-0.034603][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.034603][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034603][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.034603][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.034603][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [-0.034603][Move Down Field] 'type' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.034603][Make Class Final] beaver.comp.ParsingTables
  - [-0.034603][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034603][Decrease Field Security] 'yycolumn' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034603][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [-0.034603][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.034603][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.034603][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.034603][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.034603][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [-0.034603][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034603][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.034603][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.034603][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034603][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034603][Instantiate Method] Move static method 'compile(beaver.comp.util.Log,beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034603][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.034603][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034603][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034603][Make Class Final] beaver.comp.State$Factory
  - [-0.034603][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [-0.034603][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034603][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.034603][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.034603][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [-0.034603][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [-0.034603][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.034603][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034603][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034603][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [-0.034603][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.034603][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034603][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034603][Freeze Method] Convert 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.034603][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Make Class Final] beaver.comp.State
  - [-0.034603][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.034603][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.034603][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [-0.034603][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.034603][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.034603][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034603][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [-0.034603][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.034603][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034603][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'markReducibleProductions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [-0.034603][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034603][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034603][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034603][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Shift'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034603][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.034603][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034603][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.034603][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [-0.034603][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [-0.034603][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'increaseStackCapacity(beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034603][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [-0.034603][Move Method] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.034603][Increase Method Security] 'increaseStackCapacity(beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PRIVATE'
  - [-0.034603][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034603][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Inline Method] beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory) into beaver.comp.State$Factory.createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [-0.034603][Instantiate Method] Move static method 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034603][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034603][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034603][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$NonAssoc.createbeaver.spec.ast.Declaration$NonAssoc(beaver.Symbol[])
  - [-0.034603][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.034603][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.034603][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.034603][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [-0.034603][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.034603][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [-0.034603][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [-0.034603][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034603][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.034603][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034603][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [-0.034603][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034603][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [-0.034603][Instantiate Method] Move static method 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.State'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [-0.034603][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034603][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034603][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034603][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.034603][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.Parser$Events.<init>()
  - [-0.034603][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034603][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Make Class Non-Final] beaver.ParsingTables
  - [-0.034603][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.034603][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034603][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [-0.034603][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.034603][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder$DeclarationWalker.<init>() into beaver.spec.GrammarBuilder$DeclarationWalker.createbeaver.spec.GrammarBuilder$DeclarationWalker()
  - [-0.034603][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034603][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [-0.034603][Freeze Method] Convert 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034603][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034603][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [-0.034603][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.034603][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034603][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034603][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034603][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [-0.034603][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [-0.034603][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034603][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034603][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034603][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [-0.034603][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034603][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034603][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034603][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034603][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034603][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [-0.034603][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [-0.034603][Decrease Method Security] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.034603][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [-0.034603][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034603][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034603][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [-0.034603][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034603][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034603][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034603][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034603][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [-0.034603][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034603][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.034603][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to static 
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [-0.034603][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034603][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034603][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034603][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034603][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [-0.034603][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [-0.034603][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034603][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034603][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034603][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034603][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.034603][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034603][Move Down Field] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034603][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034603][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034603][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034603][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.034603][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034603][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034603][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034603][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034603][Remove Method] 'visit(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.034603][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034603][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034603][Decrease Method Security] 'createbeaver.Scanner$Exception()' of 'beaver.Scanner$Exception' to 'PACKAGE'
  - [-0.034603][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034603][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034603][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034603][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034603][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034603][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034603][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.034603][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034603][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [-0.034603][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034603][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034603][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034603][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034603][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034603][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034603][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034603][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034603][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034766][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034766][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034766][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Remove Method] 'createbeaver.Scanner$Exception()' of type 'beaver.Scanner$Exception'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034766][Freeze Method] Convert 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [-0.034766][Decrease Method Security] 'readToken()' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [-0.034766][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034766][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.034766][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to static 
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034766][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034766][Instantiate Method] Move static method 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to its parameter type 'beaver.comp.State'
  - [-0.034766][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034766][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034766][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.034766][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.034766][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [-0.034766][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [-0.034766][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034766][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [-0.034766][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [-0.034766][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034766][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.034766][Inline Method] beaver.comp.Action$Reduce.<init>(beaver.spec.Terminal,beaver.spec.Production) into beaver.comp.Action$Reduce.createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.State.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[]) into beaver.comp.State.buildActions(beaver.spec.Grammar)
  - [-0.034766][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034766][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.State
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Move Method] 'missingTokenInserted(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034766][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Type$Conflict$ReduceReduce)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to static 
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034766][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Type$Conflict$ReduceReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Move Method] 'missingTokenInserted(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [-0.034766][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.034766][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [-0.034766][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034766][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [-0.034766][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$List()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034766][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034766][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034766][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034766][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$List()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [-0.034766][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.ParsingTables
  - [-0.034766][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034766][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034766][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$List
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034766][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.034766][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'code' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034766][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.034766][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034766][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'readToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034766][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034766][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [-0.034766][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034766][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables(beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034766][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.Action$Reduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.State) into beaver.comp.Action$Reduce.resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [-0.034766][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034766][Move Method] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034766][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Configuration
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$List
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.034766][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Remove Method] 'getReduceActionCode(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.ast.Rule$Definition'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Remove Method] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.034766][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034766][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034766][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$4'
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Move Method] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Move Method] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034766][Move Down Field] 'code' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034766][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034766][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$2'
  - [-0.034766][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.State$Factory
  - [-0.034766][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.034766][Decrease Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [-0.034766][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.comp.Action$Reduce.makeDescription(java.lang.String) into beaver.comp.Action$Reduce.resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034766][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'state' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034766][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Remove Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [-0.034766][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.034766][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Make Class Final] beaver.comp.Configuration
  - [-0.034766][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.comp.State.findLookaheads(beaver.comp.State) into beaver.comp.State.findLookaheads()
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'assoc' of 'beaver.spec.GrammarSymbol' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Instantiate Method] Move static method 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.034766][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [-0.034766][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [-0.034766][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Remove Method] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of type 'beaver.comp.Configuration'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034766][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'default_action' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.State
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$Accept
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Remove Method] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of type 'beaver.spec.ast.Rule$Definition'
  - [-0.034766][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034766][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034766][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.034766][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034766][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'elements' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Make Class Final] beaver.comp.ParsingTables
  - [-0.034766][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Down Field] 'symbols' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Make Class Final] beaver.comp.Action$List
  - [-0.034766][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Remove Method] 'printUsage()' of type 'beaver.comp.run.Make'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Remove Method] 'createbeaver.spec.ast.Rule$Definition()' of type 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Make Class Final] beaver.comp.Configuration
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.State$Factory
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Remove Method] 'setLocation(int,int)' of type 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PRIVATE'
  - [-0.034766][Remove Class] beaver.comp.run.Make
  - [-0.034766][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034766][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034766][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034766][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$Shift
  - [-0.034766][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'prec_sym_name' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'findLookaheads()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034766][Make Class Final] beaver.comp.Configuration
  - [-0.034766][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034766][Make Class Non-Final] beaver.comp.State
  - [-0.034766][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034766][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to static 
  - [-0.034766][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'elements' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034766][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034766][Increase Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.comp.State.splitActions(beaver.comp.State) into beaver.comp.State.splitActions()
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.034766][Move Down Field] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034766][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Parser$TokenStream)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$TokenStream'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'n_terms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.comp.util.Log$Record.<init>(int,int,java.lang.String) into beaver.comp.util.Log$Record.createbeaver.comp.util.Log$Record()
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034766][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.State
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034766][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'code' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034766][Increase Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.State
  - [-0.034766][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Action$Accept
  - [-0.034766][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [-0.034766][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.034766][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'alias' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'countStates()' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.State$Factory
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034766][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034766][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034766][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034766][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Configuration
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034766][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Parser$TokenStream)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034766][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034766][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Remove Method] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Make Class Final] beaver.comp.State
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034766][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034766][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'symbols' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034766][Remove Method] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [-0.034766][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034766][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of type 'beaver.spec.GrammarBuilder$RuleWalker'
  - [-0.034766][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Make Class Non-Final] beaver.comp.State
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Accept
  - [-0.034766][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [-0.034766][Remove Method] 'createbeaver.spec.parser.GrammarParser$Terminals()' of type 'beaver.spec.parser.GrammarParser$Terminals'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034766][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034766][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034766][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034766][Make Class Final] beaver.comp.State
  - [-0.034766][Increase Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Move Method] 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to its parameter type 'beaver.comp.State$Factory'
  - [-0.034766][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034766][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034766][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'token_line' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034766][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Make Class Final] beaver.comp.ParsingTables
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.State()' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Remove Method] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$List
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034766][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034766][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.GrammarBuilder$DeclarationWalker()' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'yycolumn' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034766][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PRIVATE'
  - [-0.034766][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.034766][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Action$Reduce(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034766][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034766][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'assoc' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034766][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034766][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034766][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of type 'beaver.comp.Action$Reduce'
  - [-0.034766][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PRIVATE'
  - [-0.034766][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PRIVATE'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034766][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034766][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.034766][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034766][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034766][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034766][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034766][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034766][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034766][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034766][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034766][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034766][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034766][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034766][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034766][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034766][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034766][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034766][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.034766][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034766][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034766][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034766][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034766][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034766][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034766][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034766][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034945][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.04 seconds
  * Quality Gain: 0.007679
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.035080
  * Possible Actions: 336
  * Applied Actions: 4660
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.1063
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [-0.027402][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [-0.027402][Freeze Method] Convert 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.027402][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.027402][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.027402][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.027402][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.027402][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.027402][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.027402][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.027402][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [-0.027402][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.027402][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [-0.027402][Decrease Method Security] 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.027402][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PACKAGE'
  - [-0.027402][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.027402][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [-0.027402][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.027402][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.029195][Make Class Abstract] beaver.comp.Action
  - [-0.029195][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.029195][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.029195][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.029195][Make Class Final] beaver.comp.Action$Shift
  - [-0.029195][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.029195][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int)
  - [-0.029195][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.029195][Decrease Method Security] 'compressActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.029195][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [-0.029195][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.029195][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [-0.029195][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.029195][Inline Method] beaver.comp.ParsingTables.renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.029195][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.029195][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.029195][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.029195][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [-0.029195][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.029195][Decrease Method Security] 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.031160][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [-0.031160][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.031160][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.031160][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [-0.031160][Make Class Non-Final] beaver.ParsingTables
  - [-0.031160][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.comp.State$Factory.buildShiftsFrom(beaver.comp.State) into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)
  - [-0.031160][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031160][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [-0.031160][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [-0.031160][Inline Method] beaver.Parser$Simulator.shift(short) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.031160][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.031160][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.encode(byte[])
  - [-0.031160][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.031160][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.031160][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.031160][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.031160][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.031160][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.util.Log'
  - [-0.031160][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream)
  - [-0.031160][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.031160][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.031160][Instantiate Method] Move static method 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.031160][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.run.Make)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Make'
  - [-0.031160][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.031160][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.031160][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.031160][Instantiate Method] Move static method 'writeMarkersClass(beaver.spec.Terminal[],java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Terminal'
  - [-0.031160][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.031160][Make Class Final] beaver.comp.Action$List
  - [-0.031160][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.031160][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.031160][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.031160][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.031160][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [-0.031160][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [-0.031160][Increase Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.031160][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.031160][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.031160][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031160][Make Class Final] beaver.comp.State$Factory
  - [-0.031160][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.031160][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.031160][Make Class Non-Final] beaver.comp.Action$List
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.031160][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.031160][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.031160][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.031160][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.031160][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.031160][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.031160][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.031160][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.031160][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [-0.031160][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.031160][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'zzRefill()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.031160][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.031160][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.031160][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.031160][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [-0.031160][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.031160][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.031160][Make Class Final] beaver.comp.ParsingTables
  - [-0.031160][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.031160][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.031160][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.031160][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.031160][Decrease Method Security] 'reduce(int)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.031160][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.031160][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [-0.031160][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.031160][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.031160][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.031160][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.031160][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.031160][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.031160][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.032953][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.032953][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Move Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.032953][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.032953][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.032953][Move Method] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [-0.032953][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.032953][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.032953][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.032953][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [-0.032953][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [-0.032953][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032953][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.032953][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.032953][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.032953][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.032953][Make Class Final] beaver.comp.Action$List
  - [-0.032953][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.032953][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.032953][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [-0.032953][Decrease Method Security] 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.032953][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to static 
  - [-0.032953][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.032953][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.032953][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.032953][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.032953][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.032953][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)
  - [-0.032953][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.032953][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.032953][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.032953][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.032953][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.032953][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.032953][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.032953][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.032953][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.032953][Introduce Factory] for beaver.Symbol.<init>(short)
  - [-0.032953][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [-0.034917][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.034917][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Increase Method Security] 'rewind()' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.034917][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.makeProductionDescriptors(beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [-0.034917][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.034917][Increase Method Security] 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034917][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [-0.034917][Decrease Method Security] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator.checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.034917][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.034917][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034917][Introduce Factory] for beaver.Parser$Events.<init>()
  - [-0.034917][Freeze Method] Convert 'removeLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.034917][Decrease Method Security] 'startFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Decrease Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.034917][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.034917][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.034917][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [-0.034917][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.034917][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'encode(byte[])' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Move Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String,beaver.comp.Action$Type$Conflict$ReduceReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.034917][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034917][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Move Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [-0.034917][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.034917][Decrease Method Security] 'getNonTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [-0.034917][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [-0.034917][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Make)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.run.Make'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.034917][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034917][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [-0.034917][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action'
  - [-0.034917][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034917][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassName.createbeaver.spec.ast.Declaration$ClassName(beaver.Symbol)
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034917][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.034917][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [-0.034917][Freeze Method] Convert 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.034917][Decrease Method Security] 'compress()' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.034917][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.034917][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [-0.034917][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034917][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.034917][Decrease Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Move Method] 'countStates(beaver.comp.ParsingTables)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [-0.034917][Decrease Method Security] 'buildClosure()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [-0.034917][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034917][Move Method] 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034917][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.034917][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034917][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.034917][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [-0.034917][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034917][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.034917][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$NonAssoc.createbeaver.spec.ast.Declaration$NonAssoc(beaver.Symbol[])
  - [-0.034917][Move Method] 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [-0.034917][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Accept
  - [-0.034917][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [-0.034917][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'extendFirstSet()' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.034917][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.034917][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to static 
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Inline Method] beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory) into beaver.comp.State$Factory.createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)
  - [-0.034917][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034917][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Inline Method] beaver.comp.util.Log$Record.<init>(int,int,java.lang.String) into beaver.comp.util.Log$Record.createbeaver.comp.util.Log$Record()
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.034917][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.GrammarBuilder.propagateTypes(beaver.spec.NonTerminal[]) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Make Class Final] beaver.comp.State
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Method] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Method Security] 'zzUnpackAttribute(java.lang.String,int,int[])' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'makeDescription(beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAttribute()
  - [-0.034917][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034917][Move Method] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [-0.034917][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [-0.034917][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Reduce,beaver.comp.Action$Type$Conflict$ReduceReduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [-0.034917][Decrease Method Security] 'removeResolvedActions()' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$1' to static 
  - [-0.034917][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [-0.034917][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [-0.034917][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [-0.034917][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Reduce,beaver.comp.Action$Type$Conflict$ReduceReduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Type$Conflict$ReduceReduce'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.034917][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.034917][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to static 
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'printUsage()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackRowMap()
  - [-0.034917][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.034917][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034917][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.034917][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [-0.034917][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'removeResolvedActions()' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [-0.034917][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [-0.034917][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034917][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [-0.034917][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [-0.034917][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'initStack()' of 'beaver.Parser$Simulator' to static 
  - [-0.034917][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Move Method] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.034917][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.034917][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.034917][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.034917][Increase Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getSpecAsResourceStream(java.lang.Class)' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034917][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [-0.034917][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$1,beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set$Factory.getCore()
  - [-0.034917][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034917][Freeze Method] Convert 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to static 
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Move Method] 'getOutputFileName(beaver.comp.run.AntTask)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.AntTask'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.034917][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.034917][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034917][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.034917][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.034917][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State) into beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.034917][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034917][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.034917][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034917][Decrease Method Security] 'zzRefill(beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034917][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [-0.034917][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [-0.034917][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.034917][Move Method] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to its parameter type 'beaver.spec.Production'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.State$Factory(beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set$Factory' to its parameter type 'beaver.comp.State$Factory'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Parser$Simulator.initStack(beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034917][Move Method] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.034917][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [-0.034917][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [-0.034917][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill(beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Increase Field Security] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.034917][Move Down Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034917][Move Method] 'add(beaver.spec.Production$List,beaver.spec.Production$List)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.Production$List'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Move Method] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.034917][Decrease Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [-0.034917][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action$2' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [-0.034917][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [-0.034917][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [-0.034917][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$List
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [-0.034917][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to static 
  - [-0.034917][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'defs' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log)' of type 'beaver.comp.State'
  - [-0.034917][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Decrease Method Security] 'add(beaver.spec.Production$List,beaver.spec.Production)' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Method] 'getState(beaver.comp.State$Factory,beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State$Factory'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getNonTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [-0.034917][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Method] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.GrammarBuilder.getTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder)
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set.buildClosure(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.getState(beaver.comp.State$Factory,beaver.comp.State$Factory)
  - [-0.034917][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'getOutputFileName(beaver.comp.io.SrcReader)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.034917][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Remove Method] 'reduce(beaver.Symbol[],int)' of type 'beaver.Action$2'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionCode(beaver.spec.Production,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.034917][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.034917][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'terminals' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Inline Method] beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ShiftReduce.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State) into beaver.comp.Action$Shift.createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.State.splitActions(beaver.comp.State) into beaver.comp.State.splitActions()
  - [-0.034917][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [-0.034917][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ConstructorCode'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.034917][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034917][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.034917][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State)' of 'beaver.comp.Action$Shift' to static 
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to its parameter type 'beaver.comp.State'
  - [-0.034917][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.spec.Production$RHS$Item'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set.appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.getState(beaver.comp.State$Factory,beaver.comp.State$Factory)
  - [-0.034917][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.034917][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Configuration$Set.createbeaver.comp.State() into beaver.comp.Configuration$Set.getState(beaver.comp.State$Factory,beaver.comp.State$Factory)
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [-0.034917][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.State,beaver.comp.Action$Type$Conflict$ShiftReduce)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.034917][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Move Method] 'getState(beaver.comp.State$Factory,beaver.comp.State$Factory)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State$Factory'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'yypushback(int,beaver.spec.parser.GrammarScanner)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Accept
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassName'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034917][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [-0.034917][Move Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$List
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$NonAssoc.visit() into beaver.spec.ast.Declaration$NonAssoc.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getNonTerminals(beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Method] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.034917][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.034917][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [-0.034917][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int,beaver.spec.parser.GrammarScanner) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Increase Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034917][Move Method] 'createbeaver.spec.Production(beaver.spec.Production$RHS,beaver.spec.Production)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.State
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Accept
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser()
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.State
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.TreeWalker.<init>() into beaver.spec.ast.TreeWalker.createbeaver.spec.ast.TreeWalker()
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.Production,beaver.spec.NonTerminal)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.State$Factory
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [-0.034917][Increase Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [-0.034917][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ConstructorCode.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [-0.034917][Increase Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Remove Method] 'createbeaver.spec.parser.GrammarScanner()' of type 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'state' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ClassName' to static 
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'writeMarkersClass(java.io.Writer)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.034917][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Terminals' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'defs' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ClassCode'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'prec_sym_name' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.Declaration$PackageName' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.034917][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'prec_sym_name' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'default_action' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.run.Options'
  - [-0.034917][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'missingTokenInserted(beaver.Parser$Events)' of 'beaver.Symbol' to static 
  - [-0.034917][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log)' of 'beaver.comp.State' to its parameter type 'beaver.comp.util.Log'
  - [-0.034917][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.GrammarTreeRoot' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$PackageName.visit() into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of type 'beaver.spec.GrammarBuilder$4'
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Method] 'indexOfLastReferencedSymbol(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.034917][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to static 
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.GrammarBuilder)' of 'beaver.spec.ast.Declaration$ListType' to its parameter type 'beaver.spec.GrammarBuilder'
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Move Method] 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [-0.034917][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log)' of 'beaver.comp.State' to its parameter type 'beaver.comp.util.Log'
  - [-0.034917][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034917][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034917][Move Method] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to its parameter type 'beaver.comp.util.Log$Record'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$LeftAssoc' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'removeResolvedActions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$ClassCode.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$ClassCode.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$TypeOf.visit() into beaver.spec.ast.Declaration$TypeOf.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Shift
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034917][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getSrcReader(java.io.File)' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Move Method] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034917][Decrease Method Security] 'getOutputFileName()' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.ParserGenerator$CompiledParser$1'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [-0.034917][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'indexOfLastReferencedSymbol(beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034917][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.034917][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Remove Method] 'missingTokenInserted(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Error.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Error.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Action$List.removeResolvedActions(beaver.comp.Action$List) into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034917][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.034917][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Move Method] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Move Method] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.034917][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [-0.034917][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034917][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Increase Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.034917][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Move Method] 'syntaxError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.034917][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'yyline' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'misspelledTokenReplaced(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Action$Shift.createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Type$Conflict$ShiftReduce,beaver.comp.State,beaver.comp.Action$Reduce) into beaver.comp.Action$Shift.resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of 'beaver.Action$1' to 'PRIVATE'
  - [-0.034917][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [-0.034917][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Implements'
  - [-0.034917][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.State'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'defs' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Make Class Final] beaver.comp.Action$Accept
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Remove Method] 'reduce(beaver.Symbol[],int,beaver.Action$1)' of type 'beaver.Action$1'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.State$Factory
  - [-0.034917][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Move Method] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.util.Log)' of 'beaver.comp.State' to its parameter type 'beaver.comp.util.Log'
  - [-0.034917][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.State
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.State
  - [-0.034917][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Increase Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'type' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [-0.034917][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.034917][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$List
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Shift
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Remove Method] 'createbeaver.comp.run.Make()' of type 'beaver.comp.run.Make'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Method] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Make Class Final] beaver.comp.Action$Shift
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Remove Method] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Implements.visit() into beaver.spec.ast.Declaration$Implements.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of type 'beaver.spec.GrammarBuilder$RuleWalker'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Move Method] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to its parameter type 'beaver.comp.util.Log$Record$List'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$List
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.State
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034917][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.State
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$2' to static 
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.ast.Declaration$Imports.visit() into beaver.spec.ast.Declaration$Imports.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Shift
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Increase Method Security] 'countStates()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getState(beaver.comp.State$Factory,beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034917][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034917][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Remove Method] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.State
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Move Method] 'writeStaticReturns(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Grammar' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeStaticReturns(java.io.Writer,beaver.spec.Grammar) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.034917][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Remove Class] beaver.comp.run.Make
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'matched_text' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Make Class Final] beaver.comp.State
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$RightAssoc' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Rule,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set
  - [-0.034917][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzStartRead' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Move Method] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to its parameter type 'beaver.comp.util.Log$Record'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.State$Factory
  - [-0.034917][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Accept
  - [-0.034917][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Instantiate Method] Move static method 'add(beaver.comp.util.Log$Record$List,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record' to its parameter type 'beaver.comp.util.Log$Record$List'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'defs' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of type 'beaver.spec.GrammarBuilder$DeclarationWalker'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$ConstructorCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Field Security] 'zzAtBOL' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Parser$Simulator.<init>(beaver.Parser) into beaver.Parser$Simulator.createbeaver.Parser$Simulator(beaver.Parser)
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034917][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.034917][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Decrease Field Security] 'matched_text' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.State
  - [-0.034917][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEOFDone' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'countStates()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Down Field] 'zzEndRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Method Security] 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'countStates()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.State
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.ParsingTables
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'token_line' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.034917][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Instantiate Method] Move static method 'syntaxError(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Remove Method] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'type' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Declaration'
  - [-0.034917][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Inline Method] beaver.spec.ast.Rule$Definition$Element.visit() into beaver.spec.ast.Rule$Definition$Element.accept(beaver.spec.ast.TreeWalker)
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'compareTo(java.lang.Object,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'zzReader' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$2)' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'token_column' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$List
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034917][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.034917][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.034917][Remove Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'alias' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'grammar' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'code' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.034917][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Increase Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Remove Method] 'compile()' of type 'beaver.comp.io.SrcReader'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isResolved(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PROTECTED'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Remove Method] 'visit(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.034917][Move Up Field] 'alias' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Remove Method] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of type 'beaver.spec.Production$RHS$Item'
  - [-0.034917][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'add(beaver.comp.Action,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Action$Reduce
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'getTypeName(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Remove Method] 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of type 'beaver.spec.ast.Declaration$CodeContainer'
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$List$1)' of type 'beaver.comp.Action$List$1'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Shift
  - [-0.034917][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Remove Method] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of type 'beaver.spec.Production$RHS$Item'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.034917][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.034917][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.034917][Move Method] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'symbols' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.034917][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Move Method] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.034917][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.034917][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.034917][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.034917][Decrease Method Security] 'countStates()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.034917][Move Up Field] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.034917][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Move Method] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.034917][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Move Down Field] 'yycolumn' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'accept(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.034917][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'visit()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.034917][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.034917][Remove Method] 'setLocation(int,int)' of type 'beaver.spec.ast.Node'
  - [-0.034917][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.034917][Decrease Field Security] 'code' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.034917][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.034917][Decrease Method Security] 'makeDescription(java.lang.String)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$List
  - [-0.034917][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.034917][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.034917][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.034917][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.034917][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'matched_text' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.034917][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.034917][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.034917][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.034917][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.034917][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Shift)' of type 'beaver.comp.Action$Shift'
  - [-0.034917][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.034917][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.034917][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [-0.034917][Make Class Final] beaver.comp.Configuration
  - [-0.034917][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.034917][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.034917][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.034917][Remove Method] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of type 'beaver.spec.Production$RHS$Item'
  - [-0.034917][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.034917][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.034917][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.034917][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Terminals()' of 'beaver.spec.parser.GrammarParser$Terminals' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.034917][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.034917][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.034917][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.034917][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.034917][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.034917][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.034917][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.034917][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.034917][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.035080][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.49 seconds
  * Quality Gain: 0.005893
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.033295
  * Possible Actions: 408
  * Applied Actions: 2934
  * Num Types: 93
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.1009
    * numInterf: 0.0000

* Applied Actions:
  - [-0.027402][Freeze Method] Convert 'reportConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Decrease Method Security] 'countStates(beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'writeParsingTables(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.027402][Freeze Method] Convert 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.027402][Inline Method] beaver.Parser$TokenStream.readToken() into beaver.Parser$TokenStream.nextToken()
  - [-0.027402][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.027402][Inline Method] beaver.ParsingTables.decode(char) into beaver.ParsingTables.decode(java.lang.String)
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>()
  - [-0.027402][Decrease Field Security] 'symbols' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'setLocation(int,int)' of 'beaver.spec.ast.Node' to static 
  - [-0.027402][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'writeListsCode(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.027402][Freeze Method] Convert 'writeTo(java.io.DataOutputStream)' of 'beaver.comp.ParsingTables' to static 
  - [-0.027402][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.comp.run.AntTask.getOutputFileName(beaver.comp.io.SrcReader) into beaver.comp.run.AntTask.execute()
  - [-0.027402][Freeze Method] Convert 'isFull()' of 'beaver.Parser$TokenStream' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.util.BitSet.<init>(int)
  - [-0.027402][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.027402][Introduce Factory] for beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator.compressActions(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.027402][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to static 
  - [-0.027402][Decrease Method Security] 'getNonTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.027402][Freeze Method] Convert 'getAlias()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.027402][Freeze Method] Convert 'forEachElementRun(beaver.comp.util.BitSet$Processor)' of 'beaver.comp.util.BitSet' to static 
  - [-0.027402][Freeze Method] Convert 'findNextState(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.027402][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.027402][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PRIVATE'
  - [-0.027402][Freeze Method] Convert 'warning(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'hasCollisions()' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.027402][Freeze Method] Convert 'sort()' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.027402][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.027402][Make Class Final] beaver.comp.ParsingTables
  - [-0.027402][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.027402][Increase Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.027402][Freeze Method] Convert 'add(beaver.spec.Production)' of 'beaver.spec.Production$List' to static 
  - [-0.027402][Instantiate Method] Move static method 'makeProductionDescriptors(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Grammar'
  - [-0.027402][Freeze Method] Convert 'compress()' of 'beaver.comp.Action$List' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.ast.TreeWalker.<init>()
  - [-0.027402][Freeze Method] Convert 'error(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration)
  - [-0.027402][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.027402][Decrease Method Security] 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.comp.util.Log$Record.<init>(int,int,java.lang.String)
  - [-0.027402][Inline Method] beaver.comp.Configuration$PropagationLink.<init>(beaver.comp.Configuration) into beaver.comp.Configuration$PropagationLink.createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)
  - [-0.027402][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.027402][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsArray(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.027402][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration$1)
  - [-0.027402][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.027402][Introduce Factory] for beaver.Parser$Simulator.<init>(beaver.Parser)
  - [-0.027402][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.027402][Decrease Method Security] 'invokeReduceAction(int,int)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.027402][Freeze Method] Convert 'buildShiftsFrom(beaver.comp.State)' of 'beaver.comp.State$Factory' to static 
  - [-0.027402][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.027402][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackAction()
  - [-0.027402][Introduce Factory] for beaver.Symbol.<init>(short)
  - [-0.027402][Freeze Method] Convert 'size()' of 'beaver.spec.Production$RHS' to static 
  - [-0.027402][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String)
  - [-0.027402][Instantiate Method] Move static method 'createbeaver.comp.Configuration$PropagationLink(beaver.comp.Configuration)' of 'beaver.comp.Configuration$PropagationLink' to its parameter type 'beaver.comp.Configuration'
  - [-0.027402][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.027402][Increase Method Security] 'decode(java.lang.String)' of 'beaver.ParsingTables' to 'PRIVATE'
  - [-0.027402][Freeze Method] Convert 'invokeReduceAction(int,int)' of 'beaver.Parser' to static 
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.027402][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.027402][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.027402][Decrease Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.027402][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.Configuration' to static 
  - [-0.027402][Move Down Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.027402][Introduce Factory] for beaver.comp.ParserGenerator.<init>()
  - [-0.029195][Make Class Abstract] beaver.comp.Action$Type$Conflict
  - [-0.029195][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration$1) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.029195][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.029195][Increase Method Security] 'nextToken()' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.029195][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.029195][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Make Class Abstract] beaver.spec.GrammarBuilder$DeclarationWalker
  - [-0.031160][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.comp.ParsingTables.countStates(beaver.comp.State) into beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.031160][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to 'PACKAGE'
  - [-0.031160][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.Make' to its parameter type 'beaver.comp.run.Options'
  - [-0.031160][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.031160][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.031160][Make Class Final] beaver.comp.Configuration
  - [-0.031160][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.031160][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.031160][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'getStart()' of 'beaver.Symbol' to static 
  - [-0.031160][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'startFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.031160][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator.checkUnreducibleProductions(beaver.spec.Grammar,beaver.comp.State,beaver.comp.util.Log) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.031160][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031160][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.031160][Freeze Method] Convert 'error(beaver.Scanner$Exception)' of 'beaver.comp.util.Log' to static 
  - [-0.031160][Freeze Method] Convert 'buildClosure()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.031160][Introduce Factory] for beaver.Symbol.<init>(short,int,int,java.lang.Object)
  - [-0.031160][Freeze Method] Convert 'addConfiguration(beaver.spec.Production,int)' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.031160][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.031160][Introduce Factory] for beaver.Parser$Exception.<init>(java.lang.String)
  - [-0.031160][Freeze Method] Convert 'rewind()' of 'beaver.Parser$TokenStream' to static 
  - [-0.031160][Freeze Method] Convert 'findLookaheads()' of 'beaver.comp.State' to static 
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol)
  - [-0.031160][Freeze Method] Convert 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[])' of 'beaver.comp.ParsingTables' to static 
  - [-0.031160][Make Class Final] beaver.comp.State
  - [-0.031160][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.031160][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'defs' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.031160][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$2' to static 
  - [-0.031160][Decrease Method Security] 'newSymbol(short)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.031160][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.031160][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'is_nullable' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.031160][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol)
  - [-0.031160][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.spec.ast.Declaration$ClassName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassName.createbeaver.spec.ast.Declaration$ClassName(beaver.Symbol)
  - [-0.031160][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.spec.Grammar.<init>()
  - [-0.031160][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.spec.GrammarBuilder.getNonTerminals() into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [-0.031160][Freeze Method] Convert 'add(beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to static 
  - [-0.031160][Decrease Field Security] 'n_terms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.031160][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Move Up Field] 'defs' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.031160][Decrease Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.031160][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.031160][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.031160][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.031160][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.031160][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options,beaver.comp.util.Log)' of 'beaver.comp.run.AntTask' to its parameter type 'beaver.comp.run.Options'
  - [-0.031160][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.031160][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.031160][Decrease Method Security] 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PACKAGE'
  - [-0.031160][Decrease Field Security] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.031160][Inline Method] beaver.spec.Terminal$Associativity.<init>(java.lang.String) into beaver.spec.Terminal$Associativity.<clinit>()
  - [-0.031160][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to static 
  - [-0.031160][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'shift(beaver.Symbol,short)' of 'beaver.Parser' to static 
  - [-0.031160][Decrease Field Security] 'conf' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.031160][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.031160][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.031160][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'getLst(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.031160][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.031160][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.031160][Inline Method] beaver.comp.ParserGenerator.<init>() into beaver.comp.ParserGenerator.createbeaver.comp.ParserGenerator()
  - [-0.031160][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.Parser$Exception.<init>(java.lang.String) into beaver.Parser$Exception.createbeaver.Parser$Exception()
  - [-0.031160][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.031160][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.031160][Freeze Method] Convert 'addForwardPropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.031160][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'getPrecedenceSymbolName()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.031160][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[])
  - [-0.031160][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.031160][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.031160][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)
  - [-0.031160][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.031160][Freeze Method] Convert 'getEnd()' of 'beaver.Symbol' to static 
  - [-0.031160][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.031160][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.031160][Increase Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.031160][Inline Method] beaver.comp.run.AntTask.getSrcReader(java.io.File) into beaver.comp.run.AntTask.execute()
  - [-0.031160][Instantiate Method] Move static method 'splitActions(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[])
  - [-0.031160][Introduce Factory] for beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State)
  - [-0.031160][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.031160][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.031160][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.031160][Decrease Field Security] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.031160][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.zzUnpackTrans()
  - [-0.031160][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.031160][Introduce Factory] for beaver.Scanner$Exception.<init>(int,int,java.lang.String)
  - [-0.031160][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.031160][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.031160][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.031160][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.031160][Introduce Factory] for beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol)
  - [-0.031160][Decrease Field Security] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Make Class Abstract] beaver.spec.GrammarBuilder$RuleWalker
  - [-0.033124][Freeze Method] Convert 'appendReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Increase Method Security] 'size()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Move Down Field] 'state' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.033124][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'missingTokenInserted(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.033124][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'splitActions()' of 'beaver.comp.State' to static 
  - [-0.033124][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to 'PACKAGE'
  - [-0.033124][Instantiate Method] Move static method 'checkAndResolveConflicts(beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.033124][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [-0.033124][Increase Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Move Up Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Freeze Method] Convert 'getId()' of 'beaver.comp.Action' to static 
  - [-0.033124][Freeze Method] Convert 'getCore()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.033124][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'markReducibleProductions()' of 'beaver.comp.Action$List' to static 
  - [-0.033124][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.ParsingTables.getSpecAsResourceStream(java.lang.Class) into beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.033124][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Make Class Final] beaver.comp.State$Factory
  - [-0.033124][Decrease Method Security] 'createbeaver.Symbol()' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.033124][Introduce Factory] for beaver.comp.run.Make.<init>()
  - [-0.033124][Decrease Method Security] 'getTerminals()' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.033124][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.GrammarSymbol$1' to static 
  - [-0.033124][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.String)
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeMarkersClass(beaver.spec.Terminal[],java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)
  - [-0.033124][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.033124][Move Up Field] 'definitions' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.033124][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream)
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[])
  - [-0.033124][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'addReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'zzUnpackTrans()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.GrammarBuilder.trimCode(java.lang.String) into beaver.spec.GrammarBuilder.access$600(java.lang.String)
  - [-0.033124][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Symbol.<init>() into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'parseOptions(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator.makeStates(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.033124][Freeze Method] Convert 'isSet(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.033124][Freeze Method] Convert 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to static 
  - [-0.033124][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'findParserAction(int,short)' of 'beaver.ParsingTables' to static 
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.Production$List.<init>()
  - [-0.033124][Decrease Method Security] 'ensureIndexWithinRange(int)' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.ParsingTables.<init>(java.lang.Class)
  - [-0.033124][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'isDotAfterLastSymbol()' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Introduce Factory] for beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log)
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'writeActionsReport(java.io.File,java.lang.String)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.033124][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'insertLookaheads(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.033124][Decrease Method Security] 'alloc(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.Configuration
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Make Class Final] beaver.comp.Configuration
  - [-0.033124][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser$Simulator' to static 
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'error(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Increase Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.<init>(beaver.spec.Grammar,beaver.comp.State) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Freeze Method] Convert 'parse(beaver.Scanner)' of 'beaver.Parser' to static 
  - [-0.033124][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Move Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033124][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'nextToken()' of 'beaver.Parser$TokenStream' to static 
  - [-0.033124][Inline Method] beaver.comp.Action$Reduce$Maker.<init>(beaver.spec.Terminal[],beaver.comp.State) into beaver.comp.Action$Reduce$Maker.createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)
  - [-0.033124][Increase Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'alloc(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.033124][Instantiate Method] Move static method 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Type$Conflict$ShiftReduce' to its parameter type 'beaver.comp.State'
  - [-0.033124][Introduce Factory] for beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.033124][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.util.BitSet.ensureIndexWithinRange(int) into beaver.comp.util.BitSet.add(int)
  - [-0.033124][Freeze Method] Convert 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.033124][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.033124][Make Class Final] beaver.comp.Action$Reduce
  - [-0.033124][Freeze Method] Convert 'errorPhraseRemoved(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.033124][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'getTerminals()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.033124][Freeze Method] Convert 'findOffset(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.033124][Decrease Method Security] 'tryInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.GrammarBuilder.getTerminals(beaver.spec.GrammarBuilder) into beaver.spec.GrammarBuilder.visit(beaver.spec.ast.GrammarTreeRoot)
  - [-0.033124][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'name' of 'beaver.spec.ast.Declaration$NameContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.033124][Freeze Method] Convert 'yytext()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzRefill() into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.033124][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.033124][Freeze Method] Convert 'yycharat(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Inline Method] beaver.Parser$Simulator.<init>(beaver.Parser) into beaver.Parser$Simulator.createbeaver.Parser$Simulator(beaver.Parser)
  - [-0.033124][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'name' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Field Security] 'yychar' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'zzUnpackCMap(java.lang.String)' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log$Record' to static 
  - [-0.033124][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033124][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser$Simulator' to static 
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.ast.TreeWalker.<init>() into beaver.spec.ast.TreeWalker.createbeaver.spec.ast.TreeWalker()
  - [-0.033124][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.run.Options'
  - [-0.033124][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'encodeParsingTables()' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.033124][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'getLHSSymbolName()' of 'beaver.spec.ast.Rule' to static 
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.InputStream) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.033124][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'extendFirstSet()' of 'beaver.spec.Production' to static 
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$Error.<init>()
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(byte[]) into beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables()
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$List$1' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.033124][Instantiate Method] Move static method 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[],beaver.comp.State)' of 'beaver.comp.Action$Reduce$Maker' to its parameter type 'beaver.comp.State'
  - [-0.033124][Freeze Method] Convert 'getCode(beaver.spec.ast.Declaration$CodeContainer)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033124][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.Production$RHS.<init>()
  - [-0.033124][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String)
  - [-0.033124][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'get(int)' of 'beaver.comp.util.IntArray' to static 
  - [-0.033124][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Instantiate Method] Move static method 'indexOfLastReferencedSymbol(beaver.spec.Production$RHS)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production$RHS'
  - [-0.033124][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.comp.util.IntArray.<init>()
  - [-0.033124][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'split(beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to static 
  - [-0.033124][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033124][Move Method] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.Action'
  - [-0.033124][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.033124][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[])' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.hasCollisions() into beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int)
  - [-0.033124][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS,beaver.spec.Terminal)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'rules' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.run.Make.parseOptions(java.lang.String[]) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.findOffset(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory)
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeParserActionsSwitch(beaver.spec.Grammar,beaver.comp.run.Options,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.033124][Increase Method Security] 'yypushback(int)' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$Error.<init>() into beaver.spec.ast.Declaration$Error.createbeaver.spec.ast.Declaration$Error()
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'yyclose()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Declaration$Error)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Error'
  - [-0.033124][Inline Method] beaver.spec.Grammar.<init>() into beaver.spec.Grammar.createbeaver.spec.Grammar()
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.Symbol.<init>(short,java.lang.Object)
  - [-0.033124][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Reduce' to 'PRIVATE'
  - [-0.033124][Instantiate Method] Move static method 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List[],beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encodeParsingTables() into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.033124][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'zzScanError(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'nonterminal_lookahead_actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[])
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.countReferencedSymbols(beaver.spec.Production$RHS) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.033124][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Shift'
  - [-0.033124][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'terminals' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033124][Decrease Field Security] 'start' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.Action$1' to static 
  - [-0.033124][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033124][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.033124][Decrease Field Security] 'type' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'declarations' of 'beaver.spec.ast.GrammarTreeRoot' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$ConstructorCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ConstructorCode.createbeaver.spec.ast.Declaration$ConstructorCode(beaver.Symbol)
  - [-0.033124][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar)
  - [-0.033124][Move Method] 'makeDescription(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,java.lang.String)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.033124][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'getReduceActionCode()' of 'beaver.spec.ast.Rule$Definition' to static 
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Method Security] 'reduce(int,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.ParsingTables.decode(java.lang.String) into beaver.ParsingTables.<init>(java.lang.String)
  - [-0.033124][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'sym_name' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Inline Method] beaver.comp.Action$List.removeResolvedActions() into beaver.comp.Action$List.resolveConflicts(beaver.comp.util.Log)
  - [-0.033124][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'getSrcFile(java.lang.String)' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Error' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.033124][Remove Method] 'compare(java.lang.Object,java.lang.Object)' of type 'beaver.comp.Action$List$1'
  - [-0.033124][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'isNullable()' of 'beaver.spec.Production' to static 
  - [-0.033124][Increase Method Security] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'shift(short)' of 'beaver.Parser$Simulator' to static 
  - [-0.033124][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.033124][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'getState(beaver.comp.Configuration$Set)' of 'beaver.comp.State$Factory' to static 
  - [-0.033124][Instantiate Method] Move static method 'serializeParsingTables(beaver.comp.ParsingTables,int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.033124][Decrease Field Security] 'lines' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser$Simulator' to static 
  - [-0.033124][Make Class Non-Final] beaver.comp.Configuration
  - [-0.033124][Inline Method] beaver.comp.util.BitSet.<init>(int) into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.033124][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'buildFirstSets()' of 'beaver.spec.Grammar' to static 
  - [-0.033124][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'reset()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.033124][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Rule' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Instantiate Method] Move static method 'buildShiftsFrom(beaver.comp.State,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.State'
  - [-0.033124][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Introduce Factory] for beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.033124][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol)
  - [-0.033124][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.Production$RHS$Item[]) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.tryInsertActions(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Freeze Method] Convert 'expandCapacity(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.033124][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.comp.util.BitSet.<init>()
  - [-0.033124][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.033124][Introduce Factory] for beaver.comp.util.Log$Record$List.<init>()
  - [-0.033124][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.033124][Move Up Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.033124][Introduce Factory] for beaver.comp.run.AntTask.<init>()
  - [-0.033124][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'parse(beaver.Parser$TokenStream)' of 'beaver.Parser' to static 
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033124][Move Method] 'add(beaver.comp.Action$List)' of 'beaver.comp.Action' to its parameter type 'beaver.comp.Action$List'
  - [-0.033124][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.comp.Action$Type$Conflict$ShiftReduce.<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)
  - [-0.033124][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.Symbol.<init>(java.lang.Object)
  - [-0.033124][Introduce Factory] for beaver.comp.run.Options.<init>()
  - [-0.033124][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.Symbol.<init>(short,int,int)
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Header'
  - [-0.033124][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzMarkedPos' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Freeze Method] Convert 'canInsertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.033124][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'yylength()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarParser$Events.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser$Events.createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)
  - [-0.033124][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ShiftReduce(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.033124][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'message(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Move Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.033124][Increase Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.spec.Production$RHS.<init>() into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS()
  - [-0.033124][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'init()' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>()
  - [-0.033124][Decrease Method Security] 'expandCapacity(int,beaver.comp.util.BitSet)' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.advanceStartIndex(int) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Inline Method] beaver.Scanner$Exception.<init>(int,int,java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033124][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackTrans() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033124][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'reduce(int,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.033124][Make Class Final] beaver.comp.Configuration
  - [-0.033124][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$Implements.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Implements.createbeaver.spec.ast.Declaration$Implements(beaver.Symbol[])
  - [-0.033124][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'state' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033124][Move Method] 'compile(beaver.comp.io.SrcReader,beaver.comp.util.Log)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.util.Log'
  - [-0.033124][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'reduce(int)' of 'beaver.Parser' to static 
  - [-0.033124][Move Up Field] 'elements' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'shift(short,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'default_action' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'lhs_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Decrease Method Security] 'increaseStackCapacity()' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'resolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.Action$List' to static 
  - [-0.033124][Increase Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'code' of 'beaver.spec.ast.Rule$Definition' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'hasErrors()' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.033124][Decrease Method Security] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'printVersion()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Make Class Final] beaver.comp.Action$Shift
  - [-0.033124][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'reduce(int,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033124][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader,beaver.comp.run.Options)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.033124][Decrease Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.comp.Action$Type.<init>(int,java.lang.String)
  - [-0.033124][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'getCode()' of 'beaver.spec.ast.Declaration$CodeContainer' to static 
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'getOpt(java.lang.String)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.033124][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.033124][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[])
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033124][Remove Method] 'unexpectedTokenRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.033124][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.033124][Introduce Factory] for beaver.spec.Grammar$Exception.<init>(java.lang.String)
  - [-0.033124][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'prec' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.033124][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Instantiate Method] Move static method 'buildShiftsFrom(beaver.comp.State$Factory)' of 'beaver.comp.State' to its parameter type 'beaver.comp.State$Factory'
  - [-0.033124][Introduce Factory] for beaver.comp.util.Log.<init>()
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'sort(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.Action$Shift.<init>(beaver.spec.GrammarSymbol,beaver.comp.State) into beaver.comp.Action$Shift.createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)
  - [-0.033124][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int) into beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.033124][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Decrease Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'process(int)' of 'beaver.comp.util.BitSet$Processor' to static 
  - [-0.033124][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.removeLookaheads(beaver.comp.Action$List,int) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Inline Method] beaver.spec.Grammar$Exception.<init>(java.lang.String) into beaver.spec.Grammar$Exception.createbeaver.spec.Grammar$Exception()
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol)
  - [-0.033124][Freeze Method] Convert 'size()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.033124][Inline Method] beaver.comp.util.Log$Record.<init>(int,int,java.lang.String) into beaver.comp.util.Log$Record.createbeaver.comp.util.Log$Record()
  - [-0.033124][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.ast.Rule.<init>(beaver.Symbol,beaver.spec.ast.Rule$Definition[]) into beaver.spec.ast.Rule.createbeaver.spec.ast.Rule(beaver.Symbol,beaver.spec.ast.Rule$Definition[])
  - [-0.033124][Decrease Field Security] 'zzCurrentPos' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Instantiate Method] Move static method 'writeListsCode(beaver.spec.NonTerminal[],beaver.spec.GrammarBuilder)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.033124][Make Class Non-Final] beaver.spec.Terminal$Associativity
  - [-0.033124][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Freeze Method] Convert 'getGrammar()' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.033124][Increase Method Security] 'start()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.comp.util.IntArray.<init>(int)
  - [-0.033124][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.033124][Decrease Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.newSymbol(short,java.lang.Object) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.033124][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$Terminals.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Terminals.createbeaver.spec.ast.Declaration$Terminals(beaver.Symbol[])
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$Header.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$Header.accept(beaver.spec.ast.TreeWalker)
  - [-0.033124][Freeze Method] Convert 'warning(java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Decrease Method Security] 'compress(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'zzUnpackRowMap()' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'reset()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int)
  - [-0.033124][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[])
  - [-0.033124][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol)
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol)
  - [-0.033124][Move Method] 'writeListsCode(beaver.spec.GrammarBuilder)' of 'beaver.spec.NonTerminal' to its parameter type 'beaver.spec.GrammarBuilder'
  - [-0.033124][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'yyreset(java.io.Reader)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Decrease Field Security] 'n_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'lookahead' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033124][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'end()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'symbols' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Inline Method] beaver.comp.util.Log.<init>() into beaver.comp.util.Log.createbeaver.comp.util.Log()
  - [-0.033124][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner,beaver.Symbol) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)
  - [-0.033124][Decrease Method Security] 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAttribute(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Inline Method] beaver.comp.util.IntArray.<init>() into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Move Up Method] '<init>(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action$Reduce' to its super class 'beaver.comp.Action'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.Production$RHS$Item[])' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'add(beaver.comp.Action)' of 'beaver.comp.Action$List' to static 
  - [-0.033124][Increase Field Security] 'id' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'yybegin(int)' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'elements' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'alias' of 'beaver.spec.ast.Rule$Definition$Element' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Method Security] 'insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.033124][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'start()' of 'beaver.spec.Production$RHS' to static 
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration$1)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Rule)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol)
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol,java.lang.String) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.033124][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.033124][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'zzStartRead' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.spec.Production$1' to static 
  - [-0.033124][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.run.Make.<init>() into beaver.comp.run.Make.createbeaver.comp.run.Make()
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'addLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'findLookaheads(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.comp.Action$Accept.<init>(beaver.spec.Grammar)
  - [-0.033124][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.insertLookaheads(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033124][Make Class Non-Final] beaver.comp.Configuration
  - [-0.033124][Increase Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.033124][Increase Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.spec.GrammarSymbol'
  - [-0.033124][Move Down Field] 'yychar' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033124][Increase Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Reduce$Maker(beaver.spec.Terminal[])' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'report(java.lang.String,beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Method Security] 'zzUnpackAction()' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'first_set' of 'beaver.spec.NonTerminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.033124][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.comp.Configuration$Set$Factory.<init>(beaver.spec.Grammar) into beaver.comp.Configuration$Set$Factory.createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)
  - [-0.033124][Inline Method] beaver.Parser$Simulator.increaseStackCapacity(beaver.Parser$Simulator) into beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator)
  - [-0.033124][Introduce Factory] for beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log)
  - [-0.033124][Freeze Method] Convert 'parse(beaver.Scanner,short)' of 'beaver.Parser' to static 
  - [-0.033124][Make Class Final] beaver.comp.Configuration
  - [-0.033124][Decrease Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'addLookahead(beaver.spec.Terminal)' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.Production$List.<init>() into beaver.spec.Production$List.createbeaver.spec.Production$List()
  - [-0.033124][Decrease Method Security] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'insertActions(beaver.comp.Action$List,int)' of 'beaver.comp.ParsingTables' to static 
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Move Down Field] 'assoc' of 'beaver.spec.GrammarSymbol' to its child class 'beaver.spec.Terminal'
  - [-0.033124][Decrease Field Security] 'end' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.spec.parser.GrammarParser()' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'end()' of 'beaver.spec.Production$RHS' to static 
  - [-0.033124][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.Terminal.<init>(java.lang.String) into beaver.spec.Terminal.createbeaver.spec.Terminal()
  - [-0.033124][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.033124][Freeze Method] Convert 'nextToken()' of 'beaver.Scanner' to static 
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033124][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.033124][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$TypeOf' to its super class 'beaver.spec.ast.Declaration$SymbolsContainer'
  - [-0.033124][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.033124][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Reduce
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackCMap(java.lang.String) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol)
  - [-0.033124][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'resetContributionFlags()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.033124][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'yystate()' of 'beaver.spec.parser.GrammarScanner' to static 
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Header)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033124][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.GrammarBuilder.<init>(beaver.comp.util.Log) into beaver.spec.GrammarBuilder.createbeaver.spec.GrammarBuilder(beaver.comp.util.Log)
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Decrease Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackRowMap(java.lang.String,int,int[]) into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.033124][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.033124][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'symbols' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.run.AntTask.<init>() into beaver.comp.run.AntTask.createbeaver.comp.run.AntTask()
  - [-0.033124][Remove Method] '<init>(beaver.comp.Action$Shift,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict$ShiftReduce'
  - [-0.033124][Freeze Method] Convert 'writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.033124][Move Method] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'sym_name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'increaseStackCapacity()' of 'beaver.Parser' to static 
  - [-0.033124][Move Method] 'writeReduceActionCode(beaver.spec.Production,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.033124][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'getCore(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'actn_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'extendFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Move Method] 'makeDescription(java.lang.String,beaver.comp.State,beaver.comp.Action$Shift)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.033124][Freeze Method] Convert 'misspelledTokenReplaced(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.033124][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity)
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'code' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'encode(int,java.lang.StringBuffer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.033124][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'type' of 'beaver.spec.ast.Declaration$SymbolsContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'propagateTypes(beaver.spec.NonTerminal[])' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.033124][Decrease Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'appendTo(java.lang.StringBuffer)' of 'beaver.spec.Production$RHS$Item' to static 
  - [-0.033124][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'remove(int)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator.findLookaheads(beaver.comp.State) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Method Security] 'canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.033124][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'n_terms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.comp.io.SrcReader.<init>(java.io.File)
  - [-0.033124][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'isEmpty()' of 'beaver.comp.util.BitSet' to static 
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'assoc' of 'beaver.spec.Terminal' to its super class 'beaver.spec.GrammarSymbol'
  - [-0.033124][Decrease Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.033124][Introduce Factory] for beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.033124][Increase Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.033124][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$RightAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$RightAssoc.createbeaver.spec.ast.Declaration$RightAssoc(beaver.Symbol[])
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Move Method] 'compile(beaver.comp.run.Options)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.run.Options'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Parser$Simulator.shift(short,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.033124][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'type' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$RuleWalker' to static 
  - [-0.033124][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'warning(int,int,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'checkNullability()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'getName()' of 'beaver.spec.ast.Declaration$NameContainer' to static 
  - [-0.033124][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.033124][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033124][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.033124][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033124][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.canInsertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Freeze Method] Convert 'getTypeName()' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.033124][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'add(int)' of 'beaver.comp.util.BitSet' to static 
  - [-0.033124][Move Down Method] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033124][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.033124][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.Symbol.<init>(short,int,int,int,java.lang.Object)
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzUnpackAction() into beaver.spec.parser.GrammarScanner.<clinit>()
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Make Class Final] beaver.comp.State$Factory
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.033124][Instantiate Method] Move static method 'writeListsCode(beaver.spec.NonTerminal)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.NonTerminal'
  - [-0.033124][Decrease Field Security] 'n_nonterm' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'remove(int)' of 'beaver.Parser$TokenStream' to static 
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Make Class Non-Final] beaver.ParsingTables
  - [-0.033124][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Move Method] 'makeDescription(java.lang.String,beaver.comp.State,beaver.comp.Action$Reduce)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.033124][Increase Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'type' of 'beaver.spec.ast.Declaration' to its super class 'beaver.spec.ast.Node'
  - [-0.033124][Inline Method] beaver.comp.Configuration$Set.equals(beaver.comp.Configuration$Set) into beaver.comp.Configuration$Set.equals(java.lang.Object)
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Inline Method] beaver.comp.Action$Type.<init>(int,java.lang.String) into beaver.comp.Action$Type.createbeaver.comp.Action$Type()
  - [-0.033124][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'size()' of 'beaver.spec.Production$List' to static 
  - [-0.033124][Decrease Field Security] 'type' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033124][Increase Method Security] 'reduce(int,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.033124][Increase Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.State$Factory.buildShiftsFrom() into beaver.comp.State$Factory.getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)
  - [-0.033124][Introduce Factory] for beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.033124][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033124][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.spec.Production)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.033124][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Grammar()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'insert(beaver.Symbol,beaver.Symbol)' of 'beaver.Parser$TokenStream' to static 
  - [-0.033124][Inline Method] beaver.comp.run.Make.printVersion() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.033124][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033124][Inline Method] beaver.comp.run.Make.printUsage() into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033124][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.comp.run.Make.getSrcFile(java.lang.String) into beaver.comp.run.Make.main(java.lang.String[])
  - [-0.033124][Freeze Method] Convert 'findFirstTerminal(int)' of 'beaver.ParsingTables' to static 
  - [-0.033124][Increase Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.util.Log$Record()' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$NonAssoc'
  - [-0.033124][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033124][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.033124][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'dot' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033124][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'start()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Move Method] 'buildActions(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParserGenerator' to its parameter type 'beaver.comp.State'
  - [-0.033124][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Move Method] 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.033124][Increase Method Security] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'reverseReversePropagation()' of 'beaver.comp.Configuration$Set' to static 
  - [-0.033124][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.033124][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.033124][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Inline Method] beaver.comp.Action$Accept.<init>(beaver.spec.Grammar) into beaver.comp.Action$Accept.createbeaver.comp.Action$Accept(beaver.spec.Grammar)
  - [-0.033124][Move Down Field] 'log' of 'beaver.Parser$Events' to its child class 'beaver.spec.parser.GrammarParser$Events'
  - [-0.033124][Increase Method Security] 'checkBraces(java.lang.String)' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.run.AntTask()' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1)
  - [-0.033124][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.033124][Freeze Method] Convert 'start()' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.033124][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.yypushback(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'state' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarScanner.zzScanError(int) into beaver.spec.parser.GrammarScanner.nextToken()
  - [-0.033124][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'getSymbolAfterDot()' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[])
  - [-0.033124][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.033124][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033124][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.033124][Make Class Non-Final] beaver.comp.ParsingTables
  - [-0.033124][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.run.Options()' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$NonAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$NonAssoc.createbeaver.spec.ast.Declaration$NonAssoc(beaver.Symbol[])
  - [-0.033124][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$NonAssoc' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.033124][Increase Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'zzMarkedPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'declarations' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Freeze Method] Convert 'buildReduceActions()' of 'beaver.comp.Action$Reduce$Maker' to static 
  - [-0.033124][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$Imports.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$Imports.createbeaver.spec.ast.Declaration$Imports(beaver.Symbol[])
  - [-0.033124][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode)' of 'beaver.spec.GrammarBuilder' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to 'PACKAGE'
  - [-0.033124][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033124][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner)
  - [-0.033124][Increase Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'num_actions' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Increase Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.Scanner$Exception.<init>(java.lang.String)
  - [-0.033124][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ConstructorCode)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'last_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'init()' of 'beaver.Parser' to static 
  - [-0.033124][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first_term' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033124][Increase Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PRIVATE'
  - [-0.033124][Increase Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[],beaver.Symbol,beaver.Symbol)
  - [-0.033124][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.GrammarTreeRoot.<init>(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[]) into beaver.spec.ast.GrammarTreeRoot.createbeaver.spec.ast.GrammarTreeRoot(beaver.spec.ast.Declaration[],beaver.spec.ast.Rule[])
  - [-0.033124][Decrease Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'compareTo(java.lang.Object)' of 'beaver.comp.Configuration' to static 
  - [-0.033124][Instantiate Method] Move static method 'setPrecedence(int,beaver.spec.Terminal$Associativity,beaver.spec.Terminal)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Instantiate Method] Move static method 'buildActions(beaver.spec.Grammar,beaver.comp.ParserGenerator)' of 'beaver.comp.State' to its parameter type 'beaver.comp.ParserGenerator'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.<init>(beaver.Symbol[]) into beaver.spec.ast.Declaration$LeftAssoc.createbeaver.spec.ast.Declaration$LeftAssoc(beaver.Symbol[])
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options)' of 'beaver.comp.ParserGenerator$CompiledParser' to static 
  - [-0.033124][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Move Up Field] 'MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033124][Make Class Final] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$TypeOf.<init>(beaver.Symbol[],beaver.Symbol) into beaver.spec.ast.Declaration$TypeOf.createbeaver.spec.ast.Declaration$TypeOf(beaver.Symbol[],beaver.Symbol)
  - [-0.033124][Freeze Method] Convert 'compact()' of 'beaver.comp.util.IntArray' to static 
  - [-0.033124][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$ClassCode.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ClassCode.createbeaver.spec.ast.Declaration$ClassCode(beaver.Symbol)
  - [-0.033124][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.spec.parser.GrammarParser$Terminals.<init>()
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$Header.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Header.createbeaver.spec.ast.Declaration$Header(beaver.Symbol)
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String)
  - [-0.033124][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.Parser$Simulator.reduce(int,beaver.Parser$Simulator) into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.033124][Inline Method] beaver.comp.State$Factory.<init>(beaver.comp.Configuration$Set$Factory) into beaver.comp.State$Factory.createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)
  - [-0.033124][Make Class Final] beaver.comp.Action$Shift
  - [-0.033124][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'txt' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Rule$Definition'
  - [-0.033124][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Decrease Method Security] 'buildActions(beaver.spec.Grammar)' of 'beaver.comp.ParserGenerator' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'token_column' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'yyline' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.033124][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'rules' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Increase Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to static 
  - [-0.033124][Decrease Method Security] 'nextToken()' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarParser.<init>() into beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log)
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$ListType.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$ListType.createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)
  - [-0.033124][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.GrammarBuilder.checkBraces(java.lang.String) into beaver.spec.GrammarBuilder.access$700(java.lang.String)
  - [-0.033124][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.<init>(beaver.spec.Grammar,beaver.comp.ParsingTables) into beaver.comp.ParserGenerator$CompiledParser.createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)
  - [-0.033124][Freeze Method] Convert 'markNullableProductions()' of 'beaver.spec.Grammar' to static 
  - [-0.033124][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.033124][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.033124][Move Method] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.033124][Increase Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.033124][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.spec.Production)' of 'beaver.comp.ParserGenerator$CompiledParser' to its parameter type 'beaver.spec.Production'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Introduce Factory] for beaver.Parser$Events.<init>()
  - [-0.033124][Inline Method] beaver.spec.parser.GrammarParser.<init>(beaver.comp.util.Log) into beaver.spec.parser.GrammarParser.createbeaver.spec.parser.GrammarParser(beaver.comp.util.Log)
  - [-0.033124][Introduce Factory] for beaver.spec.parser.GrammarScanner.<init>(java.io.Reader)
  - [-0.033124][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.033124][Make Class Final] beaver.comp.ParsingTables
  - [-0.033124][Move Down Field] 'yyline' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Move Down Field] 'state' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [-0.033124][Move Up Field] 'EOF_MLN_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$NonAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033124][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$4' to static 
  - [-0.033124][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'n_term' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Move Method] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to its parameter type 'beaver.comp.ParsingTables'
  - [-0.033124][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of 'beaver.spec.GrammarSymbol$1' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.Terminal.<init>(java.lang.String,int,beaver.spec.Terminal$Associativity) into beaver.spec.Terminal.createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)
  - [-0.033124][Move Method] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.util.Log' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$TypeOf'
  - [-0.033124][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.033124][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'makeProductionDescriptors()' of 'beaver.spec.Grammar' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'getId()' of 'beaver.Symbol' to static 
  - [-0.033124][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder' to static 
  - [-0.033124][Make Class Final] beaver.comp.Action$Accept
  - [-0.033124][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033124][Move Method] 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.033124][Decrease Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator.buildActions(beaver.spec.Grammar) into beaver.comp.ParserGenerator.compile(beaver.spec.Grammar,beaver.comp.run.Options,beaver.comp.util.Log)
  - [-0.033124][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser$Events' to its super class 'beaver.Parser$Events'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.033124][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033124][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033124][Introduce Factory] for beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.033124][Move Method] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.Action$List)' of 'beaver.comp.ParsingTables' to its parameter type 'beaver.comp.Action$List'
  - [-0.033124][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Make Class Non-Final] beaver.comp.State
  - [-0.033124][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'reset()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033124][Move Down Field] 'EOF_MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Freeze Method] Convert 'size()' of 'beaver.comp.util.IntArray' to static 
  - [-0.033124][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.033124][Instantiate Method] Move static method 'createbeaver.spec.Terminal(beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.033124][Instantiate Method] Move static method 'compile(beaver.comp.util.Log)' of 'beaver.comp.io.SrcReader' to its parameter type 'beaver.comp.util.Log'
  - [-0.033124][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.insertActions(beaver.comp.Action$List,int,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.033124][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Move Method] 'missingTokenInserted(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033124][Move Down Field] 'CODE_END' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Field Security] 'id' of 'beaver.comp.Action$Type' to 'PRIVATE'
  - [-0.033124][Move Method] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to its parameter type 'beaver.spec.Terminal'
  - [-0.033124][Decrease Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Rule$Definition' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.encode(int,java.lang.StringBuffer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.033124][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.Configuration.<init>(beaver.comp.Configuration,beaver.spec.Grammar) into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration,beaver.spec.Grammar)
  - [-0.033124][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.033124][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Move Method] 'writeReduceActionCode(java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.spec.Production' to its parameter type 'beaver.comp.ParserGenerator$CompiledParser'
  - [-0.033124][Decrease Field Security] 'compressed' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$TypeOf)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033124][Increase Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.ast.Rule$Definition.<init>(beaver.spec.ast.Rule$Definition$Element[]) into beaver.spec.ast.Rule$Definition.createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'ptr' of 'beaver.comp.io.SrcReader' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)
  - [-0.033124][Increase Field Security] 'zzReader' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033124][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.Parser$Events.<init>() into beaver.Parser$Events.createbeaver.Parser$Events()
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.comp.Action$List.<init>(beaver.comp.State)
  - [-0.033124][Make Class Final] beaver.comp.State$Factory
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033124][Make Class Final] beaver.comp.Configuration$Set
  - [-0.033124][Decrease Field Security] 'dot' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Remove Method] 'createbeaver.comp.run.AntTask()' of type 'beaver.comp.run.AntTask'
  - [-0.033124][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.033124][Move Method] 'setPrecedence(int,beaver.spec.Terminal$Associativity)' of 'beaver.spec.Terminal' to its parameter type 'beaver.spec.Terminal$Associativity'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Move Method] 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$RightAssoc'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of 'beaver.spec.Production$1' to 'PRIVATE'
  - [-0.033124][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'grammar' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeReduceActionClasses(beaver.spec.Grammar,java.io.Writer) into beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.033124][Increase Field Security] 'last_bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.GrammarSymbol$1)' of type 'beaver.spec.GrammarSymbol$1'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PUBLIC'
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$PackageName.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$PackageName.createbeaver.spec.ast.Declaration$PackageName(beaver.Symbol)
  - [-0.033124][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'isResolved()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Make Class Final] beaver.comp.State
  - [-0.033124][Decrease Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033124][Move Down Field] 'n_rules' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033124][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'getFirstLine()' of 'beaver.spec.Production' to static 
  - [-0.033124][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.comp.util.Log$Record$List.<init>() into beaver.comp.util.Log$Record$List.createbeaver.comp.util.Log$Record$List()
  - [-0.033124][Inline Method] beaver.spec.ast.Declaration$RightAssoc.visit(beaver.spec.ast.TreeWalker) into beaver.spec.ast.Declaration$RightAssoc.accept(beaver.spec.ast.TreeWalker)
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.033124][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Introduce Factory] for beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol)
  - [-0.033124][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.033124][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033124][Increase Method Security] 'expand(short[])' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033124][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Field Security] 'default_action' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Move Up Field] 'EOF_EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033124][Decrease Field Security] 'compressed' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'checkNullability()' of 'beaver.spec.NonTerminal' to static 
  - [-0.033124][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.033124][Increase Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Inline Method] beaver.comp.Action.<init>(beaver.spec.Terminal,beaver.spec.Production) into beaver.comp.Action.createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)
  - [-0.033124][Increase Method Security] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'compile()' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033124][Freeze Method] Convert 'start()' of 'beaver.spec.Production$List' to static 
  - [-0.033124][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'isRemovable()' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033124][Freeze Method] Convert 'isRemovable()' of 'beaver.comp.Action$Type' to static 
  - [-0.033124][Decrease Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033124][Move Down Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.033124][Inline Method] beaver.comp.Configuration.<init>() into beaver.comp.Configuration.createbeaver.comp.Configuration(beaver.comp.Configuration$1)
  - [-0.033124][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'symbols' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Configuration$PropagationLink()' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033124][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$RightAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033124][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'error(beaver.Symbol,java.lang.String)' of 'beaver.comp.util.Log' to static 
  - [-0.033124][Inline Method] beaver.spec.ast.Rule$Definition$Element.<init>(beaver.Symbol,beaver.Symbol,beaver.Symbol) into beaver.spec.ast.Rule$Definition$Element.createbeaver.spec.ast.Rule$Definition$Element(beaver.Symbol,beaver.Symbol,beaver.Symbol)
  - [-0.033124][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$Type()' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.033124][Move Method] 'makeDescription(beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.033124][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.Action$List(beaver.comp.State)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033124][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033124][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to its parameter type 'beaver.comp.State'
  - [-0.033124][Inline Method] beaver.comp.run.AntTask.existsCurrentOutput(java.lang.String) into beaver.comp.run.AntTask.execute()
  - [-0.033124][Decrease Method Security] 'writeListsCode()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033124][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033124][Increase Method Security] 'writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables)' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033124][Inline Method] beaver.comp.ParsingTables.expand(short[]) into beaver.comp.ParsingTables.createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)
  - [-0.033124][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Remove Method] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$1)' of type 'beaver.spec.GrammarBuilder$1'
  - [-0.033124][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033124][Increase Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033124][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition$Element)' of 'beaver.spec.ast.TreeWalker' to static 
  - [-0.033124][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] 'zzLexicalState' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'renumberSymbols(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033124][Make Class Final] beaver.comp.Action$Shift
  - [-0.033124][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033124][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033124][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033124][Decrease Method Security] 'writeListsCode()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033124][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.033124][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033124][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033124][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.033124][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.033124][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.033124][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.033124][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033124][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.033124][Increase Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033124][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033124][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.033124][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.033205][Remove Class] beaver.comp.Action$Type$Conflict$ShiftReduce
  - [-0.033205][Move Down Field] 'zzAtBOL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Imports'
  - [-0.033205][Move Method] 'resolveConflict(beaver.comp.Action,beaver.comp.util.Log,beaver.comp.Action$Accept)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action'
  - [-0.033205][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Goal'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.033205][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to static 
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to static 
  - [-0.033205][Decrease Method Security] 'writeReduceActionCode(java.io.Writer,beaver.spec.Production)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.033205][Move Up Field] 'ebnf_sym' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033205][Increase Field Security] 'state' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.033205][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033205][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'missingTokenInserted(beaver.spec.parser.GrammarParser$Events)' of 'beaver.Symbol' to static 
  - [-0.033205][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Shift,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.033205][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033205][Inline Method] beaver.comp.ParsingTables.writeTo(java.io.DataOutputStream,beaver.comp.ParsingTables) into beaver.comp.ParsingTables.serializeParsingTables(int[],beaver.spec.NonTerminal)
  - [-0.033205][Inline Method] beaver.comp.run.Options.<init>() into beaver.comp.run.Options.createbeaver.comp.run.Options()
  - [-0.033205][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033205][Decrease Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'grammar' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'reset()' of 'beaver.comp.Configuration$Set$Factory' to static 
  - [-0.033205][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'increaseStackCapacity(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Shift,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'missingTokenInserted(beaver.spec.parser.GrammarParser$Events,beaver.Symbol)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'state' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.comp.Action$Type$Conflict$ReduceReduce.<init>(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State,java.lang.String) into beaver.comp.Action$Type$Conflict$ReduceReduce.createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$LeftAssoc'
  - [-0.033205][Decrease Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Move Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Type$Conflict$ReduceReduce' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.033205][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration
  - [-0.033205][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Instantiate Method] Move static method 'syntaxError(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033205][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Remove Method] 'resolveConflict(beaver.comp.Action,beaver.comp.State,beaver.comp.util.Log)' of type 'beaver.comp.Action$Reduce'
  - [-0.033205][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'addReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of 'beaver.spec.ast.Declaration$ListType' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'states' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'has_bits' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Move Method] 'scannerError(beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.033205][Increase Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.033205][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.GrammarBuilder$5' to static 
  - [-0.033205][Remove Method] 'createbeaver.comp.Action$Type$Conflict$ReduceReduce(beaver.comp.Action$Reduce,beaver.comp.State,beaver.comp.Action$Type$Conflict$ReduceReduce)' of type 'beaver.comp.Action$Reduce'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Instantiate Method] Move static method 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'n_marked' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Move Up Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Decrease Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'zzStartRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'init(beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'EOF_EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.033205][Decrease Field Security] 'error_symbol_id' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'report(java.lang.String,java.io.PrintStream,beaver.comp.io.SrcReader,beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type$Conflict' to 'PACKAGE'
  - [-0.033205][Freeze Method] Convert 'scannerError(beaver.Scanner$Exception)' of 'beaver.Parser$Events' to static 
  - [-0.033205][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'serializeParsingTables(int[],beaver.spec.NonTerminal)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033205][Remove Method] 'createbeaver.spec.ast.Declaration$ListType(beaver.Symbol)' of type 'beaver.spec.ast.Declaration$ListType'
  - [-0.033205][Remove Method] 'visit(beaver.spec.ast.Declaration$RightAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.033205][Inline Method] beaver.ParsingTables.<init>(java.lang.String) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.033205][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.033205][Make Class Final] beaver.spec.parser.GrammarParser$Events
  - [-0.033205][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033205][Remove Method] 'visit(beaver.spec.ast.Declaration$NonAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.033205][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$1)' of type 'beaver.spec.Production$1'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'TEXT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'add(beaver.comp.util.Log$Record)' of 'beaver.comp.util.Log$Record$List' to static 
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Move Down Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Shift'
  - [-0.033205][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Move Down Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.spec.Production.<init>(int,beaver.spec.NonTerminal,beaver.spec.Production$RHS) into beaver.spec.Production.createbeaver.spec.Production(beaver.spec.NonTerminal,beaver.spec.Production$RHS)
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Goal' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'token_column' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action$Shift' to static 
  - [-0.033205][Increase Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$LeftAssoc)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'zzCurrentPos' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'yychar' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'fwd_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String,java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.033205][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.033205][Instantiate Method] Move static method 'unexpectedTokenRemoved(beaver.Parser$Events,beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033205][Increase Field Security] 'n_rules' of 'beaver.spec.GrammarBuilder' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033205][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.033205][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'top' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'yychar' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'state' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'getExtendedSymbol(beaver.spec.ast.Rule$Definition$Element,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.comp.io.SrcReader.<init>(java.io.File) into beaver.comp.io.SrcReader.createbeaver.comp.io.SrcReader()
  - [-0.033205][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$Simulator(beaver.Parser)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Move Method] 'makeDescription(beaver.comp.Action$Reduce,java.lang.String,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'has_contributed' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'symbols' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033205][Inline Method] beaver.spec.ast.Declaration$Goal.<init>(beaver.Symbol) into beaver.spec.ast.Declaration$Goal.createbeaver.spec.ast.Declaration$Goal(beaver.Symbol)
  - [-0.033205][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.GrammarTreeRoot)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033205][Decrease Method Security] 'addLookahead(beaver.spec.Terminal,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Make Class Final] beaver.comp.Action$Shift
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'YYINITIAL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$RuleWalker)' of 'beaver.spec.GrammarBuilder$RuleWalker' to 'PROTECTED'
  - [-0.033205][Move Method] 'insert(beaver.Symbol,beaver.Symbol,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'terminals' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'main(java.lang.String[])' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.033205][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'EOL_COMMENT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Make Class Final] beaver.comp.Configuration$PropagationLink
  - [-0.033205][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033205][Increase Field Security] 'top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Instantiate Method] Move static method 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$Terminals'
  - [-0.033205][Decrease Method Security] 'visit()' of 'beaver.spec.ast.Declaration$Terminals' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.spec.parser.GrammarParser$Terminals.<init>() into beaver.spec.parser.GrammarParser$Terminals.createbeaver.spec.parser.GrammarParser$Terminals()
  - [-0.033205][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Terminals)' of 'beaver.spec.GrammarBuilder$1' to static 
  - [-0.033205][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'insert(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser$TokenStream)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of 'beaver.comp.Action$1' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.Declaration$PackageName)' of 'beaver.spec.GrammarBuilder' to its parameter type 'beaver.spec.ast.Declaration$PackageName'
  - [-0.033205][Decrease Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'n_rules' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Move Up Field] 'CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol,beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Move Method] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.033205][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.033205][Increase Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'resetContributionFlags(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [-0.033205][Freeze Method] Convert 'isResolved()' of 'beaver.comp.Action$Type' to static 
  - [-0.033205][Increase Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Move Down Field] 'n_nonterms' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'token_column' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.comp.Action$1)' of type 'beaver.comp.Action$1'
  - [-0.033205][Inline Method] beaver.spec.ast.Declaration$Terminals.visit() into beaver.spec.ast.Declaration$Terminals.accept(beaver.spec.ast.TreeWalker)
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.spec.ast.Declaration$PackageName.visit(beaver.spec.GrammarBuilder) into beaver.spec.ast.Declaration$PackageName.accept(beaver.spec.ast.TreeWalker)
  - [-0.033205][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033205][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033205][Decrease Method Security] 'remove(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'n_rules' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'code' of 'beaver.spec.ast.Declaration' to its child class 'beaver.spec.ast.Declaration$CodeContainer'
  - [-0.033205][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'setLocation(int,int)' of 'beaver.spec.ast.Node' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'tables' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'indexOfLastReferencedSymbol()' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$2' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033205][Increase Method Security] 'reset(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'CODE_END' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.033205][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$Imports' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'n_terms' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033205][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033205][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.033205][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'prec_sym_name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.033205][Instantiate Method] Move static method 'createbeaver.comp.State$Factory(beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.State$Factory' to its parameter type 'beaver.comp.Configuration$Set$Factory'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.033205][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Make Class Non-Final] beaver.comp.Action$Reduce$Maker
  - [-0.033205][Move Method] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.Action$Shift)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Shift'
  - [-0.033205][Decrease Field Security] 'report' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'YYEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Introduce Factory] for beaver.comp.State.<init>(int,beaver.comp.Configuration$Set)
  - [-0.033205][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Make Class Final] beaver.comp.Action$List
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PACKAGE'
  - [-0.033205][Move Method] 'unexpectedTokenRemoved(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Remove Method] 'main(java.lang.String[])' of type 'beaver.comp.run.Make'
  - [-0.033205][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'writeStaticReturns(beaver.spec.Grammar,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'last_state' of 'beaver.comp.State$Factory' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'startFirstSet(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033205][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.033205][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.033205][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'tables' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'last' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033205][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033205][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Introduce Factory] for beaver.spec.NonTerminal.<init>(java.lang.String)
  - [-0.033205][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,int) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Inline Method] beaver.comp.Action.<init>(beaver.comp.Action$Type,beaver.spec.GrammarSymbol) into beaver.comp.Action.createbeaver.comp.Action(beaver.comp.Action$Type,beaver.spec.GrammarSymbol)
  - [-0.033205][Instantiate Method] Move static method 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.033205][Increase Field Security] 'zzState' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Move Method] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to its parameter type 'beaver.Symbol'
  - [-0.033205][Decrease Field Security] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'warnings' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.ParsingTables(beaver.spec.Grammar,beaver.comp.State)' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'rule_infos' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.comp.State.<init>(int,beaver.comp.Configuration$Set) into beaver.comp.State.createbeaver.comp.State(beaver.comp.Configuration$Set)
  - [-0.033205][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'rule' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'actions' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'rule' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Instantiate Method] Move static method 'compile(beaver.comp.io.SrcReader)' of 'beaver.comp.run.Options' to its parameter type 'beaver.comp.io.SrcReader'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$PropagationLink
  - [-0.033205][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'reduce(int,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Remove Method] '<init>(java.lang.String,java.lang.String)' of type 'beaver.comp.Action$Type$Conflict'
  - [-0.033205][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'n_written' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.033205][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Freeze Method] Convert 'syntaxError(beaver.Symbol)' of 'beaver.spec.parser.GrammarParser$Events' to static 
  - [-0.033205][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.spec.Production$List' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzMarkedPos' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Decrease Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.033205][Move Down Field] 'prec_sym_name' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition'
  - [-0.033205][Increase Method Security] 'initStack()' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'recoverFromError(beaver.Symbol,beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.033205][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'report' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'checkNullability(beaver.spec.NonTerminal)' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'state' of 'beaver.comp.Action$Shift' to its super class 'beaver.comp.Action'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'messages' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzEndRead' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Field Security] 'num_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Parser$Simulator.initStack() into beaver.Parser$Simulator.parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)
  - [-0.033205][Move Down Field] 'CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.Configuration$PropagationLink' to 'PACKAGE'
  - [-0.033205][Make Class Final] beaver.comp.Configuration$Set
  - [-0.033205][Decrease Method Security] 'shift(beaver.Symbol,short,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Remove Method] 'visit(beaver.spec.ast.Rule$Definition,beaver.spec.GrammarBuilder$5)' of type 'beaver.spec.GrammarBuilder$5'
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'addForwardPropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'visit()' of 'beaver.spec.ast.Declaration$LeftAssoc' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'token_line' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'compile()' of 'beaver.comp.io.SrcReader' to 'PROTECTED'
  - [-0.033205][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.State$Factory()' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.comp.Action$List.<init>(beaver.comp.State) into beaver.comp.Action$List.createbeaver.comp.Action$List(beaver.comp.State)
  - [-0.033205][Inline Method] beaver.spec.ast.Declaration$LeftAssoc.visit() into beaver.spec.ast.Declaration$LeftAssoc.accept(beaver.spec.ast.TreeWalker)
  - [-0.033205][Decrease Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.033205][Decrease Field Security] 'states' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'yyline' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'zzBuffer' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Make Class Non-Final] beaver.spec.parser.GrammarParser$Events
  - [-0.033205][Move Method] 'scannerError(beaver.Scanner$Exception,beaver.Parser$Events)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.033205][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PUBLIC'
  - [-0.033205][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.033205][Make Class Non-Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033205][Increase Field Security] 'name' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'getCode(beaver.spec.ast.Declaration$CodeContainer,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'TEXT' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PRIVATE'
  - [-0.033205][Move Method] 'scannerError(beaver.Parser$Events,beaver.Parser$Events)' of 'beaver.Scanner$Exception' to its parameter type 'beaver.Parser$Events'
  - [-0.033205][Decrease Method Security] 'writeTerminalsSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.ParserGenerator$CompiledParser(beaver.spec.Grammar,beaver.comp.ParsingTables)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'rule' of 'beaver.comp.util.BitSet$Processor' to its child class 'beaver.comp.Action$Reduce$Maker'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'yyline' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Field Security] 'val$rules' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Make Class Final] beaver.comp.Configuration$Set
  - [-0.033205][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Field Security] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.033205][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.comp.util.IntArray.<init>(int) into beaver.comp.util.IntArray.createbeaver.comp.util.IntArray()
  - [-0.033205][Increase Field Security] 'rule' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'log' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'log' of 'beaver.spec.ast.TreeWalker' to its child class 'beaver.spec.GrammarBuilder'
  - [-0.033205][Decrease Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'rule' of 'beaver.comp.Action$Reduce$Maker' to its super class 'beaver.comp.util.BitSet$Processor'
  - [-0.033205][Decrease Field Security] 'prec_sym_name' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'descr' of 'beaver.comp.Action$Type' to its child class 'beaver.comp.Action$Type$Conflict'
  - [-0.033205][Decrease Field Security] '_symbols' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Make Class Final] beaver.comp.Configuration$Set$Factory
  - [-0.033205][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'syntaxError(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Header,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'next' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.comp.ParserGenerator$CompiledParser.writeClass(java.lang.String,beaver.comp.run.Options,java.io.Writer,beaver.comp.ParserGenerator$CompiledParser) into beaver.comp.ParserGenerator$CompiledParser.writeParserSource(java.io.File,java.io.File,java.lang.String,beaver.comp.run.Options,beaver.comp.ParserGenerator$CompiledParser)
  - [-0.033205][Move Up Field] 'name' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033205][Move Up Field] 'token_line' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Field Security] 'rule' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'zzLexicalState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Inline Method] beaver.Parser$TokenStream.<init>(beaver.Parser,beaver.Scanner) into beaver.Parser$TokenStream.createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner)
  - [-0.033205][Increase Field Security] 'scanner' of 'beaver.Parser$TokenStream' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'rule' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'yychar' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'type' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'descr' of 'beaver.comp.Action$Type$Conflict' to its super class 'beaver.comp.Action$Type'
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.033205][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.State)' of 'beaver.comp.Action$Reduce' to its parameter type 'beaver.comp.State'
  - [-0.033205][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'split(beaver.comp.Action$List,beaver.comp.Action$List,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getId()' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Make Class Non-Final] beaver.comp.Action$Shift
  - [-0.033205][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'isFull(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getId()' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Inline Method] beaver.comp.Configuration$Set.<init>(beaver.comp.Configuration$Set$Factory,int,beaver.comp.Configuration$1) into beaver.comp.Configuration$Set.createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)
  - [-0.033205][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Make Class Final] beaver.comp.Configuration
  - [-0.033205][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'YYINITIAL' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Method Security] 'writeTerminalsClass(beaver.spec.Grammar,beaver.comp.run.Options,java.lang.String,java.io.Writer)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'compile()' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Move Method] 'createbeaver.comp.State(beaver.comp.Configuration$Set)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Configuration$Set'
  - [-0.033205][Make Class Non-Final] beaver.comp.State$Factory
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$Imports)' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.spec.NonTerminal.<init>(java.lang.String) into beaver.spec.NonTerminal.createbeaver.spec.NonTerminal()
  - [-0.033205][Increase Field Security] 'actions' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Move Down Field] 'zzBuffer' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'goto_offsets' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'zzAtEOF' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.spec.Production$RHS.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS.createbeaver.spec.Production$RHS(beaver.spec.GrammarSymbol)
  - [-0.033205][Increase Field Security] 'default_actions' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'reportConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Instantiate Method] Move static method 'createbeaver.comp.State(beaver.comp.State)' of 'beaver.comp.Configuration$Set' to its parameter type 'beaver.comp.State'
  - [-0.033205][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'errors' of 'beaver.comp.util.Log' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.parser.GrammarScanner()' of 'beaver.spec.parser.GrammarScanner' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Field Security] '_symbols' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'messages' of 'beaver.comp.util.Log' to 'PRIVATE'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Field Security] 'min_top' of 'beaver.Parser$Simulator' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'n_term' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.033205][Decrease Field Security] 'alias' of 'beaver.spec.ast.Node' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'zzState' of 'beaver.Scanner' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'token_line' of 'beaver.Scanner' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'lookahead' of 'beaver.comp.Action' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.spec.Production$RHS$Item.<init>(beaver.spec.GrammarSymbol) into beaver.spec.Production$RHS$Item.createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.GrammarTreeRoot'
  - [-0.033205][Increase Method Security] 'writeListsCode()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Remove Method] 'visit(beaver.spec.ast.Declaration$ClassCode,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'last' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'size(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.run.Make()' of 'beaver.comp.run.Make' to 'PRIVATE'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'actions' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.ParsingTables.<init>(java.lang.Class) into beaver.ParsingTables.createbeaver.ParsingTables()
  - [-0.033205][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033205][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033205][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'log' of 'beaver.spec.GrammarBuilder' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'add(beaver.comp.util.Log$Record,beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'configurations' of 'beaver.comp.Configuration$Set$Factory' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of 'beaver.spec.Production$2' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$Set
  - [-0.033205][Move Up Field] 'n_nonterms' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Inline Method] beaver.spec.ast.GrammarTreeRoot.visit(beaver.spec.ast.TreeWalker,beaver.spec.ast.TreeWalker) into beaver.spec.ast.GrammarTreeRoot.accept(beaver.spec.ast.TreeWalker)
  - [-0.033205][Decrease Method Security] 'addConfiguration(beaver.spec.Production,int,beaver.comp.Configuration$Set$Factory)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'imports' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'conf_set' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'name' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'n_term' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'PARSING_TABLES' of 'beaver.spec.parser.GrammarParser' to its super class 'beaver.Parser'
  - [-0.033205][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'PARSING_TABLES' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.033205][Increase Field Security] 'last' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.State()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'nonterminal_offsets' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'grammar' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'tables' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Remove Method] 'visit(beaver.spec.ast.Declaration$LeftAssoc,beaver.spec.GrammarBuilder$3)' of type 'beaver.spec.GrammarBuilder$3'
  - [-0.033205][Decrease Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'rhs_elements' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.spec.Production$List' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of 'beaver.spec.parser.GrammarParser$Events' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'resolveConflicts(beaver.comp.util.Log,beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'terminal_offsets' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzAtBOL' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Make Class Non-Final] beaver.comp.Action$Accept
  - [-0.033205][Increase Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'appendReversePropagation(beaver.comp.Configuration$Set,beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'checkAndResolveConflicts(beaver.comp.util.Log)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'first' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'zzEOFDone' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Method Security] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'num_states' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'misspelledTokenReplaced(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'YYEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Decrease Method Security] 'unexpectedTokenRemoved(beaver.Parser$Events)' of 'beaver.Symbol' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'start(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'states' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'EOF_CODE' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Move Down Field] 'log' of 'beaver.Parser' to its child class 'beaver.spec.parser.GrammarParser'
  - [-0.033205][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'zzAtEOF' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'name' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033205][Move Down Field] 'EOL_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.Declaration$Goal)' of 'beaver.spec.GrammarBuilder$3' to static 
  - [-0.033205][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'found' of 'beaver.spec.GrammarBuilder$4' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'val$tokens' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.NonTerminal()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Configuration$Set(beaver.comp.Configuration$Set$Factory,beaver.comp.Configuration$1)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'accept_action_id' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'type' of 'beaver.spec.ast.Node' to its super class 'beaver.Symbol'
  - [-0.033205][Decrease Method Security] 'end(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'id' of 'beaver.comp.Action' to its child class 'beaver.comp.Action$Accept'
  - [-0.033205][Increase Field Security] 'grammar' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'log' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'val$goals' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'report' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.spec.Production$List' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.parser.GrammarParser$Events(beaver.comp.util.Log)' of 'beaver.spec.parser.GrammarParser$Events' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'token_column' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Field Security] 'size' of 'beaver.comp.util.IntArray' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'nextToken(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'name' of 'beaver.spec.ast.Node' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzLexicalState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Configuration$Set$Factory(beaver.spec.Grammar)' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'markReducibleProductions(beaver.comp.Action$List)' of 'beaver.comp.Action$List' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'yycolumn' of 'beaver.spec.parser.GrammarScanner' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'name' of 'beaver.comp.Action$Type' to 'PUBLIC'
  - [-0.033205][Freeze Method] Convert 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$TypeOf' to static 
  - [-0.033205][Increase Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'writeActionsReport(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Move Down Field] 'alias' of 'beaver.spec.ast.Node' to its child class 'beaver.spec.ast.Rule$Definition$Element'
  - [-0.033205][Decrease Method Security] 'isRemovable(beaver.comp.Action$Type)' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Production$RHS$Item(beaver.spec.GrammarSymbol)' of 'beaver.spec.Production$RHS$Item' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'states' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$4)' of 'beaver.spec.GrammarBuilder$4' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'id' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'zzCurrentPos' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Move Method] 'createbeaver.Parser$TokenStream(beaver.Parser,beaver.Scanner,beaver.Symbol)' of 'beaver.Parser$TokenStream' to its parameter type 'beaver.Symbol'
  - [-0.033205][Instantiate Method] Move static method 'createbeaver.comp.Action$Shift(beaver.spec.GrammarSymbol,beaver.comp.State)' of 'beaver.comp.Action$Shift' to its parameter type 'beaver.comp.State'
  - [-0.033205][Move Down Field] 'type' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033205][Decrease Field Security] 'bck_propagation' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'getOpt(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'core_size' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'id' of 'beaver.comp.Action$Accept' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'tables' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.ast.TreeWalker()' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser)' of 'beaver.Parser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.util.Log$Record$List()' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Action$Accept(beaver.spec.Grammar)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'writeListsCode()' of 'beaver.spec.NonTerminal' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'process(int)' of 'beaver.comp.util.BitSet$Processor' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'log' of 'beaver.spec.GrammarBuilder' to its super class 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Move Method] 'syntaxError(beaver.Parser$Events)' of 'beaver.Symbol' to its parameter type 'beaver.Parser$Events'
  - [-0.033205][Instantiate Method] Move static method 'resolveConflict(beaver.comp.util.Log,beaver.comp.Action$Accept)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Accept'
  - [-0.033205][Decrease Method Security] 'createbeaver.comp.Action(beaver.spec.Terminal,beaver.spec.Production)' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'probe' of 'beaver.comp.Configuration$Set$Factory' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'compare(java.lang.Object,java.lang.Object)' of 'beaver.comp.ParserGenerator$CompiledParser$1' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'buildReduceActions(beaver.comp.Action$Reduce$Maker)' of 'beaver.comp.Action$Reduce$Maker' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'zzState' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Increase Field Security] 'core_hash_code' of 'beaver.comp.Configuration$Set' to 'PRIVATE'
  - [-0.033205][Move Up Field] 'zzState' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Field Security] 'conf_set' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'writeListsCode()' of 'beaver.spec.NonTerminal' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'writeParsingTables(java.io.File,java.lang.String,beaver.comp.ParserGenerator$CompiledParser)' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'rule' of 'beaver.comp.util.BitSet$Processor' to 'PUBLIC'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'syntaxError(beaver.Symbol)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'buffer' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Decrease Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PUBLIC'
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.TreeWalker)' of 'beaver.spec.ast.Declaration$ListType' to its parameter type 'beaver.spec.ast.TreeWalker'
  - [-0.033205][Increase Field Security] 'grammar_file' of 'beaver.comp.run.AntTask' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'first' of 'beaver.comp.Action$List' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'last_action_index' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'appendTo(java.lang.StringBuffer,beaver.spec.Production$RHS$Item)' of 'beaver.spec.Production$RHS$Item' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PRIVATE'
  - [-0.033205][Decrease Method Security] 'buildClosure(beaver.comp.Configuration$Set)' of 'beaver.comp.Configuration$Set' to 'PUBLIC'
  - [-0.033205][Remove Method] 'compare(java.lang.Object,java.lang.Object,beaver.spec.Production$2)' of type 'beaver.spec.Production$2'
  - [-0.033205][Decrease Field Security] 'lookaheads' of 'beaver.ParsingTables' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'id' of 'beaver.comp.Action$Accept' to its super class 'beaver.comp.Action'
  - [-0.033205][Increase Method Security] 'reset(beaver.comp.util.Log$Record$List)' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getState(beaver.comp.Configuration$Set,beaver.comp.State$Factory)' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$ClassName)' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'terminal_lookahead_actions' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'start(beaver.spec.Production$RHS)' of 'beaver.spec.Production$RHS' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'resolveConflict(beaver.comp.util.Log)' of 'beaver.comp.Action$Accept' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'splitActions(beaver.comp.State)' of 'beaver.comp.State' to 'PUBLIC'
  - [-0.033205][Move Down Field] 'MLN_COMMENT' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Move Method] 'add(beaver.spec.Production,beaver.spec.Production$List)' of 'beaver.spec.Production$List' to its parameter type 'beaver.spec.Production'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'top' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033205][Increase Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PACKAGE'
  - [-0.033205][Make Class Final] beaver.comp.Action$Reduce$Maker
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Field Security] 'last' of 'beaver.comp.util.Log$Record$List' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'findLookaheads(beaver.comp.State)' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Inline Method] beaver.Scanner$Exception.<init>(java.lang.String) into beaver.Scanner$Exception.createbeaver.Scanner$Exception()
  - [-0.033205][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'createbeaver.spec.Terminal()' of 'beaver.spec.Terminal$Associativity' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'first_conf' of 'beaver.comp.Configuration$Set$Factory' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'log' of 'beaver.spec.ast.TreeWalker' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'lhs_sym' of 'beaver.spec.GrammarBuilder$5' to 'PUBLIC'
  - [-0.033205][Make Class Final] beaver.comp.Action$Type$Conflict$ReduceReduce
  - [-0.033205][Increase Method Security] 'splitActions()' of 'beaver.comp.State' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'id' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Move Up Field] 'zzBuffer' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Decrease Method Security] 'errorPhraseRemoved(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'compressed' of 'beaver.ParsingTables' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033205][Decrease Method Security] 'isDotAfterLastSymbol(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Make Class Non-Final] beaver.comp.State
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'errors' of 'beaver.comp.util.Log' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.spec.parser.GrammarScanner.<init>(java.io.Reader) into beaver.spec.parser.GrammarScanner.createbeaver.spec.parser.GrammarScanner()
  - [-0.033205][Increase Field Security] 'bit_bags' of 'beaver.comp.util.BitSet' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'isNullable(beaver.spec.Production)' of 'beaver.spec.Production' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'createbeaver.Parser$Exception()' of 'beaver.Parser$Exception' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'data' of 'beaver.comp.util.IntArray' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'states' of 'beaver.Parser$Simulator' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$DeclarationWalker)' of 'beaver.spec.GrammarBuilder$DeclarationWalker' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'message' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.GrammarTreeRoot,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getSymbolAfterDot(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'accept_action_id' of 'beaver.Parser' to 'PRIVATE'
  - [-0.033205][Move Down Field] 'EOF_CODE' of 'beaver.Scanner' to its child class 'beaver.spec.parser.GrammarScanner'
  - [-0.033205][Make Class Final] beaver.comp.State
  - [-0.033205][Decrease Method Security] 'visit(beaver.spec.ast.Declaration$PackageName,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PROTECTED'
  - [-0.033205][Freeze Method] Convert 'getExtUseMark()' of 'beaver.spec.ast.Rule$Definition$Element' to static 
  - [-0.033205][Make Class Non-Final] beaver.comp.Action$List
  - [-0.033205][Increase Method Security] 'missingTokenInserted(beaver.Symbol,beaver.Parser$Events)' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'first_state' of 'beaver.comp.ParsingTables' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Goal,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'reverseReversePropagation(beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PACKAGE'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'rule_descr' of 'beaver.comp.ParserGenerator$CompiledParser' to 'PRIVATE'
  - [-0.033205][Decrease Field Security] 'descr' of 'beaver.comp.Action$Type' to 'PROTECTED'
  - [-0.033205][Move Method] 'makeDescription(java.lang.String,beaver.comp.Action$Reduce,beaver.comp.Action$Reduce)' of 'beaver.comp.State' to its parameter type 'beaver.comp.Action$Reduce'
  - [-0.033205][Inline Method] beaver.comp.util.BitSet.<init>() into beaver.comp.util.BitSet.createbeaver.comp.util.BitSet()
  - [-0.033205][Decrease Field Security] 'precedence' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'default_actions' of 'beaver.ParsingTables' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'zzEOFDone' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'addLookaheads(beaver.comp.Configuration,beaver.comp.Configuration)' of 'beaver.comp.Configuration' to 'PUBLIC'
  - [-0.033205][Decrease Field Security] 'top' of 'beaver.Parser' to 'PACKAGE'
  - [-0.033205][Move Up Field] 'matched_text' of 'beaver.spec.parser.GrammarScanner' to its super class 'beaver.Scanner'
  - [-0.033205][Increase Field Security] 'start_pos' of 'beaver.comp.util.Log$Record' to 'PRIVATE'
  - [-0.033205][Inline Method] beaver.Symbol.<init>(short,int,int,int,java.lang.Object) into beaver.Symbol.createbeaver.Symbol()
  - [-0.033205][Decrease Method Security] 'setPrecedence(beaver.spec.ast.Declaration$SymbolsContainer,beaver.spec.Terminal$Associativity,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'rewind(beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'getLst(java.lang.String,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Terminals,beaver.spec.GrammarBuilder$1)' of 'beaver.spec.GrammarBuilder$1' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'impls' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Make Class Non-Final] beaver.comp.Configuration$Set$Factory
  - [-0.033205][Move Method] 'visit(beaver.spec.ast.Declaration$ListType)' of 'beaver.spec.ast.TreeWalker' to its parameter type 'beaver.spec.ast.Declaration$ListType'
  - [-0.033205][Decrease Field Security] 'end_pos' of 'beaver.comp.util.Log$Record' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'conf_set_factory' of 'beaver.comp.State$Factory' to 'PROTECTED'
  - [-0.033205][Decrease Method Security] 'splitActions()' of 'beaver.comp.State' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'states' of 'beaver.Parser' to 'PROTECTED'
  - [-0.033205][Remove Method] 'misspelledTokenReplaced(beaver.Symbol,beaver.spec.parser.GrammarParser$Events)' of type 'beaver.spec.parser.GrammarParser$Events'
  - [-0.033205][Increase Field Security] 'log' of 'beaver.spec.parser.GrammarParser' to 'PROTECTED'
  - [-0.033205][Move Method] 'scannerError(beaver.Parser$Events,beaver.Scanner$Exception)' of 'beaver.Parser$Events' to its parameter type 'beaver.Scanner$Exception'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$Implements)' of 'beaver.spec.ast.TreeWalker' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'alloc(int,beaver.Parser$TokenStream)' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Move Up Field] 'code' of 'beaver.spec.ast.Declaration$CodeContainer' to its super class 'beaver.spec.ast.Declaration'
  - [-0.033205][Increase Method Security] 'createbeaver.Parser$Events()' of 'beaver.Parser$Events' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'options' of 'beaver.comp.run.AntTask' to 'PROTECTED'
  - [-0.033205][Increase Field Security] 'last_core_conf' of 'beaver.comp.Configuration$Set' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Declaration$TypeOf,beaver.spec.GrammarBuilder$3)' of 'beaver.spec.GrammarBuilder$3' to 'PACKAGE'
  - [-0.033205][Increase Method Security] 'visit(beaver.spec.ast.Rule,beaver.spec.GrammarBuilder$5)' of 'beaver.spec.GrammarBuilder$5' to 'PACKAGE'
  - [-0.033205][Increase Field Security] 'first_conf' of 'beaver.comp.Configuration$Set' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'parse(beaver.Parser$TokenStream,beaver.Parser$Simulator)' of 'beaver.Parser$Simulator' to 'PACKAGE'
  - [-0.033205][Decrease Method Security] 'reduce(beaver.Symbol[],int)' of 'beaver.Action' to 'PUBLIC'
  - [-0.033205][Increase Field Security] 'next' of 'beaver.comp.Action' to 'PROTECTED'
  - [-0.033205][Decrease Field Security] 'state' of 'beaver.comp.Action' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'createbeaver.spec.ast.Rule$Definition(beaver.spec.ast.Rule$Definition$Element[])' of 'beaver.spec.ast.Rule$Definition' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'nextToken()' of 'beaver.Scanner' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'zzAtEOF' of 'beaver.spec.parser.GrammarScanner' to 'PROTECTED'
  - [-0.033205][Move Down Field] 'code' of 'beaver.Symbol' to its child class 'beaver.spec.ast.Node'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PROTECTED'
  - [-0.033205][Increase Method Security] 'setPrecedence(int,beaver.spec.Terminal)' of 'beaver.spec.Terminal$Associativity' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'n_read' of 'beaver.Parser$TokenStream' to 'PUBLIC'
  - [-0.033205][Increase Method Security] 'getPrecedenceSymbolName(beaver.spec.ast.Rule$Definition)' of 'beaver.spec.ast.Rule$Definition' to 'PACKAGE'
  - [-0.033205][Decrease Field Security] 'size' of 'beaver.comp.util.Log$Record$List' to 'PUBLIC'
  - [-0.033295][Remove Class] beaver.comp.Action$Type$Conflict$ReduceReduce

====== Run Result ======

* Name: Beaver|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 16.44 seconds
  * Quality Gain: 0.000000
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Final Design:
  * Score: -0.027402
  * Possible Actions: 801
  * Applied Actions: 0
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.0000
    * abstractness: 0.0830
    * numInterf: 0.0000

* Applied Actions:

====== Task Summary ======

* General Info:
  * Average time across all runs: 16.47 seconds
  * Average quality gain across all runs: 0.004738 (Average Score: -0.032139)
  * Highest quality gain across all runs: 0.007679 (Score: -0.035080)
  * Lowest quality gain across all runs: 0.000000 (Score: -0.027402)
  * Time taken to complete task: 164.72 seconds

* Metric Summary:
  * iFImpl
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
  * abstractness
    * Average Quality Gain: 0.0144 (Average Score: 0.0974)
    * Highest Quality Gain: 0.0233 (Best Score: 0.1063)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0830)
  * numInterf
    * Average Quality Gain: 0.0000 (Average Score: 0.0000)
    * Highest Quality Gain: 0.0000 (Best Score: 0.0000)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0000)
