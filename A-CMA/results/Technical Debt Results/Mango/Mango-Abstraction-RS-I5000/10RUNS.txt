====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.37 seconds
  * Quality Gain: 0.003760
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.406388
  * Possible Actions: 368
  * Applied Actions: 2334
  * Num Types: 95
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4526
    * abstractness: 0.0288
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.Helpers.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.Helpers()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.util.Collection)
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Remove Method] 'get(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)
  - [-0.402628][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.404479][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.404479][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.404479][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.404479][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.404479][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404479][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.404479][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'keySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.404479][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.404479][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404479][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.404479][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.404479][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404479][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.404479][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.404479][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.404479][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.404479][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.404479][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.404479][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.404479][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404479][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.404479][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.404479][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.404479][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.404479][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.404479][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.404479][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404479][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.404479][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.404479][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404479][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404479][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.404479][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404479][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404479][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404479][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404479][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)
  - [-0.404479][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.404479][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404479][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.404479][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404479][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.404479][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.406388][Remove Class] uk.co.jezuk.mango.Bind

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.58 seconds
  * Quality Gain: 0.004772
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.407400
  * Possible Actions: 263
  * Applied Actions: 4244
  * Num Types: 88
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4545
    * abstractness: 0.0300
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.Helpers.<init>()
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'size()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.<init>() into uk.co.jezuk.mango.iterators.Helpers.createuk.co.jezuk.mango.iterators.Helpers()
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.Helpers()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Instantiate Method] Move static method 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Field] 'value_' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'All(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Functions
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406388][Remove Class] uk.co.jezuk.mango.Bind
  - [-0.406388][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.406388][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.406388][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406388][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.406388][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.406388][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406388][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.406388][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406388][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406388][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.406388][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.406388][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.406388][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.406388][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.406388][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.406388][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406388][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.406388][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.406388][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.406388][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406388][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.406388][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.406388][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.406388][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406388][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.406388][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.406388][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.406388][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.406388][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.406388][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.406388][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406388][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406388][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.406388][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406388][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.406388][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.406388][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.406388][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.406388][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.406388][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.406388][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.406388][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406388][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406388][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.binarypredicates.GreaterThan
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404466][Remove Field] 'val$g' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.404466][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.404466][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.404466][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404466][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404466][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404466][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.functions.Constant
  - [-0.402503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402503][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402503][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402503][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402503][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402503][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402503][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402503][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402503][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.402503][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404465][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404465][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404465][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404465][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404465][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404465][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404465][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404465][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404465][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404465][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404465][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404465][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404465][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.404465][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404465][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.404465][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404465][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404465][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404465][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404465][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.404465][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404465][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404465][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404465][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.404465][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404465][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404465][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404465][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404465][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404465][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.404465][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404465][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404465][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404465][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PRIVATE'
  - [-0.404465][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.404465][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404465][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404465][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404465][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404465][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404465][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.404465][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404465][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.unarypredicates.All
  - [-0.402455][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402455][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402455][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402455][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402455][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402455][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402455][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402455][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402455][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402455][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402455][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.binarypredicates.Or
  - [-0.402455][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402455][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402455][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402455][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.402455][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402455][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402455][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-0.402455][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402455][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.402455][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402455][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402455][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402455][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402455][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402455][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.binarypredicates.Or
  - [-0.402455][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402455][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402455][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402455][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.402455][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.402455][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402455][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402455][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402455][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402455][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-0.402455][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402455][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402455][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402455][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.402455][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402455][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402455][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402455][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402455][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.402455][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402455][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402455][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402455][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402455][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402455][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402455][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402455][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402455][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402455][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402455][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402455][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402455][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402455][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402455][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402455][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402455][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402455][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402455][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402455][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402455][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402455][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402455][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.algorithms.CountIf
  - [-0.404067][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404067][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404067][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404067][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404067][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404067][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404067][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404067][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.404067][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404067][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.404067][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404067][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404067][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404067][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404067][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404067][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404067][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404067][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404067][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.404067][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404067][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404067][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404067][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404067][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404067][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404067][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.404067][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.404067][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Remove Field] 'transform_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404067][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404067][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404067][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404067][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404067][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404067][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.SymmetricDifference.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404067][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404067][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404067][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404067][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404067][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404067][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404067][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404067][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404067][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Remove Method] 'OneOf(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404067][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.404067][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404067][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404067][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.404067][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404067][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404067][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.binarypredicates.Or
  - [-0.404067][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404067][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404067][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404067][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404067][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404067][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.404067][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.404067][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404067][Remove Class] uk.co.jezuk.mango.binarypredicates.Or
  - [-0.404067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404067][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404067][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.404067][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-0.404067][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404067][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.404067][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.405715][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.407400][Remove Class] uk.co.jezuk.mango.algorithms.CountIfNot

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.51 seconds
  * Quality Gain: 0.005633
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.408261
  * Possible Actions: 262
  * Applied Actions: 4314
  * Num Types: 88
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4545
    * abstractness: 0.0326
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.Helpers.<init>()
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'checkConstraints(int,int)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'checkConstraints(int,int)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.Helpers()' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.Helpers()' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.Helpers()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'entrySet()' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.402628][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.402628][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)
  - [-0.402628][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.404479][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.404479][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404479][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404479][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.lang.Object[])
  - [-0.404479][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404479][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.lang.Object[])
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406388][Remove Class] uk.co.jezuk.mango.Bind
  - [-0.406388][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.406388][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406388][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406388][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.406388][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.406388][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.lang.Object[])
  - [-0.406388][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406388][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.406388][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406388][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.406388][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406388][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406388][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.406388][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406388][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.binarypredicates.EqualTo
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.404466][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404466][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404466][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404466][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.404466][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.404466][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.404466][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404466][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.404466][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404466][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.404466][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.404466][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.404466][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404466][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.404466][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404466][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.404466][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.404466][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Nor
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404466][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404466][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404466][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404466][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404466][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.404466][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.404466][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.404466][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.404466][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.binarypredicates.GreaterThan
  - [-0.402503][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402503][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.402503][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402503][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402503][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402503][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402503][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.402503][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402503][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402503][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402503][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402503][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402503][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402503][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402503][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402503][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.402503][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402503][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402503][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402503][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402503][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402503][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402503][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402503][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402503][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402503][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402503][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402503][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402503][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402503][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402503][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402503][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402503][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402503][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402503][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.402503][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402503][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402503][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402503][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402503][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402503][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402503][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402503][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402503][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402503][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.402503][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402503][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.402503][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402503][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402503][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402503][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402503][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.402503][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402503][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.402503][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402503][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402503][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402503][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402503][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402503][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402503][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402503][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402503][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402503][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402503][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404465][Remove Class] uk.co.jezuk.mango.Functions
  - [-0.404465][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404465][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404465][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404465][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.404465][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404465][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404465][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404465][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.404465][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404465][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404465][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404465][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404465][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404465][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404465][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404465][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404465][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404465][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404465][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.404465][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404465][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404465][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.404465][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404465][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404465][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404465][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404465][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404465][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404465][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404465][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.algorithms.Count
  - [-0.406081][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.406081][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.406081][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.406081][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.406081][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.binarypredicates.And
  - [-0.406081][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.406081][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.406081][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.406081][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406081][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.406081][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406081][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.406081][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406081][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406081][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.406081][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.406081][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.406081][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.406081][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.406081][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.406081][Remove Class] uk.co.jezuk.mango.unarypredicates.Nor
  - [-0.406081][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.406081][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406081][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.406081][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.406081][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.functions.Constant
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406081][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.406081][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406081][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406081][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.406081][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.406081][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.406081][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.406081][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.406081][Remove Field] 'transform_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.406081][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.406081][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406081][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.406081][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.406081][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.406081][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.406081][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.406081][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406081][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406081][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.406081][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.406081][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.406081][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.406081][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406081][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406081][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406081][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.406081][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.406081][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.406081][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.406081][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.406081][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.406081][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.406081][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.binarypredicates.Or
  - [-0.406081][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.406081][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.406081][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.406081][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406081][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.406081][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.406081][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals
  - [-0.404067][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404067][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404067][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.404067][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404067][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404067][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404067][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404067][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404067][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404067][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PRIVATE'
  - [-0.404067][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404067][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.404067][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404067][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Partition' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.404067][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.406127][Remove Class] uk.co.jezuk.mango.Generators
  - [-0.406127][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406127][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.406127][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406127][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.406127][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406127][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.406127][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.406127][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406127][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406127][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406127][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406127][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406127][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406127][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.406127][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406127][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406127][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.406127][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.406127][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406127][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.406127][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.406127][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.406127][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406127][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.406127][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.406127][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.406127][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406127][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.406127][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406127][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406127][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.406127][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406127][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406127][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.406127][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406127][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406127][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.406127][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PRIVATE'
  - [-0.406127][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.406127][Remove Method] 'execute(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.406127][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.406127][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.406127][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.406127][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406127][Remove Class] uk.co.jezuk.mango.unarypredicates.Nor
  - [-0.406127][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406127][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406127][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406127][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.406127][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.406127][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408261][Remove Class] uk.co.jezuk.mango.Predicates

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.47 seconds
  * Quality Gain: 0.000000
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Applied Actions:

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.53 seconds
  * Quality Gain: 0.006346
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.408974
  * Possible Actions: 275
  * Applied Actions: 3962
  * Num Types: 91
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4615
    * abstractness: 0.0278
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'containsValue(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.402628][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.lang.Object[])
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.402628][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404152][Remove Class] uk.co.jezuk.mango.algorithms.Count
  - [-0.404152][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.404152][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404152][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404152][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404152][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404152][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.404152][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.404152][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404152][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.404152][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.404152][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.404152][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404152][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404152][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404152][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404152][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404152][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.404152][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404152][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404152][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404152][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.404152][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404152][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404152][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404152][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404152][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404152][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404152][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.404152][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404152][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404152][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404152][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.404152][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404152][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PRIVATE'
  - [-0.404152][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404152][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404152][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404152][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404152][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404152][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404152][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404152][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.404152][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404152][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404152][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404152][Remove Field] 'generator_' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404152][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404152][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404152][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404152][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404152][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.404152][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404152][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.406035][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.406035][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.406035][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406035][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.406035][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406035][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.407624][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-0.407624][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.407624][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407624][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.407624][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.407624][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.407624][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.407624][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.407624][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.407624][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.407624][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.407624][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.407624][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.407624][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.407624][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.407624][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.407624][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.407624][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.407624][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.407624][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.407624][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.407624][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.407624][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.407624][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.407624][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.407624][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.407624][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.407624][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.407624][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.407624][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.407624][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.407624][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.407624][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.407624][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.407624][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.407624][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.407624][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.407624][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.407624][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.407624][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.407624][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.407624][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.407624][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.407624][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.407624][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.407624][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.407624][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.407624][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.util.Collection)
  - [-0.407624][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.407624][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.407624][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.407624][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.407624][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407624][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.407624][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.407624][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.407624][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.407624][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.407624][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.407624][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.407624][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.407624][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.407624][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.407624][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.407624][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.407624][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.407624][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407624][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.407624][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.407624][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.407624][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.407624][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.407624][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.407624][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.405699][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.405699][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.405699][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.405699][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405699][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.405699][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.405699][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.405699][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.405699][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.405699][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.405699][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.405699][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.405699][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.405699][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.unarypredicates.Any
  - [-0.405699][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.405699][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.405699][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.405699][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.binarypredicates.And
  - [-0.405699][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.405699][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.405699][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.405699][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.405699][Remove Method] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.405699][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.405699][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405699][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.405699][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.405699][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.405699][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.405699][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.405699][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405699][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.405699][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.405699][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.405699][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.405699][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.405699][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405699][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405699][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.405699][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.405699][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.405699][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.405699][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PUBLIC'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.405699][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.405699][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.405699][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.405699][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405699][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405699][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.405699][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.405699][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Remove' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.405699][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.405699][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.405699][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.405699][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.405699][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.SymmetricDifference' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.405699][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405699][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.405699][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.405699][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.405699][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.405699][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.405699][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.405699][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.405699][Remove Method] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.405699][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.405699][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.405699][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.405699][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PRIVATE'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.405699][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.405699][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.405699][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.functions.Constant
  - [-0.405699][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405699][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.405699][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.405699][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.405699][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.405699][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.405699][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405699][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.405699][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.405699][Remove Class] uk.co.jezuk.mango.unarypredicates.Not
  - [-0.405699][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405699][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.405699][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.405699][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.405699][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.405699][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405699][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.405699][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.405699][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405699][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.405699][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.405699][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.405699][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405699][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.405699][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.405699][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.405699][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.405699][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407319][Remove Class] uk.co.jezuk.mango.algorithms.FindPositionIf
  - [-0.407319][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.407319][Remove Class] uk.co.jezuk.mango.Generator
  - [-0.407319][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.407319][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407319][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.407319][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407319][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.407319][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.407319][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.407319][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.407319][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.407319][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.407319][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407319][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.407319][Remove Class] uk.co.jezuk.mango.functions.Constant
  - [-0.407319][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.407319][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407319][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.407319][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.408974][Remove Class] uk.co.jezuk.mango.algorithms.SymmetricDifference

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.36 seconds
  * Quality Gain: 0.001851
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.404479
  * Possible Actions: 355
  * Applied Actions: 2521
  * Num Types: 96
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4479
    * abstractness: 0.0278
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'checkConstraints(int,int)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Remove Method] 'put(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Remove Method] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.util.Collection)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'All(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.next(uk.co.jezuk.mango.iterators.ZipIterator) into uk.co.jezuk.mango.iterators.ZipIterator.next()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Class] uk.co.jezuk.mango.unarypredicates.Nor
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.BinaryFunctions

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.58 seconds
  * Quality Gain: 0.000000
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Applied Actions:

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.58 seconds
  * Quality Gain: 0.008673
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.411301
  * Possible Actions: 234
  * Applied Actions: 4535
  * Num Types: 86
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4651
    * abstractness: 0.0313
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'checkConstraints(int,int)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.402628][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'checkConstraints(int,int)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'checkConstraints(int,int)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.findNext(uk.co.jezuk.mango.iterators.SkippingIterator) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Decrease Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Remove Method] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.400714][Remove Class] uk.co.jezuk.mango.binarypredicates.EqualTo
  - [-0.400714][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400714][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.400714][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.400714][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.400714][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.400714][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.400714][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400714][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400714][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.400714][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.400714][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.400714][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.400714][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.400714][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.400714][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400714][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.400714][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.400714][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400714][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.400714][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.400714][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400714][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.400714][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400714][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400714][Remove Method] 'unique(java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.400714][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.400714][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400714][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.400714][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.400714][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400714][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.400714][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.400714][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.400714][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.400714][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.400714][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400714][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.400714][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.400714][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.400714][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.400714][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.400714][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.400714][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.400714][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.400714][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.400714][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.400714][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.400714][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.400714][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400714][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400714][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.400714][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400714][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.400714][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.400714][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400714][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.400714][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400714][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.400714][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400714][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.400714][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.400714][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.400714][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400714][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.400714][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400714][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.400714][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.400714][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400714][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400714][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400714][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.400714][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.400714][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400714][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400714][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400714][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.400714][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.400714][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.400714][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400714][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.400714][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.400714][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.400714][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.400714][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400714][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400714][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400714][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.400714][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.400714][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400714][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.400714][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.400714][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.400714][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.402561][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.402561][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402561][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402561][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402561][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402561][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.Functions
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.404466][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404466][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Remove Field] 's_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.404466][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.404466][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.404466][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.404466][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404466][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.404466][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404466][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.lang.Object[])
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404466][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404466][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.404466][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404466][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.404466][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.404466][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404466][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Remove Method] 'unique(java.util.Collection,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404466][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404466][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404466][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404466][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404466][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404466][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404466][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.404466][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404466][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.404466][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404466][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404466][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.404466][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404466][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404466][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404466][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404466][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Remove Method] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404466][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404466][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404466][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404466][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.404466][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404466][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.404466][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.404466][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404466][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.404466][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404466][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404466][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404466][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404466][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.404466][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404466][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.404466][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404466][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404466][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406051][Remove Class] uk.co.jezuk.mango.algorithms.RemoveIf
  - [-0.406051][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406051][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406051][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.408052][Remove Class] uk.co.jezuk.mango.BinaryPredicates
  - [-0.408052][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.408052][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.408052][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.408052][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.408052][Remove Field] 'pos_' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.408052][Remove Method] '<init>(int,java.lang.Object)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.408052][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.408052][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.408052][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.408052][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.408052][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.408052][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.408052][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.408052][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.408052][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.408052][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.408052][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.408052][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.408052][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.408052][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.408052][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.408052][Remove Method] 'unique(java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.408052][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.408052][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.408052][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.408052][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.408052][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.408052][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.408052][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.408052][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.408052][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.408052][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.408052][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.408052][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.408052][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.408052][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-0.408052][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.408052][Remove Field] 'item' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.408052][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.408052][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.408052][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.408052][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.408052][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.408052][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408052][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.408052][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.408052][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.408052][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.408052][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PACKAGE'
  - [-0.408052][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.408052][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.408052][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.408052][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.408052][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.408052][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.408052][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.408052][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.408052][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.408052][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.408052][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.408052][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.408052][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.408052][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.408052][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.408052][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.408052][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.408052][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.408052][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.408052][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.408052][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.408052][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.408052][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.408052][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.408052][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.408052][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.408052][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.408052][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.408052][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.408052][Remove Method] 'fn()' of type 'uk.co.jezuk.mango.Generator'
  - [-0.408052][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.408052][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.408052][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.408052][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.408052][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.408052][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.408052][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.408052][Remove Field] 'useCount' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.408052][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.409708][Remove Class] uk.co.jezuk.mango.algorithms.CountIf
  - [-0.409708][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.409708][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.409708][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.409708][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.409708][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.409708][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.409708][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.409708][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.409708][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.409708][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.409708][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.409708][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.409708][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.409708][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PRIVATE'
  - [-0.409708][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.409708][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.409708][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.409708][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.409708][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.407733][Remove Class] uk.co.jezuk.mango.binarypredicates.GreaterThan
  - [-0.407733][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.407733][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.407733][Decrease Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.407733][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.407733][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.407733][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.407733][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.407733][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.407733][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.407733][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.407733][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.407733][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.407733][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407733][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.407733][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.407733][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.407733][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.407733][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.407733][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.407733][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.407733][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407733][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.407733][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PRIVATE'
  - [-0.407733][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.407733][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.407733][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.407733][Remove Method] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.407733][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.407733][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.407733][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.407733][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407733][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407733][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.407733][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.407733][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.407733][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407733][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.407733][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.407733][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.407733][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407733][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.407733][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407733][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.407733][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.407733][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.407733][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.407733][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.407733][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.407733][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.407733][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.407733][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407733][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.407733][Remove Method] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.407733][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.407733][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407733][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.407733][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.407733][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.407733][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.407733][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.407733][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.407733][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.407733][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.407733][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.405715][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.405715][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.405715][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.405715][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.405715][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405715][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.405715][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.405715][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.405715][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.405715][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.405715][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.405715][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.405715][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.405715][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.405715][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.405715][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405715][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.405715][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.405715][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.405715][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.405715][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.405715][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.405715][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.405715][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405715][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.405715][Remove Class] uk.co.jezuk.mango.binarypredicates.Or
  - [-0.405715][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.405715][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.405715][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.405715][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405715][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.405715][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.405715][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.405715][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.405715][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.405715][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405715][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405715][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405715][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.405715][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405715][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.405715][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405715][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.405715][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405715][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405715][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.405715][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405715][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.405715][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.405715][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.405715][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.405715][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.405715][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'createuk.co.jezuk.mango.functions.Constant()' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.405715][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.405715][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.405715][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.405715][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.405715][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.405715][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.405715][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.405715][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.405715][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.407813][Remove Class] uk.co.jezuk.mango.Bind
  - [-0.407813][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.407813][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.407813][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.407813][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.407813][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.407813][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.407813][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.407813][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.407813][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.407813][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.407813][Remove Method] 'createuk.co.jezuk.mango.functions.Constant()' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.407813][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.407813][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.407813][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.407813][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.407813][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.407813][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.407813][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.407813][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.407813][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PRIVATE'
  - [-0.407813][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.407813][Remove Class] uk.co.jezuk.mango.unarypredicates.Nand
  - [-0.407813][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.407813][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.407813][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.407813][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.407813][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.407813][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.407813][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.407813][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.407813][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.407813][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.407813][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.407813][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407813][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.407813][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.407813][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.407813][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.407813][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407813][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.407813][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.407813][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.407813][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.407813][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.407813][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.407813][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.407813][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.407813][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.407813][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.407813][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.407813][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.407813][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.407813][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.407813][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.407813][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.FindPosition' to 'PUBLIC'
  - [-0.407813][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.407813][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407813][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.407813][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.407813][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.407813][Remove Method] 'remove(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.407813][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.407813][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.407813][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.407813][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.407813][Increase Method Security] 'match(java.util.Comparator,java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.407813][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.407813][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.407813][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.407813][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.407813][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.407813][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.409537][Remove Class] uk.co.jezuk.mango.algorithms.Find
  - [-0.409537][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.409537][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.409537][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.409537][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.409537][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PRIVATE'
  - [-0.409537][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.409537][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.409537][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.409537][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.409537][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThan()' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.409537][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.409537][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.409537][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.409537][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.409537][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.409537][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.409537][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.409537][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.409537][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.409537][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.409537][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.409537][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.409537][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.409537][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.409537][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.409537][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.409537][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.409537][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.409537][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.409537][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.409537][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.409537][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.409537][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.409537][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.409537][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.409537][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.409537][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.409537][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.409537][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.409537][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.409537][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.409537][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.409537][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.409537][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.409537][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.409537][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.409537][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.409537][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.409537][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.409537][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.409537][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.409537][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.409537][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.409537][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.409537][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.409537][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.409537][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.409537][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.409537][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.409537][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.409537][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.409537][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.409537][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.409537][Increase Method Security] 'execute(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.algorithms.Unique' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.409537][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.409537][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.409537][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.409537][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.409537][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.409537][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.409537][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.409537][Remove Class] uk.co.jezuk.mango.unarypredicates.Xor
  - [-0.409537][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.409537][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.409537][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.409537][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.409537][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.409537][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.409537][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.411301][Remove Class] uk.co.jezuk.mango.algorithms.Intersection

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.45 seconds
  * Quality Gain: 0.004058
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.406686
  * Possible Actions: 223
  * Applied Actions: 4221
  * Num Types: 84
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4524
    * abstractness: 0.0300
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove(java.lang.Object)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Decrease Method Security] 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.Any(java.util.Iterator) into uk.co.jezuk.mango.Predicates.Any(java.util.Collection)
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'count(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.All(java.util.Iterator) into uk.co.jezuk.mango.Predicates.All(java.lang.Object[])
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'fn(java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Remove Method] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Instantiate Method] Move static method 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.404479][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.404479][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404479][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Any()' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Decrease Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.404479][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404479][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.404479][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PRIVATE'
  - [-0.404479][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404479][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Any()' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.404479][Decrease Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.404479][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.404479][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.404479][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404479][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.404479][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.404479][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404479][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404479][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404479][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Remove Method] '<init>(java.util.Iterator)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404479][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.404479][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.unarypredicates.Any
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404479][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404479][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404479][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.404479][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.unarypredicates.Any
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404479][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404479][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.404479][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Remove Method] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404479][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404479][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Remove Method] 'remove(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.404479][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Remove Method] 'remove(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.404479][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402561][Remove Class] uk.co.jezuk.mango.unarypredicates.Any
  - [-0.402561][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402561][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402561][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402561][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402561][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of type 'uk.co.jezuk.mango.unarypredicates.OneOf'
  - [-0.402561][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402561][Remove Method] 'wrap(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402561][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402561][Remove Method] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402561][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402561][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402561][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402561][Remove Method] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402561][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402561][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402561][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402561][Remove Method] 'findPosition(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402561][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402561][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402561][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402561][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402561][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.402561][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402561][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402561][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.402561][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402561][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402561][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402561][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402561][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402561][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402561][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402561][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402561][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402561][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402561][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402561][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402561][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402561][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402561][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402561][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402561][Remove Method] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402561][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402561][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.402561][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402561][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.402561][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402561][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.402561][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402561][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.402561][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402561][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402561][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402561][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.402561][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402561][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402561][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402561][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402561][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402561][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.402561][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402561][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402561][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402561][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402561][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402561][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402561][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402561][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402561][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402561][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402561][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402561][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.Bind
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory()' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.404466][Remove Method] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404466][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404466][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PRIVATE'
  - [-0.404466][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.404466][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404466][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.404466][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404466][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404466][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404466][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404466][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404466][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404466][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404466][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PUBLIC'
  - [-0.404466][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404466][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404466][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404466][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404466][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404466][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404466][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404466][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.Generators
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.collections.MapFactory()' of type 'uk.co.jezuk.mango.collections.MapFactory'
  - [-0.406432][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.406432][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406432][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.406432][Remove Method] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.406432][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Remove Method] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406432][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.406432][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.406432][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406432][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PUBLIC'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.406432][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.406432][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Remove Method] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.406432][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.406432][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406432][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.406432][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.406432][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.406432][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406432][Remove Method] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406432][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.406432][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.406432][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.406432][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.406432][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.406432][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.All()' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.406432][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.406432][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Xnor
  - [-0.406432][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Xnor
  - [-0.406432][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406432][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.406432][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.406432][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.406432][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.406432][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Remove Method] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.406432][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.406432][Remove Method] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406432][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.406432][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406432][Remove Method] '<init>(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.406432][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406432][Remove Field] 'preds_' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.406432][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.406432][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.406432][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.406432][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.406432][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.406432][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Not
  - [-0.406432][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.406432][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.406432][Decrease Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406432][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406432][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.406432][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.406432][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.406432][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.406432][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.406432][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.406432][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PRIVATE'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Not
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.406432][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.406432][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.406432][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406432][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.406432][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.406432][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.406432][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.406432][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.406432][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406432][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.406432][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.406432][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.406432][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.406432][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406432][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.406432][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.406432][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.406432][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.406432][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.406432][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.406432][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.406432][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.406432][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.406432][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PUBLIC'
  - [-0.406432][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406432][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.406432][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406432][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.406432][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.406432][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.406432][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.406432][Remove Field] 'p_' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.404465][Remove Class] uk.co.jezuk.mango.unarypredicates.And
  - [-0.404465][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404465][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.404465][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404465][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404465][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404465][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404465][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.404465][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404465][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404465][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404465][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.algorithms.FindPositionIf
  - [-0.406081][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.406081][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406081][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.406081][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.406081][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.406081][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.406081][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.406081][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.406081][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.406081][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.406081][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.406081][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.406081][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.406081][Remove Field] 'useCount_' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.406081][Decrease Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.406081][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.406081][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.406081][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.406081][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.406081][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.406081][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.406081][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Remove Class] uk.co.jezuk.mango.unarypredicates.All
  - [-0.404067][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404067][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404067][Remove Method] 'createuk.co.jezuk.mango.iterators.StringIterator()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.404067][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404067][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404067][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404067][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404067][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404067][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.404067][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404067][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.404067][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404067][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404067][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404067][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.404067][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404067][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.404067][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.404067][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404067][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404067][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.unarypredicates.Not
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402007][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402007][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402007][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402007][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402007][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402007][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402007][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402007][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402007][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402007][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403650][Remove Class] uk.co.jezuk.mango.iterators.ZipIterator
  - [-0.403650][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.403650][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.403650][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.403650][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403650][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.403650][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.403650][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.403650][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.403650][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.403650][Decrease Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403650][Remove Method] 'execute(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.403650][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.403650][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403650][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.401538][Remove Class] uk.co.jezuk.mango.unarypredicates.Xnor
  - [-0.401538][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.401538][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401538][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.401538][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.401538][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.401538][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.401538][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.401538][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.401538][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.401538][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401538][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.401538][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.401538][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.401538][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.401538][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.401538][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.401538][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.401538][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.401538][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.401538][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.401538][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.401538][Remove Method] 'createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.401538][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.401538][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.401538][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.401538][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.401538][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.401538][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.401538][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.401538][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.401538][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.401538][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.401538][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.401538][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.401538][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401538][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.401538][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.401538][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.401538][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.401538][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401538][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.401538][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.401538][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.401538][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.401538][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.401538][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.401538][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.401538][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.401538][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.401538][Remove Field] 'transform_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.401538][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.401538][Remove Class] uk.co.jezuk.mango.binarypredicates.And
  - [-0.401538][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.401538][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.401538][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.401538][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.401538][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.401538][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.401538][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.401538][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.401538][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.401538][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.401538][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.401538][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.401538][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.401538][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.401538][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.401538][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.401538][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.401538][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.401538][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.401538][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.401538][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.403214][Remove Class] uk.co.jezuk.mango.algorithms.Count
  - [-0.403214][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.403214][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.403214][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.403214][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.403214][Decrease Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403214][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.403214][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403214][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.403214][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.403214][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.403214][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.403214][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator
  - [-0.403214][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.403214][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.403214][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PACKAGE'
  - [-0.403214][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.403214][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.403214][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.403214][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.403214][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.403214][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.403214][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.403214][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.403214][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.403214][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.403214][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.403214][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.403214][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.403214][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.403214][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.403214][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.403214][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.403214][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.403214][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403214][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.403214][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.403214][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.403214][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.403214][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.403214][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.403214][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.403214][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403214][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.403214][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.403214][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.403214][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.403214][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403214][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.403214][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.403214][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.403214][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.403214][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.403214][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403214][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.403214][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404929][Remove Class] uk.co.jezuk.mango.algorithms.ForEach
  - [-0.404929][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404929][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404929][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404929][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404929][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404929][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404929][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404929][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404929][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404929][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.404929][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404929][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404929][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.404929][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404929][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404929][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.404929][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404929][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404929][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.404929][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404929][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404929][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.404929][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.404929][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.404929][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404929][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404929][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.404929][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404929][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404929][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404929][Decrease Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.404929][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.404929][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Remove Method] 'unique(java.util.List,int,int)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404929][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIf' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PRIVATE'
  - [-0.404929][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404929][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404929][Remove Method] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.404929][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404929][Remove Field] 'iter_' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.404929][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404929][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404929][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404929][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404929][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.404929][Decrease Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404929][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.RemoveIf' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404929][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404929][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404929][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404929][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.404929][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404929][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404929][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404929][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404929][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404929][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404929][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404929][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.406686][Remove Class] uk.co.jezuk.mango.iterators.TransformIterator

====== Run Result ======

* Name: Mango|Abstraction|RS|I5000
  * Run Info: Random Search. Iterations: 5000.
  * Time Taken: 7.17 seconds
  * Quality Gain: 0.003162
  * Metric Mode: Aggregate
  * Expanded Designs: 0

* Initial Design:
  * Score: -0.402628
  * Possible Actions: 598
  * Applied Actions: 0
  * Num Types: 97
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4433
    * abstractness: 0.0268
    * numInterf: 0.7500

* Final Design:
  * Score: -0.405790
  * Possible Actions: 226
  * Applied Actions: 4221
  * Num Types: 85
  * Num Packages: 8

  * Metric Summary:
    * iFImpl: 0.4471
    * abstractness: 0.0326
    * numInterf: 0.7500

* Applied Actions:
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.True
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'findNext()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.And' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to static 
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>()
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.True
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Identity.<init>(java.lang.String,int) into uk.co.jezuk.mango.functions.Identity.<clinit>()
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Or' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIfNot'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.SymmetricDifference'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator)
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIf'
  - [-0.402628][Decrease Method Security] 'wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.And.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.And.createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.NotNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.NotNull.<clinit>()
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object)
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.checkConstraints(int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.access$000(int,int)
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.Generator' to static 
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object)
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.False.<clinit>()
  - [-0.402628][Freeze Method] Convert 'putAll(java.util.Map)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.RemoveIf'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.Helpers.<init>()
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[])
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory.<init>()
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Second(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.OneOf.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.OneOf.createuk.co.jezuk.mango.unarypredicates.OneOf()
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function)
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.binarypredicates.False
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.Helpers()' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$2' to static 
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object)
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThanEquals.createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer)
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Not' to static 
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>()
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.False
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'keySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.generators.NullSequence
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'isEmpty()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xor.createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.NotNull
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Functions$1' to static 
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to static 
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Decrease Method Security] 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to static 
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[])
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$2)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to static 
  - [-0.402628][Increase Method Security] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to static 
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Identity()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.functions.Constant' to static 
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$1' to static 
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Identity()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to static 
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator)
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Remove Method] 'Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.functions.Identity' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindPosition'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Any.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.Any.createuk.co.jezuk.mango.unarypredicates.Any()
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to static 
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.IsNull.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.IsNull.<clinit>()
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to static 
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.CountIf'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.iterators.TeeIterator'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TransformIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Function) into uk.co.jezuk.mango.iterators.TransformIterator.createuk.co.jezuk.mango.iterators.TransformIterator(uk.co.jezuk.mango.Function)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Any' to static 
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'get(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Transform'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$1' to static 
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Count'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Generators.<init>()
  - [-0.402628][Freeze Method] Convert 'remove(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int)
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>()
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$UnaryMethodNamed) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.test(java.lang.Object)
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>()
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Unique'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(java.lang.Integer) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to static 
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Function' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String)
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.functions.Constant.<init>(java.lang.Object) into uk.co.jezuk.mango.functions.Constant.createuk.co.jezuk.mango.functions.Constant()
  - [-0.402628][Increase Method Security] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to static 
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'NullSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.NullIterator.<init>(java.lang.String,int) into uk.co.jezuk.mango.iterators.NullIterator.<clinit>()
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IsNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Freeze Method] Convert 'containsValue(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$UnaryMethodNamed.<init>(java.lang.String,java.lang.Class) into uk.co.jezuk.mango.Adapt$UnaryMethodNamed.createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.NotEqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.NotEqualTo.createuk.co.jezuk.mango.binarypredicates.NotEqualTo()
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Find'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Remove Method] 'findIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.NullIterator
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'size()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$4' to static 
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Remove Method] 'Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.Or' to static 
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.generators.IntegerSequence.<init>(int)
  - [-0.402628][Increase Method Security] 'NullIterator()' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Remove Method] 'forEach(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.NullSequence.<init>(java.lang.String,int) into uk.co.jezuk.mango.generators.NullSequence.<clinit>()
  - [-0.402628][Remove Method] 'get(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to static 
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Partition'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThan' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Remove Method] 'findIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.<init>() into uk.co.jezuk.mango.iterators.Helpers.createuk.co.jezuk.mango.iterators.Helpers()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.False.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.False.<clinit>()
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.ConstantSequence.<init>(java.lang.Object) into uk.co.jezuk.mango.generators.ConstantSequence.createuk.co.jezuk.mango.generators.ConstantSequence()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String)
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ZipIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ZipIterator.createuk.co.jezuk.mango.iterators.ZipIterator()
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.Helpers()' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'entrySet()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThanEquals.<init>() into uk.co.jezuk.mango.binarypredicates.LessThanEquals.createuk.co.jezuk.mango.binarypredicates.LessThanEquals()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Or.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Or.createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.next(uk.co.jezuk.mango.iterators.StringIterator) into uk.co.jezuk.mango.iterators.StringIterator.next()
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.reflect.Method)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.StringIterator.<init>(java.lang.String) into uk.co.jezuk.mango.iterators.StringIterator.createuk.co.jezuk.mango.iterators.StringIterator()
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThan'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Not)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.True'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.binarypredicates.True.<clinit>()
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Generators.<init>() into uk.co.jezuk.mango.Generators.createuk.co.jezuk.mango.Generators()
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'NullIterator()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to static 
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Remove Method] 'find(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'unique(java.util.List,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to static 
  - [-0.402628][Increase Method Security] 'toIterator(java.lang.Object)' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'has(int)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to static 
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'countIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.False'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.functions.Identity
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'NullSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$3' to static 
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to static 
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.FindIfNot'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.And.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.And.createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Bind$3' to static 
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to static 
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.Helpers()' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SelectingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SelectingIterator.createuk.co.jezuk.mango.iterators.SelectingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'count(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PRIVATE'
  - [-0.402628][Remove Method] 'intersection(java.util.Collection,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(uk.co.jezuk.mango.generators.ConstantSequence)' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Freeze Method] Convert 'containsKey(java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPositionIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.Helpers()' of type 'uk.co.jezuk.mango.iterators.Helpers'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'count(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.True.<init>(java.lang.String,int) into uk.co.jezuk.mango.unarypredicates.True.<clinit>()
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Freeze Method] Convert 'fn(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$2' to static 
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'put(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.ChainIterator)' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.fn(uk.co.jezuk.mango.generators.IntegerSequence) into uk.co.jezuk.mango.generators.IntegerSequence.fn()
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Field] 'val$p' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(java.lang.Integer)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Predicate' to static 
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.Helpers.toIterator(java.lang.Object) into uk.co.jezuk.mango.iterators.Helpers.toIterators(java.lang.Object[])
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Remove'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[])
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'First(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$1)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.All' to static 
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ArrayIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ArrayIterator.createuk.co.jezuk.mango.iterators.ArrayIterator()
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Remove Method] 'GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Or)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.TransformIterator' to static 
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'find(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.<init>(java.util.Iterator,int) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IntegerSequence(java.lang.Integer)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.Functions.<init>()
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'GreaterThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt.wrapArgumentMethod(java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.ArgumentMethod(java.lang.String,java.lang.Class)
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to static 
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>() into uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.GeneratorIterator.<init>(uk.co.jezuk.mango.Generator) into uk.co.jezuk.mango.iterators.GeneratorIterator.createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SingletonIterator.<init>(java.lang.Object) into uk.co.jezuk.mango.iterators.SingletonIterator.createuk.co.jezuk.mango.iterators.SingletonIterator()
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to static 
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to static 
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence()' of 'uk.co.jezuk.mango.Generators' to 'PRIVATE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$1)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.402628][Increase Method Security] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.And' to static 
  - [-0.402628][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to static 
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xnor)' of type 'uk.co.jezuk.mango.unarypredicates.Xnor'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to static 
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ChainIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'NotEqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Remove Method] 'SkippingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.MapFactory.<init>() into uk.co.jezuk.mango.collections.MapFactory.createuk.co.jezuk.mango.collections.MapFactory()
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.SkippingIterator.<init>(java.util.Iterator,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.iterators.SkippingIterator.createuk.co.jezuk.mango.iterators.SkippingIterator(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'next(uk.co.jezuk.mango.iterators.GeneratorIterator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Increase Method Security] 'remove(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'All(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.functions.Identity' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Remove Method] 'ChainIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Or.<init>(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Or.createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Method Security] 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'ConstantSequence(java.lang.Object)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'False()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator)
  - [-0.402628][Remove Method] 'hasNext()' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'GreaterThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.402628][Remove Method] 'ConstantSequence(java.lang.Object)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.functions.Identity'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Remove Method] 'unique(java.util.Iterator,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Remove Method] 'LessThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to static 
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int)
  - [-0.402628][Increase Method Security] 'All(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Method(java.lang.Class,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'hasNext()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to static 
  - [-0.402628][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'IsNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Remove Method] 'NotEqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Not.<init>(uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Not.createuk.co.jezuk.mango.unarypredicates.Not(uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'execute_null(java.util.Iterator)' of 'uk.co.jezuk.mango.algorithms.Count' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of 'uk.co.jezuk.mango.Bind$3' to 'PRIVATE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'find(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.binarypredicates.Not.<init>(uk.co.jezuk.mango.BinaryPredicate) into uk.co.jezuk.mango.binarypredicates.Not.createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nor.createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'NotNull()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper.createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object)' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.collections.ListFactory.<init>()
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.All.<init>(java.util.Iterator) into uk.co.jezuk.mango.unarypredicates.All.createuk.co.jezuk.mango.unarypredicates.All()
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.All)' of type 'uk.co.jezuk.mango.unarypredicates.All'
  - [-0.402628][Remove Method] 'All(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.402628][Remove Method] 'True()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Inline Method] uk.co.jezuk.mango.algorithms.Count.execute_null(java.util.Iterator) into uk.co.jezuk.mango.algorithms.Count.execute(java.util.Iterator,java.lang.Object)
  - [-0.402628][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'forEach(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to static 
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'IntegerSequence()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.402628][Remove Method] 'test(java.lang.Object)' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.402628][Remove Method] 'find(java.util.Collection,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'remove(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ChainIterator.<init>(java.lang.Object[]) into uk.co.jezuk.mango.iterators.ChainIterator.createuk.co.jezuk.mango.iterators.ChainIterator()
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'test(java.lang.Object)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to static 
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.unarypredicates.IsNull
  - [-0.402628][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.List,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.402628][Remove Method] 'NotNull()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'SelectingIterator(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Collections'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'countIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ZipIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.402628][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.Or)' of type 'uk.co.jezuk.mango.binarypredicates.Or'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.False' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Bind$3)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Remove Method] 'find(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ZipIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'ArgumentMethod(java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Remove Method] 'False()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Functions.<init>() into uk.co.jezuk.mango.Functions.createuk.co.jezuk.mango.Functions()
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object)
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.False'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections$MapBuilder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPosition(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'values()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.NotNull' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.<init>(java.util.List,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator$listIterator.createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()
  - [-0.402628][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed'
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Remove Method] 'putAll(java.util.Map,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PRIVATE'
  - [-0.402628][Freeze Method] Convert 'remove()' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to static 
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findPosition(java.util.List,int,int,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402628][Remove Method] 'findPositionIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$2)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Xnor.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Xnor.createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Decrease Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.ConstantSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.StringIterator)' of type 'uk.co.jezuk.mango.iterators.StringIterator'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.And)' of type 'uk.co.jezuk.mango.unarypredicates.And'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Remove Field] 'next_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'GreaterThanEquals()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Remove Method] 'map(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.Collections$MapBuilder'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.NotNull'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.402628][Remove Method] 'next()' of type 'uk.co.jezuk.mango.iterators.BoundedIterator'
  - [-0.402628][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.collections.ListFactory.<init>() into uk.co.jezuk.mango.collections.ListFactory.createuk.co.jezuk.mango.collections.ListFactory()
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.generators.ConstantSequence()' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Method] 'symmetricDifference(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Remove Method] 'ArgumentMethod(java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.ConstantSequence'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.402628][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'intersection(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.reflect.Method,uk.co.jezuk.mango.Adapt$NullaryMethodNamed) into uk.co.jezuk.mango.Adapt$NullaryMethodNamed.test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)
  - [-0.402628][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Freeze Method] Convert 'fn()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to static 
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Any)' of type 'uk.co.jezuk.mango.unarypredicates.Any'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Remove Method] 'findIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.<init>(int,java.lang.Object) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item.createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.NotEqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.NotEqualTo'
  - [-0.402628][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.402628][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Remove Method] 'intersection(java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PUBLIC'
  - [-0.402628][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$Buffer.has(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$Buffer.get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402628][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Remove Method] 'createuk.co.jezuk.mango.iterators.ChainIterator()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.402628][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Remove Method] 'GreaterThanEquals()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.402628][Remove Method] 'countIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.unarypredicates.Nand.<init>(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate) into uk.co.jezuk.mango.unarypredicates.Nand.createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'lastClass_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Freeze Method] Convert 'clear()' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'list(java.lang.Object[])' of 'uk.co.jezuk.mango.collections.ListFactory' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.402628][Remove Field] 'lastClass_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>()' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'valid_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'ArrayIterator(java.lang.Object[])' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Remove Method] 'containsKey(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Remove Method] 'ArrayIterator(java.lang.Object[])' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Xor)' of type 'uk.co.jezuk.mango.unarypredicates.Xor'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>()
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Field] 'valid_' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'LessThan()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Remove Method] 'list(java.lang.Object[])' of type 'uk.co.jezuk.mango.collections.ListFactory'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.402628][Remove Method] '<init>(java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'verifyReturnType(java.lang.reflect.Method,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Remove Method] 'fn(uk.co.jezuk.mango.generators.IntegerSequence)' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.402628][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Remove Field] 'val$method' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Freeze Method] Convert 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to static 
  - [-0.402628][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.BinaryFunctions' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.402628][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402628][Remove Method] 'remove(uk.co.jezuk.mango.iterators.SelectingIterator)' of type 'uk.co.jezuk.mango.iterators.SelectingIterator'
  - [-0.402628][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.402628][Introduce Factory] for uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List)
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.Adapt.verifyReturnType(java.lang.reflect.Method,java.lang.Class) into uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)
  - [-0.402628][Increase Method Security] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.iterators.NullIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Inline Method] uk.co.jezuk.mango.iterators.ReverseIterator.<init>(java.util.List) into uk.co.jezuk.mango.iterators.ReverseIterator.createuk.co.jezuk.mango.iterators.ReverseIterator()
  - [-0.402628][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402628][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.402628][Remove Method] 'LessThan()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402628][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Remove Method] 'values()' of type 'uk.co.jezuk.mango.iterators.NullIterator'
  - [-0.402628][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402628][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.402628][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402628][Decrease Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.402628][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PROTECTED'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402628][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.402628][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.402628][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.402628][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402628][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.402628][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402628][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.402628][Remove Method] 'Compose(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions'
  - [-0.402628][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402628][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402628][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.BinaryFunctions
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.404479][Remove Method] 'Second(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Remove Method] 'transform(java.util.List,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Remove Method] 'remove(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'True()' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Functions$1)' of type 'uk.co.jezuk.mango.Functions$1'
  - [-0.404479][Decrease Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'OneOf(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.404479][Remove Method] 'OneOf(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404479][Remove Method] 'remove(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.404479][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of 'uk.co.jezuk.mango.Bind$4' to 'PRIVATE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'partition(java.util.Collection,uk.co.jezuk.mango.Predicate,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of 'uk.co.jezuk.mango.Adapt$3' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.Adapt$3)' of type 'uk.co.jezuk.mango.Adapt$3'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.LessThanEquals' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'OneOf(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.404479][Remove Method] 'findPositionIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'ArgumentMethod(java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Adapt$NullaryMethodNamed)' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404479][Remove Method] 'Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.SingletonIterator)' of type 'uk.co.jezuk.mango.iterators.SingletonIterator'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Remove Method] 'fn(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.BinaryFunctions$1)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.404479][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404479][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.Bind$4)' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$g2' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404479][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>() into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Decrease Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.404479][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.LessThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.LessThanEquals'
  - [-0.404479][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.404479][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404479][Remove Method] 'countIfNot(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404479][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.404479][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404479][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Remove Field] 'val$g2' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.404479][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404479][Increase Method Security] 'Any(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404479][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.404479][Inline Method] uk.co.jezuk.mango.Predicates.OneOf(java.util.Iterator) into uk.co.jezuk.mango.Predicates.OneOf(java.util.Collection)
  - [-0.404479][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404479][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.404479][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404479][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$4' to 'PACKAGE'
  - [-0.404479][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.404479][Decrease Method Security] 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Method(java.lang.Class,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.404479][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.404479][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'IntegerSequence(int)' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.404479][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.404479][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.404479][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404479][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.402561][Remove Class] uk.co.jezuk.mango.generators.ConstantSequence
  - [-0.402561][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402561][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402561][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.402561][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.402561][Remove Method] 'fn(java.lang.Object,uk.co.jezuk.mango.functions.Constant)' of type 'uk.co.jezuk.mango.functions.Constant'
  - [-0.402561][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402561][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402561][Remove Method] 'Any(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402561][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.EqualTo.<init>()
  - [-0.402561][Remove Field] 'test_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.402561][Remove Method] 'True()' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402561][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.binarypredicates.GreaterThan.<init>() into uk.co.jezuk.mango.binarypredicates.GreaterThan.createuk.co.jezuk.mango.binarypredicates.GreaterThan()
  - [-0.402561][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.402561][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.402561][Increase Method Security] 'createuk.co.jezuk.mango.Functions()' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.402561][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402561][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.402561][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.402561][Inline Method] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.<init>(uk.co.jezuk.mango.iterators.TeeIterator$Buffer) into uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator.createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)
  - [-0.402561][Freeze Method] Convert 'next()' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to static 
  - [-0.402561][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.402561][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402561][Remove Method] 'values()' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.402561][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.400603][Remove Class] uk.co.jezuk.mango.binarypredicates.LessThanEquals
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400603][Remove Method] 'Method(java.lang.Class,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400603][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.TransformIterator)' of type 'uk.co.jezuk.mango.iterators.TransformIterator'
  - [-0.400603][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400603][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ArrayIterator)' of type 'uk.co.jezuk.mango.iterators.ArrayIterator'
  - [-0.400603][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400603][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.400603][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.400603][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400603][Remove Method] 'Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.400603][Introduce Factory] for uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.400603][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'count(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'val$g1' of 'uk.co.jezuk.mango.BinaryFunctions$1' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400603][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.400603][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'SingletonIterator(java.lang.Object)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.400603][Remove Method] 'values()' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.400603][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400603][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.400603][Remove Field] 'val$g1' of type 'uk.co.jezuk.mango.BinaryFunctions$1'
  - [-0.400603][Inline Method] uk.co.jezuk.mango.collections.MapFactory$Builder.<init>(uk.co.jezuk.mango.collections.MapFactory$1) into uk.co.jezuk.mango.collections.MapFactory$Builder.createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)
  - [-0.400603][Increase Method Security] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400603][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.400603][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.400603][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.400603][Remove Method] 'IntegerSequence(int)' of type 'uk.co.jezuk.mango.Generators'
  - [-0.400603][Increase Method Security] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.400603][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThan' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.400603][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400603][Remove Method] 'createuk.co.jezuk.mango.Functions()' of type 'uk.co.jezuk.mango.Functions'
  - [-0.400603][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400603][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$listIterator)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator'
  - [-0.400603][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.400603][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.400603][Remove Method] 'createuk.co.jezuk.mango.Adapt$NullaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.400603][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Remove Method] 'findPositionIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400603][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400603][Remove Method] 'intersection(java.util.Iterator,java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400603][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.400603][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400603][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThan()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThan'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400603][Remove Method] 'SingletonIterator(java.lang.Object)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400603][Remove Method] 'ArgumentMethod(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.400603][Decrease Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400603][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400603][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.400603][Remove Method] 'count(java.util.Iterator,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400603][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400603][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.400603][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400603][Remove Method] 'keySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.400603][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400603][Inline Method] uk.co.jezuk.mango.binarypredicates.EqualTo.<init>() into uk.co.jezuk.mango.binarypredicates.EqualTo.createuk.co.jezuk.mango.binarypredicates.EqualTo()
  - [-0.400603][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.400603][Inline Method] uk.co.jezuk.mango.generators.IntegerSequence.<init>(int) into uk.co.jezuk.mango.generators.IntegerSequence.createuk.co.jezuk.mango.generators.IntegerSequence()
  - [-0.400603][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.400603][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.400603][Inline Method] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.<init>(java.lang.String) into uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed.createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()
  - [-0.400603][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400603][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.400603][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400603][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.400603][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.400603][Remove Method] '<init>(uk.co.jezuk.mango.BinaryFunction,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.400603][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400603][Remove Method] 'values()' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.400603][Decrease Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.Generators()' of 'uk.co.jezuk.mango.Generators' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.400603][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PRIVATE'
  - [-0.400603][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.400603][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'Any(java.lang.Object[])' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400603][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.400603][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.400603][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.400603][Increase Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400603][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.400603][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PUBLIC'
  - [-0.400603][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400603][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400603][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.400603][Remove Method] 'createuk.co.jezuk.mango.Generators()' of type 'uk.co.jezuk.mango.Generators'
  - [-0.400603][Increase Method Security] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400603][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.402503][Remove Class] uk.co.jezuk.mango.Generators
  - [-0.402503][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402503][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402503][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402503][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402503][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402503][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.402503][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.400497][Remove Class] uk.co.jezuk.mango.binarypredicates.GreaterThan
  - [-0.400497][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.400497][Increase Method Security] 'execute(java.util.Iterator,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400497][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Remove Method] 'Any(java.lang.Object[])' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.400497][Remove Method] 'next(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.400497][Remove Method] '<init>(java.lang.String)' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.400497][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400497][Inline Method] uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Collection,java.util.Collection) into uk.co.jezuk.mango.algorithms.Intersection.execute(java.util.Iterator,java.util.Iterator,java.util.Collection)
  - [-0.400497][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.unarypredicates.IsNull' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400497][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.400497][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$4'
  - [-0.400497][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400497][Remove Method] 'Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.400497][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.400497][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.unarypredicates.IsNull'
  - [-0.400497][Decrease Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$1' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.400497][Decrease Method Security] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.binarypredicates.True' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'Method(java.lang.Object,java.lang.String)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.400497][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.GreaterThanEquals()' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.400497][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.binarypredicates.True'
  - [-0.400497][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.400497][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.400497][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PUBLIC'
  - [-0.400497][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Not)' of type 'uk.co.jezuk.mango.unarypredicates.Not'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.400497][Move Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.400497][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.400497][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'All(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400497][Remove Method] 'And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.400497][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.400497][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.400497][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Intersection' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'valueOf(java.lang.String)' of 'uk.co.jezuk.mango.generators.NullSequence' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400497][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.400497][Remove Method] 'test(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.binarypredicates.And)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.400497][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400497][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.400497][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'Method(java.lang.Object,java.lang.String)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.400497][Remove Method] 'forEach(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.400497][Inline Method] uk.co.jezuk.mango.Adapt.wrapMethod(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Class,java.lang.Class) into uk.co.jezuk.mango.Adapt.Method(java.lang.Object,java.lang.String,java.lang.Class)
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.400497][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400497][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator'
  - [-0.400497][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.400497][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'forEach(java.util.Collection,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.400497][Instantiate Method] Move static method 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator(uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to its parameter type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PROTECTED'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.400497][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'ReverseIterator(java.util.List)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of 'uk.co.jezuk.mango.Adapt' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.400497][Remove Method] 'ReverseIterator(java.util.List)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.400497][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.400497][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindPositionIf' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.400497][Remove Method] 'valueOf(java.lang.String)' of type 'uk.co.jezuk.mango.generators.NullSequence'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Remove Method] 'symmetricDifference(java.util.Collection,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.400497][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.Not(uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.Not'
  - [-0.400497][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.400497][Remove Method] 'Method(java.lang.Object,java.lang.String,java.lang.Class)' of type 'uk.co.jezuk.mango.Adapt'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Decrease Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.400497][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$NullaryMethodNamed'
  - [-0.400497][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'createuk.co.jezuk.mango.Adapt$UnaryMethodNamed()' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.400497][Remove Method] 'get(int,uk.co.jezuk.mango.iterators.TeeIterator$Buffer)' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer'
  - [-0.400497][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.400497][Remove Class] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Decrease Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.400497][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'count(java.util.Collection,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'StringIterator(java.lang.String)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.400497][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.400497][Decrease Method Security] 'BoundedIterator(java.util.Iterator,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryPredicate' to 'PACKAGE'
  - [-0.400497][Remove Method] '<init>(java.lang.Object,java.lang.reflect.Method)' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.400497][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.400497][Make Class Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$3' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of 'uk.co.jezuk.mango.Bind' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Nor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.400497][Increase Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PRIVATE'
  - [-0.400497][Remove Method] 'count(java.util.Collection,java.lang.Object)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Decrease Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.400497][Remove Method] 'All(java.util.Iterator)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.400497][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.400497][Remove Method] 'First(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind'
  - [-0.400497][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.400497][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.400497][Remove Method] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'OneOf(java.util.Collection)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.algorithms.FindPositionIf'
  - [-0.400497][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryPredicate'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400497][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.And(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.400497][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'containsValue(java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'StringIterator(java.lang.String)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.400497][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'TeeIterator(java.util.Iterator,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Remove Method] 'hasNext(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.400497][Make Class Non-Final] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'fn(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.BinaryFunction' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400497][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400497][Remove Class] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.400497][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400497][Remove Method] 'createuk.co.jezuk.mango.iterators.ZipIterator()' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.400497][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PUBLIC'
  - [-0.400497][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Remove Method] 'countIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Remove Method] 'transform(java.util.Collection,uk.co.jezuk.mango.Function,java.util.Collection)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400497][Remove Method] 'execute(java.util.Iterator,java.util.Iterator,java.util.Collection)' of type 'uk.co.jezuk.mango.algorithms.Intersection'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400497][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nand)' of type 'uk.co.jezuk.mango.unarypredicates.Nand'
  - [-0.400497][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400497][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400497][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.400497][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PACKAGE'
  - [-0.400497][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400497][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400497][Decrease Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PUBLIC'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.400497][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400497][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400497][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400497][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.400497][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400497][Increase Field Security] 'fn_' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.400497][Remove Method] 'remove(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.400497][Remove Method] 'TeeIterator(java.util.Iterator,int)' of type 'uk.co.jezuk.mango.Iterators'
  - [-0.402074][Remove Class] uk.co.jezuk.mango.algorithms.Intersection
  - [-0.402074][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.402074][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402074][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402074][Increase Method Security] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.402074][Increase Method Security] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402074][Increase Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.402074][Decrease Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402074][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Remove Class] uk.co.jezuk.mango.Adapt$NullaryMethodNamed
  - [-0.400400][Increase Field Security] 'obj_' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400400][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400400][Remove Class] uk.co.jezuk.mango.Collections$MapBuilder
  - [-0.400400][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400400][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.400400][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.400400][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.400400][Remove Method] 'isEmpty(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.400400][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400400][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PUBLIC'
  - [-0.400400][Remove Method] 'createuk.co.jezuk.mango.generators.IntegerSequence()' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.400400][Remove Method] 'fn(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.BinaryFunction'
  - [-0.400400][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PRIVATE'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.400400][Remove Class] uk.co.jezuk.mango.generators.IntegerSequence
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.400400][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400400][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PACKAGE'
  - [-0.400400][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.400400][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.400400][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PACKAGE'
  - [-0.400400][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.400400][Remove Field] 'fn_' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PRIVATE'
  - [-0.400400][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.400400][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.400400][Remove Field] 'val$f' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.400400][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PUBLIC'
  - [-0.400400][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400400][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400400][Decrease Method Security] 'symmetricDifference(java.util.Collection,java.util.Collection,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400400][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.400400][Remove Method] 'transform(java.util.Collection,int,int,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400400][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.400400][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.400400][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PRIVATE'
  - [-0.400400][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.400400][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.400400][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.400400][Remove Method] 'createuk.co.jezuk.mango.iterators.GeneratorIterator(uk.co.jezuk.mango.Generator)' of type 'uk.co.jezuk.mango.iterators.GeneratorIterator'
  - [-0.400400][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.400400][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.400400][Increase Field Security] 'name_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PRIVATE'
  - [-0.400400][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.400400][Decrease Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'unique(java.util.Collection,int,int,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400400][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.400400][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.400400][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.400400][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.400400][Remove Method] 'findIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.400400][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.400400][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PUBLIC'
  - [-0.400400][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PROTECTED'
  - [-0.400400][Decrease Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.400400][Increase Method Security] 'unique(java.util.Collection,java.util.Comparator)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.400400][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.400400][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.400400][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.400400][Decrease Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.OneOf)' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.400400][Remove Method] 'remove()' of type 'uk.co.jezuk.mango.iterators.ChainIterator'
  - [-0.400400][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.400400][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.algorithms.FindPositionIf
  - [-0.402007][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.402007][Increase Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.402007][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402007][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PUBLIC'
  - [-0.402007][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ArrayIterator)' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402007][Remove Method] 'next(uk.co.jezuk.mango.iterators.ZipIterator)' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'EqualTo()' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.402007][Remove Method] '<init>(uk.co.jezuk.mango.BinaryPredicate,java.lang.Object)' of type 'uk.co.jezuk.mango.Bind$2'
  - [-0.402007][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402007][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402007][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402007][Introduce Factory] for uk.co.jezuk.mango.binarypredicates.LessThan.<init>()
  - [-0.402007][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402007][Remove Method] 'EqualTo()' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.402007][Remove Method] 'unique(java.util.Collection,int,int,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402007][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.402007][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402007][Make Class Non-Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402007][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.402007][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.402007][Remove Method] 'test(java.lang.Object,uk.co.jezuk.mango.unarypredicates.Nor)' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.402007][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$3' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402007][Decrease Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.402007][Make Class Final] uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed
  - [-0.402007][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.402007][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.402007][Remove Method] 'OneOf(java.util.Collection)' of type 'uk.co.jezuk.mango.Predicates'
  - [-0.402007][Decrease Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PRIVATE'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402007][Remove Method] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item()' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.402007][Remove Method] 'next(uk.co.jezuk.mango.iterators.SkippingIterator)' of type 'uk.co.jezuk.mango.iterators.SkippingIterator'
  - [-0.402007][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Or' to 'PROTECTED'
  - [-0.402007][Remove Field] 'name_' of type 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed'
  - [-0.402007][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402007][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PRIVATE'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$WrapIterator()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.402007][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.402007][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.402007][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.402007][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.Adapt$UnaryMethodNamed
  - [-0.402007][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.402007][Remove Method] 'findIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402007][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.402007][Remove Method] 'createuk.co.jezuk.mango.unarypredicates.Or(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.402007][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$3' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'zip_' of 'uk.co.jezuk.mango.iterators.ZipIterator' to 'PRIVATE'
  - [-0.402007][Increase Method Security] 'unique(java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'findIfNot(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xnor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.402007][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.402007][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.402007][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'fn()' of 'uk.co.jezuk.mango.Generator' to 'PUBLIC'
  - [-0.402007][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.402007][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.BinaryFunction
  - [-0.402007][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.402007][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.binarypredicates.Not' to 'PUBLIC'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.binarypredicates.Not
  - [-0.402007][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402007][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.402007][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.402007][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.402007][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.402007][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.402007][Decrease Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.402007][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.402007][Decrease Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.402007][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.402007][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.402007][Decrease Field Security] 'generator_' of 'uk.co.jezuk.mango.iterators.GeneratorIterator' to 'PUBLIC'
  - [-0.402007][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.binarypredicates.And'
  - [-0.402007][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.402007][Decrease Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.402007][Remove Method] 'countIfNot(java.util.Collection,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.402007][Increase Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.402007][Decrease Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.402007][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.402007][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.402007][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404063][Remove Class] uk.co.jezuk.mango.Bind
  - [-0.404063][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404063][Make Class Non-Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.404063][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Or'
  - [-0.404063][Decrease Method Security] 'removeIf(java.util.Collection,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404063][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404063][Remove Field] 'c_' of type 'uk.co.jezuk.mango.Bind$3'
  - [-0.404063][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404063][Remove Class] uk.co.jezuk.mango.unarypredicates.Nor
  - [-0.404063][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PUBLIC'
  - [-0.404063][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404063][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SelectingIterator' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PRIVATE'
  - [-0.404063][Decrease Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404063][Remove Field] 'zip_' of type 'uk.co.jezuk.mango.iterators.ZipIterator'
  - [-0.404063][Remove Field] 'obj_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.404063][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.404063][Remove Method] 'unique(java.util.Collection,java.util.Comparator)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404063][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'countIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xnor' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PUBLIC'
  - [-0.404063][Decrease Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Remove Method] 'transform(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404063][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404063][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PROTECTED'
  - [-0.404063][Remove Method] 'partition(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of type 'uk.co.jezuk.mango.Algorithms'
  - [-0.404063][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'transform_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PRIVATE'
  - [-0.404063][Increase Field Security] 'val$methodName' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404063][Increase Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.404063][Increase Field Security] 'method_' of 'uk.co.jezuk.mango.Adapt$2' to 'PRIVATE'
  - [-0.404063][Decrease Field Security] 'p_' of 'uk.co.jezuk.mango.unarypredicates.Not' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404063][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404063][Remove Class] uk.co.jezuk.mango.generators.IntegerSequence
  - [-0.404063][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404063][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.404063][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.And' to 'PROTECTED'
  - [-0.404063][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.404063][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator' to 'PRIVATE'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'count(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.StringIterator()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404063][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.Nand(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404063][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.404063][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'next_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404063][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$1' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.404063][Remove Field] 'val$c' of type 'uk.co.jezuk.mango.Bind$1'
  - [-0.404063][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.Xor(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PUBLIC'
  - [-0.404063][Decrease Field Security] 'array_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PROTECTED'
  - [-0.404063][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item
  - [-0.404063][Increase Method Security] 'Constant(java.lang.Object)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'Any(java.util.Iterator)' of 'uk.co.jezuk.mango.Predicates' to 'PUBLIC'
  - [-0.404063][Decrease Method Security] 'unique(java.util.Collection,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.404063][Increase Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PRIVATE'
  - [-0.404063][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PRIVATE'
  - [-0.404063][Make Class Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.404063][Remove Field] 'method_' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.404063][Increase Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.404063][Increase Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404063][Inline Method] uk.co.jezuk.mango.binarypredicates.LessThan.<init>() into uk.co.jezuk.mango.binarypredicates.LessThan.createuk.co.jezuk.mango.binarypredicates.LessThan()
  - [-0.404063][Increase Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PRIVATE'
  - [-0.404063][Decrease Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PUBLIC'
  - [-0.404063][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PUBLIC'
  - [-0.404063][Decrease Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'seed_' of 'uk.co.jezuk.mango.generators.IntegerSequence' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.CountIfNot' to 'PRIVATE'
  - [-0.404063][Decrease Field Security] 's_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'val$obj' of 'uk.co.jezuk.mango.Adapt$1' to 'PRIVATE'
  - [-0.404063][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'backing_' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'val$method' of 'uk.co.jezuk.mango.Adapt$1' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PROTECTED'
  - [-0.404063][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper
  - [-0.404063][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.404063][Remove Field] 'val$obj' of type 'uk.co.jezuk.mango.Adapt$1'
  - [-0.404063][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.404063][Remove Method] 'clear(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.404063][Decrease Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'list_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.All()' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PROTECTED'
  - [-0.404063][Remove Class] uk.co.jezuk.mango.iterators.GeneratorIterator
  - [-0.404063][Increase Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.algorithms.ForEach' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'useCount' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'pred_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.404063][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PRIVATE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PUBLIC'
  - [-0.404063][Decrease Field Security] 'spent_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.404063][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404063][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.Any' to 'PRIVATE'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.binarypredicates.Or(uk.co.jezuk.mango.BinaryPredicate,uk.co.jezuk.mango.BinaryPredicate)' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PUBLIC'
  - [-0.404063][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.404063][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.404063][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PUBLIC'
  - [-0.404063][Increase Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.404063][Increase Method Security] 'createuk.co.jezuk.mango.collections.MapFactory$Builder(uk.co.jezuk.mango.collections.MapFactory$1)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.404063][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PUBLIC'
  - [-0.404063][Increase Field Security] 'item' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.404063][Decrease Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PROTECTED'
  - [-0.404063][Remove Field] 'val$methodName' of type 'uk.co.jezuk.mango.Adapt$2'
  - [-0.404063][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.404063][Remove Class] uk.co.jezuk.mango.binarypredicates.And
  - [-0.405744][Remove Class] uk.co.jezuk.mango.iterators.ZipIterator
  - [-0.405744][Remove Method] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function)' of type 'uk.co.jezuk.mango.algorithms.ForEach'
  - [-0.405744][Increase Method Security] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PACKAGE'
  - [-0.405744][Increase Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'findIfNot(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PRIVATE'
  - [-0.405744][Increase Method Security] 'values()' of 'uk.co.jezuk.mango.unarypredicates.True' to 'PROTECTED'
  - [-0.405744][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Nor' to 'PRIVATE'
  - [-0.405744][Increase Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'symmetricDifference(java.util.Iterator,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405744][Decrease Field Security] 'val$p' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.405744][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.All' to 'PACKAGE'
  - [-0.405744][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator
  - [-0.405744][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PROTECTED'
  - [-0.405744][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.405744][Increase Method Security] 'remove(uk.co.jezuk.mango.iterators.TransformIterator)' of 'uk.co.jezuk.mango.iterators.TransformIterator' to 'PROTECTED'
  - [-0.405744][Increase Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'toIterators(java.lang.Object[])' of 'uk.co.jezuk.mango.iterators.Helpers' to 'PUBLIC'
  - [-0.405744][Increase Field Security] 'index' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PROTECTED'
  - [-0.405744][Increase Field Security] 'current_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.405744][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ReverseIterator()' of 'uk.co.jezuk.mango.iterators.ReverseIterator' to 'PUBLIC'
  - [-0.405744][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.405744][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of 'uk.co.jezuk.mango.binarypredicates.EqualTo' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405744][Increase Field Security] 'argType_' of 'uk.co.jezuk.mango.Adapt$UnaryMethodNamed' to 'PROTECTED'
  - [-0.405744][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PROTECTED'
  - [-0.405744][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.405744][Remove Method] 'createuk.co.jezuk.mango.binarypredicates.EqualTo()' of type 'uk.co.jezuk.mango.binarypredicates.EqualTo'
  - [-0.405744][Remove Field] 'seed_' of type 'uk.co.jezuk.mango.generators.IntegerSequence'
  - [-0.405744][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.405744][Remove Method] 'Constant(java.lang.Object)' of type 'uk.co.jezuk.mango.Functions'
  - [-0.405744][Decrease Field Security] 'chain_' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PROTECTED'
  - [-0.405744][Decrease Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PACKAGE'
  - [-0.405744][Decrease Field Security] 'value_' of 'uk.co.jezuk.mango.functions.Constant' to 'PACKAGE'
  - [-0.405744][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'map(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.405744][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.405744][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.405744][Increase Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.algorithms.FindIf' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.405744][Decrease Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PACKAGE'
  - [-0.405744][Decrease Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PROTECTED'
  - [-0.405744][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PRIVATE'
  - [-0.405744][Increase Field Security] 'val$g' of 'uk.co.jezuk.mango.Functions$1' to 'PRIVATE'
  - [-0.405744][Increase Method Security] 'Not(uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Predicates' to 'PRIVATE'
  - [-0.405744][Increase Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.405744][Decrease Method Security] 'entrySet(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.405744][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'Constant(boolean)' of 'uk.co.jezuk.mango.BinaryPredicates' to 'PRIVATE'
  - [-0.405744][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405744][Remove Method] 'next(uk.co.jezuk.mango.iterators.ReverseIterator)' of type 'uk.co.jezuk.mango.iterators.ReverseIterator'
  - [-0.405744][Increase Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405744][Decrease Method Security] 'remove(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405744][Remove Method] 'test(java.lang.Object,java.lang.Object)' of type 'uk.co.jezuk.mango.binarypredicates.GreaterThanEquals'
  - [-0.405744][Increase Method Security] 'findPosition(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405744][Increase Field Security] 'pos_' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PRIVATE'
  - [-0.405744][Decrease Field Security] 'preds_' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PACKAGE'
  - [-0.405744][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.405744][Decrease Method Security] 'countIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.405744][Increase Field Security] 'end_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PRIVATE'
  - [-0.405744][Make Class Final] uk.co.jezuk.mango.iterators.Helpers
  - [-0.405744][Remove Field] 'p1_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.405744][Decrease Field Security] 'c_' of 'uk.co.jezuk.mango.Bind$1' to 'PUBLIC'
  - [-0.405744][Increase Method Security] 'removeIf(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405744][Increase Method Security] 'wrap(java.util.Iterator,int)' of 'uk.co.jezuk.mango.iterators.TeeIterator' to 'PACKAGE'
  - [-0.405744][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.SingletonIterator()' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PUBLIC'
  - [-0.405744][Decrease Method Security] 'execute(java.util.Iterator,uk.co.jezuk.mango.Function,java.util.Collection)' of 'uk.co.jezuk.mango.algorithms.Transform' to 'PUBLIC'
  - [-0.405744][Increase Field Security] 'p2_' of 'uk.co.jezuk.mango.unarypredicates.Xor' to 'PACKAGE'
  - [-0.405744][Remove Method] 'values(uk.co.jezuk.mango.collections.MapFactory$Builder)' of type 'uk.co.jezuk.mango.collections.MapFactory$Builder'
  - [-0.405744][Increase Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405744][Increase Method Security] 'unique(java.util.Iterator)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.StringIterator' to 'PROTECTED'
  - [-0.405744][Decrease Method Security] 'createuk.co.jezuk.mango.iterators.ArrayIterator()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PUBLIC'
  - [-0.405744][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PROTECTED'
  - [-0.405744][Remove Class] uk.co.jezuk.mango.unarypredicates.Or
  - [-0.405744][Decrease Method Security] 'partition(java.util.Iterator,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.405744][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.405744][Increase Method Security] 'createuk.co.jezuk.mango.iterators.BoundedIterator$listIterator()' of 'uk.co.jezuk.mango.iterators.BoundedIterator$listIterator' to 'PACKAGE'
  - [-0.403626][Remove Class] uk.co.jezuk.mango.generators.IntegerSequence
  - [-0.403626][Increase Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PROTECTED'
  - [-0.403626][Increase Method Security] 'remove()' of 'uk.co.jezuk.mango.iterators.ArrayIterator' to 'PROTECTED'
  - [-0.403626][Remove Field] 'p2_' of type 'uk.co.jezuk.mango.unarypredicates.Nor'
  - [-0.403626][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PACKAGE'
  - [-0.403626][Decrease Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.403626][Decrease Field Security] 'p1_' of 'uk.co.jezuk.mango.unarypredicates.Nand' to 'PUBLIC'
  - [-0.403626][Decrease Field Security] 'iter_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PACKAGE'
  - [-0.403626][Increase Field Security] 'iterator_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PRIVATE'
  - [-0.403626][Decrease Method Security] 'Compose(uk.co.jezuk.mango.Function,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Functions' to 'PACKAGE'
  - [-0.403626][Remove Method] 'next(uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper)' of type 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper'
  - [-0.403626][Increase Field Security] 'val$c' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.403626][Increase Field Security] 'p1_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PRIVATE'
  - [-0.403626][Decrease Method Security] 'put(java.lang.Object,java.lang.Object,uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PUBLIC'
  - [-0.403626][Increase Method Security] 'BoundedIterator(java.util.List,int,int)' of 'uk.co.jezuk.mango.Iterators' to 'PACKAGE'
  - [-0.403626][Increase Field Security] 'useCount_' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.403626][Decrease Method Security] 'removeIf(java.util.Iterator,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PUBLIC'
  - [-0.403626][Increase Method Security] 'partition(java.util.Collection,int,int,uk.co.jezuk.mango.Predicate,java.util.Collection)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.403626][Decrease Method Security] 'test(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.binarypredicates.NotEqualTo' to 'PUBLIC'
  - [-0.403626][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403626][Increase Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PROTECTED'
  - [-0.403626][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.403626][Increase Method Security] 'size(uk.co.jezuk.mango.collections.MapFactory$Builder)' of 'uk.co.jezuk.mango.collections.MapFactory$Builder' to 'PROTECTED'
  - [-0.403626][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.And(uk.co.jezuk.mango.Predicate,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.unarypredicates.And' to 'PROTECTED'
  - [-0.403626][Make Class Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.403626][Increase Method Security] 'findNext(uk.co.jezuk.mango.iterators.SkippingIterator)' of 'uk.co.jezuk.mango.iterators.SkippingIterator' to 'PRIVATE'
  - [-0.403626][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.BoundedIterator$iteratorWrapper' to 'PROTECTED'
  - [-0.403626][Decrease Method Security] 'next(uk.co.jezuk.mango.iterators.SingletonIterator)' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PROTECTED'
  - [-0.403626][Remove Field] 'index' of type 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer$Item'
  - [-0.403626][Increase Method Security] 'removeIf(java.util.List,int,int,uk.co.jezuk.mango.Predicate)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403626][Decrease Method Security] 'unique(java.util.List,int,int)' of 'uk.co.jezuk.mango.Algorithms' to 'PROTECTED'
  - [-0.403626][Decrease Field Security] 'index_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PUBLIC'
  - [-0.403626][Increase Field Security] 'buffer_' of 'uk.co.jezuk.mango.iterators.TeeIterator$WrapIterator' to 'PACKAGE'
  - [-0.403626][Decrease Field Security] 'p2_' of 'uk.co.jezuk.mango.binarypredicates.Or' to 'PROTECTED'
  - [-0.403626][Decrease Field Security] 'val$f' of 'uk.co.jezuk.mango.Functions$1' to 'PACKAGE'
  - [-0.403626][Decrease Method Security] 'map(java.lang.Object,java.lang.Object)' of 'uk.co.jezuk.mango.Collections' to 'PUBLIC'
  - [-0.403626][Increase Method Security] 'remove(java.util.Collection,int,int,java.lang.Object)' of 'uk.co.jezuk.mango.Algorithms' to 'PACKAGE'
  - [-0.403626][Increase Method Security] 'hasNext(uk.co.jezuk.mango.iterators.ChainIterator)' of 'uk.co.jezuk.mango.iterators.ChainIterator' to 'PACKAGE'
  - [-0.403626][Increase Method Security] 'createuk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed()' of 'uk.co.jezuk.mango.Adapt$AnyUnaryMethodNamed' to 'PROTECTED'
  - [-0.403626][Remove Method] 'Constant(boolean)' of type 'uk.co.jezuk.mango.BinaryPredicates'
  - [-0.403626][Increase Field Security] 'object_' of 'uk.co.jezuk.mango.iterators.SingletonIterator' to 'PRIVATE'
  - [-0.403626][Make Class Non-Final] uk.co.jezuk.mango.iterators.TeeIterator$Buffer
  - [-0.403626][Make Class Non-Final] uk.co.jezuk.mango.iterators.BoundedIterator$listIterator
  - [-0.403626][Increase Method Security] 'createuk.co.jezuk.mango.iterators.TeeIterator$Buffer()' of 'uk.co.jezuk.mango.iterators.TeeIterator$Buffer' to 'PROTECTED'
  - [-0.403626][Inline Method] uk.co.jezuk.mango.iterators.BoundedIterator.<init>(java.util.Iterator,int,int) into uk.co.jezuk.mango.iterators.BoundedIterator.createuk.co.jezuk.mango.iterators.BoundedIterator()
  - [-0.403626][Decrease Field Security] 'test_' of 'uk.co.jezuk.mango.Bind$2' to 'PUBLIC'
  - [-0.403626][Decrease Method Security] 'TransformIterator(java.util.Iterator,uk.co.jezuk.mango.Function)' of 'uk.co.jezuk.mango.Iterators' to 'PROTECTED'
  - [-0.403626][Increase Method Security] 'createuk.co.jezuk.mango.unarypredicates.OneOf()' of 'uk.co.jezuk.mango.unarypredicates.OneOf' to 'PROTECTED'
  - [-0.403626][Decrease Method Security] 'execute(java.util.Iterator,java.lang.Object)' of 'uk.co.jezuk.mango.algorithms.Find' to 'PUBLIC'
  - [-0.405790][Remove Class] uk.co.jezuk.mango.BinaryPredicates

====== Task Summary ======

* General Info:
  * Average time across all runs: 7.46 seconds
  * Average quality gain across all runs: 0.003826 (Average Score: -0.406453)
  * Highest quality gain across all runs: 0.008673 (Score: -0.411301)
  * Lowest quality gain across all runs: 0.000000 (Score: -0.402628)
  * Time taken to complete task: 74.60 seconds

* Metric Summary:
  * iFImpl
    * Average Quality Gain: 0.0089 (Average Score: 0.4522)
    * Highest Quality Gain: 0.0218 (Best Score: 0.4651)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.4433)
  * abstractness
    * Average Quality Gain: 0.0027 (Average Score: 0.0294)
    * Highest Quality Gain: 0.0058 (Best Score: 0.0326)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.0268)
  * numInterf
    * Average Quality Gain: 0.0000 (Average Score: 0.7500)
    * Highest Quality Gain: 0.0000 (Best Score: 0.7500)
    * Lowest Quality Gain: 0.0000 (Worst Score: 0.7500)
